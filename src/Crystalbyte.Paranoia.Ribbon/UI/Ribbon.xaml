<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:Crystalbyte.Paranoia.Converters"
                    xmlns:properties="clr-namespace:Crystalbyte.Paranoia.Properties"
                    xmlns:ui="clr-namespace:Crystalbyte.Paranoia.UI">

    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    <converters:RibbonVisibilityToVisibilityConverter x:Key="RibbonVisibilityToVisibilityConverter" />

    <Style x:Key="AppMenuButtonStyle" TargetType="ButtonBase">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Margin" Value="0,0,2,0" />
        <Setter Property="Foreground" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly=ui:RibbonWindow, ResourceId=LightTextBrush}}" />
        <Setter Property="Background" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly=ui:RibbonWindow, ResourceId=WindowAccentBrush}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly=ui:RibbonWindow, ResourceId=WindowAccentBrush}}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ButtonBase">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <ContentPresenter Margin="18,4,18,4"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />

                            <Rectangle Name="HoverOverlay"
                                       Fill="WhiteSmoke"
                                       Opacity=".2"
                                       StrokeThickness="0"
                                       Visibility="Collapsed" />

                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="HoverOverlay" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ui:Ribbon">
        <Setter Property="Padding" Value="1" />
        <Setter Property="BorderThickness" Value="0,1,0,1" />
        <Setter Property="Background" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly=ui:RibbonWindow, ResourceId=WindowBackgroundBrush}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly=ui:RibbonWindow, ResourceId=RibbonBorderBrush}}" />
        <Setter Property="AppMenuText" Value="{x:Static properties:Resources.OpenAppMenuHeader}" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ui:Ribbon">
                    <Grid Background="{TemplateBinding Background}"
                          ClipToBounds="True"
                          KeyboardNavigation.TabNavigation="Local"
                          SnapsToDevicePixels="True">
                        <Grid.RowDefinitions>
                            <!--  Redundant window command bar  -->
                            <RowDefinition Height="Auto" />
                            <!--  Ribbon tab bar  -->
                            <RowDefinition Height="Auto" />
                            <!--  Ribbon control strip  -->
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid Grid.Row="0"
                              Grid.Column="0"
                              Grid.ColumnSpan="2"
                              Visibility="{Binding IsWindowCommandStripVisible,
                                                   RelativeSource={RelativeSource TemplatedParent},
                                                   Converter={StaticResource BooleanToVisibilityConverter}}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Image Grid.Column="0" />
                                <ListView Grid.Column="1"
                                          Background="Transparent"
                                          BorderThickness="0" />
                                <Button Grid.Column="2" Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly=ui:RibbonWindow, ResourceId=HelpButtonStyle}}" />
                                <Button Grid.Column="3" Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly=ui:RibbonWindow, ResourceId=RibbonOptionsButtonStyle}}" />
                                <Button Grid.Column="4" Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly=ui:RibbonWindow, ResourceId=MinimizeButtonStyle}}" />
                                <Button Grid.Column="5"
                                        Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly=ui:RibbonWindow,
                                                                                      ResourceId=RestoreDownButtonStyle}}"
                                        Visibility="{Binding IsMaximized,
                                                             RelativeSource={RelativeSource FindAncestor,
                                                                                            AncestorType=ui:RibbonWindow,
                                                                                            AncestorLevel=1},
                                                             Converter={StaticResource BooleanToVisibilityConverter}}" />
                                <Button Grid.Column="6" Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly=ui:RibbonWindow, ResourceId=CloseButtonStyle}}" />
                            </Grid>
                        </Grid>
                        <Button Grid.Row="1"
                                Grid.Column="0"
                                Content="{TemplateBinding AppMenuText}"
                                Style="{StaticResource AppMenuButtonStyle}" />
                        <StackPanel Grid.Row="1"
                                    Grid.Column="1"
                                    Margin="0,0,0,-1"
                                    Panel.ZIndex="1"
                                    Background="Transparent"
                                    IsItemsHost="True"
                                    KeyboardNavigation.TabIndex="1"
                                    Orientation="Horizontal"
                                    WindowChrome.IsHitTestVisibleInChrome="True" />
                        <Border Grid.Row="2"
                                Grid.Column="0"
                                Grid.ColumnSpan="2"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                KeyboardNavigation.DirectionalNavigation="Contained"
                                KeyboardNavigation.TabIndex="2"
                                KeyboardNavigation.TabNavigation="Local"
                                Visibility="{Binding IsCommandStripVisible,
                                                     RelativeSource={RelativeSource TemplatedParent},
                                                     Converter={StaticResource BooleanToVisibilityConverter}}">
                            <ContentPresenter Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="Stretch"
                                              Content="{TemplateBinding SelectedContent}"
                                              ContentTemplate="{TemplateBinding SelectedContentTemplate}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>