<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:Crystalbyte.Paranoia.Converters"
                    xmlns:input="clr-namespace:System.Windows.Input;assembly=PresentationCore"
                    xmlns:local="clr-namespace:Crystalbyte.Paranoia"
                    xmlns:properties="clr-namespace:Crystalbyte.Paranoia.Properties"
                    xmlns:ui="clr-namespace:Crystalbyte.Paranoia.UI">
    <!--
        <Color x:Key="AccentColor"
        A="255"
        B="255"
        G="174"
        R="127" />
    -->

    <Color x:Key="AccentColor"
           A="255"
           B="255"
           G="125"
           R="0" />

    <SolidColorBrush x:Key="{ComponentResourceKey TypeInTargetAssembly=ui:RibbonWindow, ResourceId=RibbonBorderBrush}" Color="#3E3E40" />
    <SolidColorBrush x:Key="{ComponentResourceKey TypeInTargetAssembly=ui:RibbonWindow, ResourceId=WindowBackgroundBrush}" Color="#1E1E1E" />
    <SolidColorBrush x:Key="{ComponentResourceKey TypeInTargetAssembly=ui:RibbonWindow, ResourceId=WindowAccentBrush}" Color="{StaticResource AccentColor}" />
    <SolidColorBrush x:Key="{ComponentResourceKey TypeInTargetAssembly=ui:RibbonWindow, ResourceId=LightTextBrush}" Color="WhiteSmoke" />
    <SolidColorBrush x:Key="{ComponentResourceKey TypeInTargetAssembly=ui:RibbonWindow, ResourceId=DarkTextBrush}" Color="#2D2D30" />
    <SolidColorBrush x:Key="{ComponentResourceKey TypeInTargetAssembly=ui:RibbonWindow, ResourceId=WindowButtonHoverBrush}" Color="#3E3E40" />
    <SolidColorBrush x:Key="{ComponentResourceKey TypeInTargetAssembly=ui:RibbonWindow, ResourceId=WindowButtonBorderBrush}" Color="Transparent" />
    <SolidColorBrush x:Key="{ComponentResourceKey TypeInTargetAssembly=ui:RibbonWindow, ResourceId=WindowButtonBackgroundBrush}" Color="Transparent" />

    <Thickness x:Key="{ComponentResourceKey TypeInTargetAssembly=ui:RibbonWindow, ResourceId=HeaderPadding}">12,4,12,4</Thickness>

    <Style x:Key="WindowCommandButtonStyle" TargetType="ButtonBase">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly=ui:RibbonWindow, ResourceId=WindowButtonBorderBrush}}" />
        <Setter Property="Background" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly=ui:RibbonWindow, ResourceId=WindowButtonBackgroundBrush}}" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Width" Value="32" />
        <Setter Property="Height" Value="24" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Foreground" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly=ui:RibbonWindow, ResourceId=LightTextBrush}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ButtonBase">
                    <Border Margin="{TemplateBinding Margin}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}">
                        <Grid HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly=ui:RibbonWindow, ResourceId=DarkTextBrush}}" />
                <Setter Property="BorderBrush" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly=ui:RibbonWindow, ResourceId=DarkTextBrush}}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsPressed" Value="True" />
                    <Condition Property="IsMouseOver" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly=ui:RibbonWindow, ResourceId=WindowAccentBrush}}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="IsPressed" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly=ui:RibbonWindow, ResourceId=WindowButtonHoverBrush}}" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{ComponentResourceKey TypeInTargetAssembly=ui:RibbonWindow,
                                        ResourceId=RestoreDownButtonStyle}"
           BasedOn="{StaticResource WindowCommandButtonStyle}"
           TargetType="ButtonBase">
        <Setter Property="Command" Value="{x:Static local:WindowCommands.RestoreDown}" />
        <Setter Property="ToolTip" Value="{x:Static properties:Resources.RestoreDownCommandTooltip}" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image Width="10"
                           Height="10"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           Source="/Crystalbyte.Paranoia.Ribbon;component/Assets/restore.png"
                           Stretch="Uniform" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{ComponentResourceKey TypeInTargetAssembly=ui:RibbonWindow,
                                        ResourceId=CloseButtonStyle}"
           BasedOn="{StaticResource WindowCommandButtonStyle}"
           TargetType="ButtonBase">
        <Setter Property="Command" Value="{x:Static local:WindowCommands.Close}" />
        <Setter Property="ToolTip" Value="{x:Static properties:Resources.CloseCommandTooltip}" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image Width="10"
                           Height="10"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           Source="/Crystalbyte.Paranoia.Ribbon;component/Assets/close.png"
                           Stretch="Uniform" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{ComponentResourceKey TypeInTargetAssembly=ui:RibbonWindow,
                                        ResourceId=HelpButtonStyle}"
           BasedOn="{StaticResource WindowCommandButtonStyle}"
           TargetType="ButtonBase">
        <Setter Property="Command" Value="{x:Static input:ApplicationCommands.Help}" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image Height="10"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           Source="/Crystalbyte.Paranoia.Ribbon;component/Assets/help.png"
                           Stretch="Uniform" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{ComponentResourceKey TypeInTargetAssembly=ui:RibbonWindow,
                                        ResourceId=BlendInRibbonButtonStyle}"
           BasedOn="{StaticResource WindowCommandButtonStyle}"
           TargetType="ButtonBase">
        <Setter Property="Command" Value="{x:Static local:RibbonCommands.BlendInRibbon}" />
        <Setter Property="ToolTip" Value="{x:Static properties:Resources.BlendInRibbonCommandTooltip}" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="HorizontalContentAlignment" Value="Right" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <StackPanel Margin="0,0,8,0"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Center"
                                Orientation="Horizontal"
                                SnapsToDevicePixels="False">
                        <Ellipse Width="4"
                                 Height="4"
                                 Fill="WhiteSmoke"
                                 StrokeThickness="0" />
                        <Ellipse Width="4"
                                 Height="4"
                                 Margin="2,0,0,0"
                                 Fill="WhiteSmoke"
                                 StrokeThickness="0" />
                        <Ellipse Width="4"
                                 Height="4"
                                 Margin="2,0,0,0"
                                 Fill="WhiteSmoke"
                                 StrokeThickness="0" />
                    </StackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{ComponentResourceKey TypeInTargetAssembly=ui:RibbonWindow,
                                        ResourceId=MinimizeButtonStyle}"
           BasedOn="{StaticResource WindowCommandButtonStyle}"
           TargetType="ButtonBase">
        <Setter Property="Command" Value="{x:Static local:WindowCommands.Minimize}" />
        <Setter Property="ToolTip" Value="{x:Static properties:Resources.MinimizeCommandTooltip}" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image Width="10"
                           Height="10"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           Source="/Crystalbyte.Paranoia.Ribbon;component/Assets/minimize.png" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{ComponentResourceKey TypeInTargetAssembly=ui:RibbonWindow,
                                        ResourceId=MaximizeButtonStyle}"
           BasedOn="{StaticResource WindowCommandButtonStyle}"
           TargetType="ButtonBase">
        <Setter Property="Command" Value="{x:Static local:WindowCommands.Maximize}" />
        <Setter Property="ToolTip" Value="{x:Static properties:Resources.MaximizeCommandTooltip}" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image Width="10"
                           Height="10"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           Source="/Crystalbyte.Paranoia.Ribbon;component/Assets/maximize.png"
                           Stretch="Uniform" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{ComponentResourceKey TypeInTargetAssembly=ui:RibbonWindow,
                                        ResourceId=RibbonOptionsButtonStyle}"
           BasedOn="{StaticResource WindowCommandButtonStyle}"
           TargetType="ButtonBase">
        <Setter Property="Command" Value="{x:Static local:RibbonCommands.OpenRibbonOptions}" />
        <Setter Property="ToolTip" Value="{x:Static properties:Resources.OpenRibbonOptionsCommandTooltip}" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image Height="10"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           Source="/Crystalbyte.Paranoia.Ribbon;component/Assets/ribbon.png"
                           Stretch="Uniform" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{ComponentResourceKey TypeInTargetAssembly=ui:RibbonWindow,
                                        ResourceId=RibbonGroupButtonStyle}"
           BasedOn="{StaticResource WindowCommandButtonStyle}"
           TargetType="ButtonBase">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image Height="7"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           Source="/Crystalbyte.Paranoia.Ribbon;component/Assets/ribbongroup.command.png"
                           Stretch="Uniform" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>



</ResourceDictionary>