<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:Crystalbyte.Paranoia.Converters"
                    xmlns:local="clr-namespace:Crystalbyte.Paranoia"
                    xmlns:ui="clr-namespace:Crystalbyte.Paranoia.UI">

    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    <converters:RibbonVisibilityToVisibilityConverter x:Key="RibbonVisibilityToVisibilityConverter" />
    <converters:DoubleMultiplier x:Key="DoubleMultiplier" />

    <Style x:Key="RibbonOptionTitleStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly=ui:RibbonWindow, ResourceId=LightTextBrush}}" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Margin" Value="0,3,0,3" />
    </Style>

    <Style x:Key="RibbonOptionDescriptionStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly=ui:RibbonWindow, ResourceId=LightTextBrush}}" />
        <Setter Property="TextTrimming" Value="CharacterEllipsis" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="TextWrapping" Value="Wrap" />
    </Style>

    <Style x:Key="BackButtonStyle" TargetType="ButtonBase">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ButtonBase">
                    <Grid>
                        <Ellipse Width="34"
                                 Height="34"
                                 HorizontalAlignment="Center"
                                 VerticalAlignment="Center" />
                        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ui:RibbonWindow">
        <Setter Property="AllowsTransparency" Value="True" />
        <Setter Property="WindowStyle" Value="None" />
        <Setter Property="ResizeMode" Value="CanResizeWithGrip" />
        <Setter Property="BorderBrush" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly=ui:RibbonWindow, ResourceId=WindowAccentBrush}}" />
        <Setter Property="Background" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly=ui:RibbonWindow, ResourceId=WindowBackgroundBrush}}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome CaptionHeight="54"
                              GlassFrameThickness="-1"
                              NonClientFrameEdges="None"
                              ResizeBorderThickness="0" />
            </Setter.Value>
        </Setter>
        <Setter Property="StatusBarContainerStyle">
            <Setter.Value>
                <Style BasedOn="{StaticResource {x:Type StatusBarItem}}" TargetType="StatusBarItem">
                    <Setter Property="Margin" Value="0,1,0,1" />
                    <Setter Property="Foreground" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly=ui:RibbonWindow, ResourceId=LightTextBrush}}" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="StatusBarItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <Grid />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <!--  Windows Shell Integration http://www.seritools.de/programmierung/wpf/wpf-fensterrahmen-anpassen-mit-dem-windowchrome/post503.html  -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ui:RibbonWindow">
                    <Border Background="Transparent" Padding="{TemplateBinding FramePadding}">
                        <Border x:Name="WindowBorder"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <!--  window command bar  -->
                                    <RowDefinition Height="Auto" />
                                    <!--  window ribbon  -->
                                    <RowDefinition Height="Auto" />
                                    <!--  window content  -->
                                    <RowDefinition Height="*" />
                                    <!--  status bar  -->
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>

                                <Grid x:Name="CommandBar"
                                      Grid.Row="0"
                                      HorizontalAlignment="Stretch">
                                    <Grid.ColumnDefinitions>
                                        <!--  window icon  -->
                                        <ColumnDefinition Width="Auto" />
                                        <!--  window title  -->
                                        <ColumnDefinition Width="Auto" MaxWidth="300" />
                                        <!--  empty command space  -->
                                        <ColumnDefinition Width="*" />
                                        <!--  help button  -->
                                        <ColumnDefinition Width="Auto" />
                                        <!--  ribbon options button  -->
                                        <ColumnDefinition Width="Auto" />
                                        <!--  minimize button  -->
                                        <ColumnDefinition Width="Auto" />
                                        <!--  restore down button  -->
                                        <ColumnDefinition Width="Auto" />
                                        <!--  maximize down button  -->
                                        <ColumnDefinition Width="Auto" />
                                        <!--  close button  -->
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Image Grid.Column="0"
                                           Height="20"
                                           Margin="8"
                                           RenderOptions.BitmapScalingMode="Fant"
                                           Source="{TemplateBinding Icon}"
                                           Stretch="Uniform"
                                           Visibility="{Binding RibbonVisibility,
                                                                RelativeSource={RelativeSource FindAncestor,
                                                                                               AncestorType=ui:RibbonWindow,
                                                                                               AncestorLevel=1},
                                                                Converter={StaticResource RibbonVisibilityToVisibilityConverter},
                                                                ConverterParameter=Tabs|TabsAndCommands}" />
                                    <Button Grid.Column="0"
                                            Grid.ColumnSpan="3"
                                            Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly=ui:RibbonWindow,
                                                                                          ResourceId=BlendInRibbonButtonStyle}}"
                                            Visibility="{Binding RibbonVisibility,
                                                                 RelativeSource={RelativeSource TemplatedParent},
                                                                 Converter={StaticResource RibbonVisibilityToVisibilityConverter},
                                                                 ConverterParameter=Hidden}" />
                                    <TextBlock Grid.Column="1"
                                               Margin="0,-3,0,0"
                                               VerticalAlignment="Center"
                                               Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly=ui:RibbonWindow,
                                                                                             ResourceId=WindowTitleStyle}}"
                                               Text="{TemplateBinding Title}"
                                               Visibility="{Binding RibbonVisibility,
                                                                    RelativeSource={RelativeSource FindAncestor,
                                                                                                   AncestorType=ui:RibbonWindow,
                                                                                                   AncestorLevel=1},
                                                                    Converter={StaticResource RibbonVisibilityToVisibilityConverter},
                                                                    ConverterParameter=Tabs|TabsAndCommands}" />
                                    <ItemsControl Grid.Column="2" ItemsSource="{TemplateBinding QuickAccessItems}">
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate DataType="local:IQuickAccessConform">
                                                <Border>
                                                    <Button Height="20"
                                                            Command="{Binding Command}"
                                                            CommandParameter="{Binding CommandParameter}"
                                                            ToolTip="{Binding Tooltip}">
                                                        <Image Source="{Binding QuickAccessImageSource}" />
                                                    </Button>
                                                </Border>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>
                                    <Button Grid.Column="3"
                                            Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly=ui:RibbonWindow,
                                                                                          ResourceId=HelpButtonStyle}}"
                                            Visibility="{Binding RibbonVisibility,
                                                                 RelativeSource={RelativeSource FindAncestor,
                                                                                                AncestorType=ui:RibbonWindow,
                                                                                                AncestorLevel=1},
                                                                 Converter={StaticResource RibbonVisibilityToVisibilityConverter},
                                                                 ConverterParameter=Tabs|TabsAndCommands}" />
                                    <Button Grid.Column="4" Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly=ui:RibbonWindow, ResourceId=RibbonOptionsButtonStyle}}" />
                                    <Button Grid.Column="5"
                                            Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly=ui:RibbonWindow,
                                                                                          ResourceId=MinimizeButtonStyle}}"
                                            Visibility="{Binding RibbonVisibility,
                                                                 RelativeSource={RelativeSource TemplatedParent},
                                                                 Converter={StaticResource RibbonVisibilityToVisibilityConverter},
                                                                 ConverterParameter=Tabs|TabsAndCommands}" />
                                    <Border Grid.Column="6"
                                            Background="Transparent"
                                            BorderThickness="0"
                                            Visibility="{Binding RibbonVisibility,
                                                                 RelativeSource={RelativeSource TemplatedParent},
                                                                 Converter={StaticResource RibbonVisibilityToVisibilityConverter},
                                                                 ConverterParameter=Tabs|TabsAndCommands}">
                                        <Button Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly=ui:RibbonWindow, ResourceId=MaximizeButtonStyle}}" Visibility="{Binding IsNormalized, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                    </Border>
                                    <Border Grid.Column="7"
                                            Background="Transparent"
                                            BorderThickness="0"
                                            Visibility="{Binding RibbonVisibility,
                                                                 RelativeSource={RelativeSource TemplatedParent},
                                                                 Converter={StaticResource RibbonVisibilityToVisibilityConverter},
                                                                 ConverterParameter=Tabs|TabsAndCommands}">
                                        <Button Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly=ui:RibbonWindow, ResourceId=RestoreDownButtonStyle}}" Visibility="{Binding IsMaximized, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                    </Border>
                                    <Button Grid.Column="8" Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly=ui:RibbonWindow, ResourceId=CloseButtonStyle}}" />
                                </Grid>

                                <ui:Ribbon x:Name="PART_Ribbon"
                                           Grid.Row="1"
                                           ItemsSource="{TemplateBinding Tabs}">
                                    <ui:Ribbon.RenderTransform>
                                        <TranslateTransform x:Name="RibbonTranslateTransform" />
                                    </ui:Ribbon.RenderTransform>
                                    <ui:Ribbon.Resources>
                                        <Storyboard x:Key="RibbonBlendInStoryboard">
                                            <DoubleAnimation BeginTime="0:0:0"
                                                             Duration="0:0:0.2"
                                                             From="{Binding ActualHeight,
                                                                            ElementName=PART_Ribbon,
                                                                            Converter={StaticResource DoubleMultiplier},
                                                                            ConverterParameter=-1}"
                                                             Storyboard.TargetName="RibbonTranslateTransform"
                                                             Storyboard.TargetProperty="Y"
                                                             To="0">
                                                <DoubleAnimation.EasingFunction>
                                                    <CubicEase EasingMode="EaseOut" />
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </ui:Ribbon.Resources>
                                </ui:Ribbon>

                                <ContentPresenter Grid.Row="2" Grid.Column="0" />

                                <Popup x:Name="PART_RibbonOptionsPopup"
                                       Grid.Row="0"
                                       Placement="Bottom"
                                       StaysOpen="False">
                                    <Border Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly=ui:RibbonWindow,
                                                                                               ResourceId=WindowBackgroundBrush}}"
                                            BorderBrush="{DynamicResource {ComponentResourceKey TypeInTargetAssembly=ui:RibbonWindow,
                                                                                                ResourceId=WindowAccentBrush}}"
                                            BorderThickness="1">
                                        <ListView x:Name="PART_RibbonOptionsList"
                                                  Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly=ui:RibbonWindow,
                                                                                                     ResourceId=WindowBackgroundBrush}}"
                                                  BorderThickness="0"
                                                  SelectionMode="Single">
                                            <ListView.ItemContainerStyle>
                                                <Style TargetType="ListViewItem">
                                                    <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="ListViewItem">
                                                                <Border x:Name="Border"
                                                                        Margin="1"
                                                                        Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly=ui:RibbonWindow,
                                                                                                                           ResourceId=WindowBackgroundBrush}}">
                                                                    <Grid>
                                                                        <Rectangle Fill="{DynamicResource {ComponentResourceKey TypeInTargetAssembly=ui:RibbonWindow,
                                                                                                                                ResourceId=WindowBackgroundBrush}}"
                                                                                   Opacity=".8"
                                                                                   StrokeThickness="0" />
                                                                        <ContentPresenter />
                                                                    </Grid>
                                                                </Border>
                                                                <ControlTemplate.Triggers>
                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                        <Setter TargetName="Border" Property="Background" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly=ui:RibbonWindow, ResourceId=WindowAccentBrush}}" />
                                                                    </Trigger>
                                                                </ControlTemplate.Triggers>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </ListView.ItemContainerStyle>
                                            <ListView.ItemTemplate>
                                                <DataTemplate DataType="ui:RibbonOption">
                                                    <Grid>
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition Height="Auto" />
                                                            <RowDefinition Height="*" />
                                                        </Grid.RowDefinitions>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="Auto" />
                                                            <ColumnDefinition Width="280" />
                                                        </Grid.ColumnDefinitions>
                                                        <Border Grid.Row="0"
                                                                Grid.RowSpan="2"
                                                                Grid.Column="0"
                                                                Margin="3,3,5,3"
                                                                VerticalAlignment="Top">
                                                            <Grid>
                                                                <Image Width="30"
                                                                       Margin="3"
                                                                       HorizontalAlignment="Center"
                                                                       VerticalAlignment="Center"
                                                                       Source="{Binding ImageSource,
                                                                                        IsAsync=True,
                                                                                        Mode=OneTime}"
                                                                       Stretch="Uniform" />
                                                                <Rectangle x:Name="SelectionOverlay"
                                                                           HorizontalAlignment="Stretch"
                                                                           VerticalAlignment="Stretch"
                                                                           Fill="{DynamicResource {ComponentResourceKey TypeInTargetAssembly=ui:RibbonWindow,
                                                                                                                        ResourceId=WindowAccentBrush}}"
                                                                           Opacity=".2"
                                                                           StrokeThickness="0"
                                                                           Visibility="{Binding IsSelected,
                                                                                                Converter={StaticResource BooleanToVisibilityConverter}}" />
                                                                <Rectangle x:Name="SelectionOverlayBorder"
                                                                           HorizontalAlignment="Stretch"
                                                                           VerticalAlignment="Stretch"
                                                                           Fill="Transparent"
                                                                           Stroke="{DynamicResource {ComponentResourceKey TypeInTargetAssembly=ui:RibbonWindow,
                                                                                                                          ResourceId=WindowAccentBrush}}"
                                                                           StrokeThickness="1"
                                                                           Visibility="{Binding IsSelected,
                                                                                                Converter={StaticResource BooleanToVisibilityConverter}}" />
                                                            </Grid>
                                                        </Border>
                                                        <TextBlock Grid.Row="0"
                                                                   Grid.Column="1"
                                                                   Style="{StaticResource RibbonOptionTitleStyle}"
                                                                   Text="{Binding Title,
                                                                                  Mode=OneTime}" />
                                                        <TextBlock Grid.Row="1"
                                                                   Grid.Column="1"
                                                                   Style="{StaticResource RibbonOptionDescriptionStyle}"
                                                                   Text="{Binding Description,
                                                                                  Mode=OneTime}" />
                                                    </Grid>
                                                    <DataTemplate.Triggers>
                                                        <DataTrigger Binding="{Binding IsSelected}" Value="True">
                                                            <Setter TargetName="SelectionOverlay" Property="Visibility" Value="Visible" />
                                                            <Setter TargetName="SelectionOverlayBorder" Property="Visibility" Value="Visible" />
                                                        </DataTrigger>
                                                    </DataTemplate.Triggers>
                                                </DataTemplate>
                                            </ListView.ItemTemplate>
                                        </ListView>
                                    </Border>
                                </Popup>

                                <StatusBar x:Name="PART_StatusBar"
                                           Grid.Row="3"
                                           Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly=ui:RibbonWindow,
                                                                                              ResourceId=WindowAccentBrush}}"
                                           ItemContainerStyle="{TemplateBinding StatusBarContainerStyle}"
                                           ItemTemplate="{TemplateBinding StatusBarItemTemplate}"
                                           ItemsPanel="{TemplateBinding StatusBarItemsPanel}"
                                           ItemsSource="{TemplateBinding StatusBarItemsSource}">
                                    <StatusBar.RenderTransform>
                                        <TranslateTransform x:Name="StatusBarTranslateTransform" />
                                    </StatusBar.RenderTransform>
                                    <StatusBar.Resources>
                                        <Storyboard x:Key="StatusBarBlendInStoryboard">
                                            <DoubleAnimation BeginTime="0:0:0"
                                                             Duration="0:0:0.2"
                                                             From="{Binding ActualHeight,
                                                                            ElementName=PART_StatusBar}"
                                                             Storyboard.TargetName="StatusBarTranslateTransform"
                                                             Storyboard.TargetProperty="Y"
                                                             To="0">
                                                <DoubleAnimation.EasingFunction>
                                                    <CubicEase EasingMode="EaseOut" />
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </StatusBar.Resources>
                                </StatusBar>

                                <ResizeGrip Grid.Row="3"
                                            HorizontalAlignment="Right"
                                            VerticalAlignment="Bottom"
                                            Visibility="{Binding IsNormalized,
                                                                 RelativeSource={RelativeSource TemplatedParent},
                                                                 Converter={StaticResource BooleanToVisibilityConverter}}"
                                            WindowChrome.ResizeGripDirection="BottomRight" />
                            </Grid>
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>
</ResourceDictionary>