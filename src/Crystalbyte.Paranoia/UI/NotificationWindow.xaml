<ui:MetroWindow x:Class="Crystalbyte.Paranoia.UI.NotificationWindow"
                xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                xmlns:paranoia="clr-namespace:Crystalbyte.Paranoia"
                xmlns:themes="clr-namespace:Crystalbyte.Paranoia.Themes;assembly=Crystalbyte.Paranoia.Themes"
                xmlns:ui="clr-namespace:Crystalbyte.Paranoia.UI;assembly=Crystalbyte.Paranoia.Controls"
                x:Name="Window"
                Width="325"
                Height="80"
                MinWidth="0"
                MinHeight="0"
                Margin="4"
                AllowsTransparency="True"
                Background="Transparent"
                MouseLeftButtonUp="OnWindowMouseLeftButtonUp"
                ResizeMode="NoResize"
                ShowInTaskbar="False"
                Topmost="True"
                WindowStyle="None"
                d:DataContext="{d:DesignInstance paranoia:NotificationWindowContext}"
                mc:Ignorable="d">
    <Window.Resources>
        <Storyboard x:Key="EntryAnimation">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                <EasingDoubleKeyFrame KeyTime="0:0:6" Value="1" />
                <EasingDoubleKeyFrame KeyTime="0:0:8" Value="0" />
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                <EasingDoubleKeyFrame KeyTime="0" Value="385" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CubicEase EasingMode="EaseInOut" />
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="ExitAnimation">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="400">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CubicEase EasingMode="EaseIn" />
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
    </Window.Resources>
    <Grid x:Name="LayoutRoot" RenderTransformOrigin="0,1">
        <Grid.RenderTransform>
            <TransformGroup>
                <ScaleTransform />
                <SkewTransform />
                <RotateTransform />
                <TranslateTransform />
            </TransformGroup>
        </Grid.RenderTransform>
        <Border Background="{DynamicResource {x:Static themes:ThemeResourceKeys.WindowBackgroundBrushKey}}" BorderThickness="0">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Image Grid.Column="0"
                       Width="56"
                       Height="56"
                       Margin="8"
                       HorizontalAlignment="Stretch"
                       VerticalAlignment="Stretch"
                       Source="{Binding FromAddress,
                                        IsAsync=True,
                                        Converter={StaticResource GravatarImageConverter}}" />
                <StackPanel Grid.Column="1" VerticalAlignment="Center">
                    <TextBlock Margin="0"
                               FontSize="{DynamicResource {x:Static themes:ThemeResourceKeys.AppMediumLargeFontSizeKey}}"
                               FontWeight="Normal"
                               Style="{StaticResource TitleTextStyle}"
                               Text="{Binding FromName}"
                               TextTrimming="CharacterEllipsis"
                               TextWrapping="NoWrap" />

                    <TextBlock FontWeight="Normal"
                               Style="{StaticResource SubtitleTextBlockStyle}"
                               Text="{Binding Subject}"
                               TextTrimming="CharacterEllipsis"
                               TextWrapping="NoWrap" />
                </StackPanel>
                <Button Grid.Column="2"
                        Width="22"
                        Height="22"
                        VerticalAlignment="Top"
                        BorderThickness="0"
                        Click="OnCloseButtonClicked"
                        Padding="0"
                        WindowChrome.IsHitTestVisibleInChrome="True">
                    <Rectangle Width="10"
                               Height="10"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               Fill="{DynamicResource {x:Static themes:ThemeResourceKeys.AppForegroundBrushKey}}"
                               UseLayoutRounding="True">
                        <Rectangle.OpacityMask>
                            <ImageBrush ImageSource="/Assets/close.png" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                </Button>
            </Grid>
        </Border>
    </Grid>
</ui:MetroWindow>