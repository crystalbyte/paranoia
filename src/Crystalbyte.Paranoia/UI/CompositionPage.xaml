<Page x:Class="Crystalbyte.Paranoia.UI.CompositionPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:controls="clr-namespace:Crystalbyte.Paranoia.UI;assembly=Crystalbyte.Paranoia.Controls"
      xmlns:converters="clr-namespace:Crystalbyte.Paranoia.UI.Converters"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:paranoia="clr-namespace:Crystalbyte.Paranoia"
      xmlns:properties="clr-namespace:Crystalbyte.Paranoia.Properties"
      xmlns:system="clr-namespace:System;assembly=mscorlib"
      xmlns:themes="clr-namespace:Crystalbyte.Paranoia.Themes;assembly=Crystalbyte.Paranoia.Themes"
      Title="{Binding Subject,
                      Mode=OneWay}"
      FocusManager.FocusedElement="{Binding ElementName=RecipientsBox}"
      d:DataContext="{d:DesignInstance paranoia:MailCompositionContext}"
      d:DesignHeight="480"
      d:DesignWidth="768"
      mc:Ignorable="d">
    <Page.Resources>
        <DataTemplate x:Key="ContactSuggestionTemplate" DataType="paranoia:MailContactContext">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Image Grid.Column="0"
                       Width="32"
                       Margin="2,2,6,2"
                       HorizontalAlignment="Stretch"
                       RenderOptions.BitmapScalingMode="Fant"
                       Source="{Binding Address,
                                        IsAsync=True,
                                        Converter={StaticResource GravatarImageConverter},
                                        ConverterParameter=48}"
                       Stretch="Uniform" />
                <StackPanel Grid.Column="1" VerticalAlignment="Center">
                    <TextBlock FontSize="{DynamicResource {x:Static themes:ThemeResourceKeys.NormalTextLargeFontSizeKey}}"
                               FontWeight="Thin"
                               Foreground="{DynamicResource {x:Static themes:ThemeResourceKeys.NormalTextForegroundBrushKey}}"
                               Text="{Binding Name}" />
                    <TextBlock FontSize="{DynamicResource {x:Static themes:ThemeResourceKeys.NormalTextSmallFontSizeKey}}" Text="{Binding Address}">
                        <TextBlock.Foreground>
                            <Binding Mode="OneWay" Path="IsSelected">
                                <Binding.Converter>
                                    <converters:BooleanToBrushConverter BrushForFalse="{DynamicResource {x:Static themes:ThemeResourceKeys.NormalTextSecondaryForegroundBrushKey}}" BrushForTrue="{DynamicResource {x:Static themes:ThemeResourceKeys.NormalTextForegroundBrushKey}}" />
                                </Binding.Converter>
                            </Binding>
                        </TextBlock.Foreground>
                    </TextBlock>
                </StackPanel>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="StringTokenTemplate" DataType="system:String">
            <Grid>
                <Rectangle HorizontalAlignment="Stretch"
                           VerticalAlignment="Stretch"
                           Fill="#222" />
                <StackPanel Margin="0,0,3,0" Orientation="Horizontal">
                    <Border Background="Transparent"
                            BorderBrush="{DynamicResource {x:Static themes:ThemeResourceKeys.AppAccentBrushKey}}"
                            BorderThickness="0,0,3,0"
                            RenderOptions.EdgeMode="Aliased"
                            UseLayoutRounding="True">
                        <Image Width="16"
                               VerticalAlignment="Center"
                               RenderOptions.BitmapScalingMode="Linear"
                               Source="{Binding IsAsync=True,
                                                Converter={StaticResource GravatarImageConverter},
                                                ConverterParameter=32}" />
                    </Border>
                    <TextBlock Margin="2,0,2,0"
                               Background="Transparent"
                               FontWeight="Normal"
                               Foreground="{DynamicResource {x:Static themes:ThemeResourceKeys.NormalTextForegroundBrushKey}}"
                               Text="{Binding}" />
                </StackPanel>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="ContactTokenTemplate" DataType="paranoia:MailContactContext">
            <Grid RenderOptions.EdgeMode="Aliased" SnapsToDevicePixels="True">
                <Rectangle HorizontalAlignment="Stretch"
                           VerticalAlignment="Stretch"
                           Fill="#222" />
                <StackPanel Margin="0,0,3,0" Orientation="Horizontal">
                    <Border Height="16"
                            Margin="0,0,4,0"
                            BorderBrush="{Binding Security,
                                                  Converter={StaticResource SecurityToColorConverter}}"
                            BorderThickness="0,0,3,0">
                        <Image MinWidth="16"
                               VerticalAlignment="Stretch"
                               RenderOptions.BitmapScalingMode="Linear"
                               Source="{Binding Address,
                                                IsAsync=True,
                                                Converter={StaticResource GravatarImageConverter},
                                                ConverterParameter=32}"
                               Stretch="UniformToFill" />
                    </Border>
                    <TextBlock Margin="2,0,2,0" Text="{Binding NameOrAddress}" />
                </StackPanel>
            </Grid>
        </DataTemplate>
    </Page.Resources>
    <Page.InputBindings>
        <KeyBinding Key="Enter"
                    Command="{Binding SendCommand}"
                    Modifiers="Control" />
    </Page.InputBindings>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="32" />
            <RowDefinition Height="32" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Button Grid.Row="0"
                Grid.RowSpan="2"
                Grid.Column="0"
                Width="70"
                Margin="6,3,3,3"
                VerticalAlignment="Stretch"
                Command="{Binding SendCommand}"
                TabIndex="4">
            <Image Width="18" Source="/Assets/message.png" />
        </Button>
        <ComboBox x:Name="AccountComboBox"
                  Grid.Row="0"
                  Grid.RowSpan="2"
                  Grid.Column="1"
                  Width="220"
                  Margin="3"
                  HorizontalAlignment="Stretch"
                  VerticalAlignment="Stretch"
                  ItemsSource="{Binding Accounts}"
                  SelectedIndex="0"
                  SelectedItem="{Binding SelectedAccount}"
                  SelectionChanged="OnAccountSelectionChanged">
            <ComboBox.ItemTemplate>
                <DataTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Image Grid.Row="0"
                               Grid.Column="0"
                               Width="42"
                               Margin="6,0,6,0"
                               VerticalAlignment="Center"
                               RenderOptions.BitmapScalingMode="Fant"
                               Source="{Binding Address,
                                                ConverterParameter=48,
                                                Converter={StaticResource GravatarImageConverter}}" />
                        <StackPanel Grid.Column="1" VerticalAlignment="Center">
                            <TextBlock Margin="2,-2,0,0"
                                       FontSize="{DynamicResource {x:Static themes:ThemeResourceKeys.NormalTextMediumLargeFontSizeKey}}"
                                       FontWeight="Thin"
                                       Foreground="{DynamicResource {x:Static themes:ThemeResourceKeys.NormalTextForegroundBrushKey}}"
                                       RenderOptions.ClearTypeHint="Enabled"
                                       Text="{Binding Name,
                                                      ConverterParameter=...,
                                                      Converter={StaticResource NullOrEmptyFormatter}}"
                                       TextTrimming="CharacterEllipsis"
                                       TextWrapping="NoWrap" />
                            <TextBlock Margin="2,0,2,2"
                                       RenderOptions.ClearTypeHint="Enabled"
                                       Text="{Binding Address,
                                                      Converter={StaticResource NullOrEmptyFormatter}}"
                                       TextTrimming="CharacterEllipsis"
                                       TextWrapping="NoWrap">
                                <TextBlock.Foreground>
                                    <Binding Mode="OneWay" Path="IsSelected">
                                        <Binding.Converter>
                                            <converters:BooleanToBrushConverter BrushForFalse="{DynamicResource {x:Static themes:ThemeResourceKeys.NormalTextSecondaryForegroundBrushKey}}" BrushForTrue="{DynamicResource {x:Static themes:ThemeResourceKeys.NormalTextForegroundBrushKey}}" />
                                        </Binding.Converter>
                                    </Binding>
                                </TextBlock.Foreground>
                            </TextBlock>
                        </StackPanel>
                    </Grid>
                </DataTemplate>
            </ComboBox.ItemTemplate>
        </ComboBox>
        <controls:SuggestiveTextBox x:Name="RecipientsBox"
                                    Grid.Row="0"
                                    Grid.Column="2"
                                    Margin="3"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Center"
                                    ItemTemplate="{StaticResource ContactSuggestionTemplate}"
                                    ItemsSourceRequested="OnRecipientsBoxItemsSourceRequested"
                                    SelectedValuesChanged="OnRecipientsBoxSelectionChanged"
                                    StringTokenTemplate="{StaticResource StringTokenTemplate}"
                                    TabIndex="0"
                                    TokenTemplate="{StaticResource ContactTokenTemplate}"
                                    Watermark="{x:Static properties:Resources.To}">
            <controls:SuggestiveTextBox.ItemContainerStyle>
                <Style BasedOn="{StaticResource {x:Type ListViewItem}}" TargetType="ListViewItem">
                    <!--  ReSharper disable once Xaml.BindingWithContextNotResolved  -->
                    <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                </Style>
            </controls:SuggestiveTextBox.ItemContainerStyle>
        </controls:SuggestiveTextBox>
        <Grid Grid.Row="0"
              Grid.RowSpan="2"
              Grid.Column="3"
              Margin="3,3,6,3">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Button Grid.Row="0"
                    Width="60"
                    Height="34"
                    VerticalAlignment="Stretch"
                    BorderThickness="1,1,1,0"
                    Command="{Binding AddAttachmentCommand}">
                <Image Width="18" Source="/Assets/attachment.png" />
            </Button>
            <ToggleButton x:Name="CarbonCopyToggleButton"
                          Grid.Row="1"
                          Height="Auto">
                <TextBlock FontSize="{DynamicResource {x:Static themes:ThemeResourceKeys.NormalTextSmallFontSizeKey}}" Foreground="{DynamicResource {x:Static themes:ThemeResourceKeys.NormalTextForegroundBrushKey}}">Cc / Bcc</TextBlock>
            </ToggleButton>
        </Grid>
        <controls:WatermarkTextBox x:Name="SubjectTextBox"
                                   Grid.Row="1"
                                   Grid.Column="2"
                                   Margin="3"
                                   VerticalAlignment="Center"
                                   TabIndex="1"
                                   Text="{Binding Subject,
                                                  UpdateSourceTrigger=PropertyChanged,
                                                  Mode=TwoWay}"
                                   Watermark="{x:Static properties:Resources.Subject}" />
        <StackPanel x:Name="CarbonCopyGrid"
                    Grid.Row="2"
                    Grid.Column="0"
                    Grid.ColumnSpan="4"
                    Margin="6,0,6,0"
                    Visibility="{Binding IsChecked,
                                         ElementName=CarbonCopyToggleButton,
                                         Converter={StaticResource BooleanToVisibilityConverter}}">
            <controls:SuggestiveTextBox x:Name="CarbonCopyBox"
                                        HorizontalAlignment="Stretch"
                                        ItemTemplate="{StaticResource ContactSuggestionTemplate}"
                                        ItemsSourceRequested="OnRecipientsBoxItemsSourceRequested"
                                        SelectedValuesChanged="OnRecipientsBoxSelectionChanged"
                                        StringTokenTemplate="{StaticResource StringTokenTemplate}"
                                        TokenTemplate="{StaticResource ContactTokenTemplate}"
                                        Visibility="{Binding IsChecked,
                                                             ElementName=CopyButton,
                                                             Converter={StaticResource BooleanToVisibilityConverter}}"
                                        Watermark="{x:Static properties:Resources.CarbonCopies}">
                <controls:SuggestiveTextBox.ItemContainerStyle>
                    <Style BasedOn="{StaticResource {x:Type ListViewItem}}" TargetType="ListViewItem">

                        <!--  ReSharper disable once Xaml.BindingWithContextNotResolved  -->

                        <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                    </Style>
                </controls:SuggestiveTextBox.ItemContainerStyle>
            </controls:SuggestiveTextBox>
            <controls:SuggestiveTextBox x:Name="BlindCarbonCopyBox"
                                        HorizontalAlignment="Stretch"
                                        ItemTemplate="{StaticResource ContactSuggestionTemplate}"
                                        ItemsSourceRequested="OnRecipientsBoxItemsSourceRequested"
                                        SelectedValuesChanged="OnRecipientsBoxSelectionChanged"
                                        StringTokenTemplate="{StaticResource StringTokenTemplate}"
                                        TokenTemplate="{StaticResource ContactTokenTemplate}"
                                        Visibility="{Binding IsChecked,
                                                             ElementName=CopyButton,
                                                             Converter={StaticResource BooleanToVisibilityConverter}}"
                                        Watermark="{x:Static properties:Resources.BlindCarbonCopies}">
                <controls:SuggestiveTextBox.ItemContainerStyle>
                    <Style BasedOn="{StaticResource {x:Type ListViewItem}}" TargetType="ListViewItem">
                        <!--  ReSharper disable once Xaml.BindingWithContextNotResolved  -->
                        <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                    </Style>
                </controls:SuggestiveTextBox.ItemContainerStyle>
            </controls:SuggestiveTextBox>
        </StackPanel>

        <!--  ttt  -->
        <ListView Grid.Row="4"
                  Grid.Column="0"
                  Grid.ColumnSpan="4"
                  Background="Transparent"
                  ItemTemplate="{StaticResource ThumbnailTemplate}"
                  ItemsSource="{Binding Attachments}"
                  ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                  ScrollViewer.VerticalScrollBarVisibility="Auto">
            <ListView.Style>
                <Style BasedOn="{StaticResource {x:Type ListView}}" TargetType="ListView">
                    <Style.Triggers>
                        <Trigger Property="HasItems" Value="False">
                            <Setter Property="Visibility" Value="Hidden" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </ListView.Style>
            <ListView.ItemsPanel>
                <ItemsPanelTemplate>
                    <WrapPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </ListView.ItemsPanel>
        </ListView>
        <Border Grid.Row="4"
                Grid.Column="0"
                Grid.ColumnSpan="4"
                Margin="0,3,0,0"
                BorderThickness="0"
                Padding="0">
            <controls:HtmlControl x:Name="HtmlControl"
                                  HorizontalAlignment="Stretch"
                                  VerticalAlignment="Stretch"
                                  AllowDrop="True"
                                  BorderThickness="0"
                                  Drop="DropHtmlControl"
                                  IsTransparent="True"
                                  RenderTransformOrigin="0.5,0.5"
                                  Source="{Binding Source,
                                                   Mode=TwoWay}"
                                  TabIndex="3"
                                  UseLayoutRounding="True"
                                  WebSession="{Binding Source={StaticResource CompositionWebSessionProvider}}"
                                  d:IsHidden="True" />
        </Border>
    </Grid>
</Page>