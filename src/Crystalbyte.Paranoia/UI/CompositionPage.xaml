<Page x:Class="Crystalbyte.Paranoia.UI.CompositionPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:controls="clr-namespace:Crystalbyte.Paranoia.UI;assembly=Crystalbyte.Paranoia.Controls"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:paranoia="clr-namespace:Crystalbyte.Paranoia"
      xmlns:properties="clr-namespace:Crystalbyte.Paranoia.Properties"
      xmlns:system="clr-namespace:System;assembly=mscorlib"
      xmlns:themes="clr-namespace:Crystalbyte.Paranoia.Themes;assembly=Crystalbyte.Paranoia.Themes"
      xmlns:ui="clr-namespace:Crystalbyte.Paranoia.UI"
      Title="{Binding Subject,
                      Mode=OneWay}"
      Background="{DynamicResource {x:Static themes:ThemeResourceKeys.WindowBackgroundBrushKey}}"
      d:DataContext="{d:DesignInstance paranoia:MailCompositionContext}"
      d:DesignHeight="480"
      d:DesignWidth="768"
      mc:Ignorable="d">
    <Page.Resources>
        <DataTemplate x:Key="ContactSuggestionTemplate" DataType="paranoia:MailContactContext">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Image Grid.Column="0"
                       Width="32"
                       Height="32"
                       Margin="3"
                       HorizontalAlignment="Stretch"
                       RenderOptions.BitmapScalingMode="Fant"
                       Source="{Binding Address,
                                        IsAsync=True,
                                        Converter={StaticResource GravatarImageConverter},
                                        ConverterParameter=48}"
                       Stretch="Uniform" />
                <StackPanel Grid.Column="1" VerticalAlignment="Center">
                    <TextBlock FontSize="{DynamicResource {x:Static themes:ThemeResourceKeys.AppMediumLargeFontSizeKey}}"
                               Foreground="{DynamicResource {x:Static themes:ThemeResourceKeys.AppForegroundBrushKey}}"
                               Text="{Binding Name}" />
                    <TextBlock x:Name="AddressBlock"
                               FontSize="{DynamicResource {x:Static themes:ThemeResourceKeys.AppMediumFontSizeKey}}"
                               Foreground="{DynamicResource {x:Static themes:ThemeResourceKeys.AppSecondaryForegroundBrushKey}}"
                               Text="{Binding Address}" />
                </StackPanel>
            </Grid>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding IsSelected}" Value="True">
                    <Setter TargetName="AddressBlock" Property="Foreground" Value="{DynamicResource {x:Static themes:ThemeResourceKeys.AppForegroundBrushKey}}" />
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>
        <DataTemplate x:Key="StringTokenTemplate" DataType="system:String">
            <Grid>
                <Rectangle HorizontalAlignment="Stretch"
                           VerticalAlignment="Stretch"
                           Fill="#222" />
                <StackPanel Margin="0,0,3,0" Orientation="Horizontal">
                    <Border Background="Transparent"
                            BorderBrush="{DynamicResource {x:Static themes:ThemeResourceKeys.AppAccentBrushKey}}"
                            BorderThickness="0,0,3,0"
                            RenderOptions.EdgeMode="Aliased"
                            UseLayoutRounding="True">
                        <Image Width="16"
                               VerticalAlignment="Center"
                               RenderOptions.BitmapScalingMode="Linear"
                               Source="{Binding IsAsync=True,
                                                Converter={StaticResource GravatarImageConverter},
                                                ConverterParameter=32}" />
                    </Border>
                    <TextBlock Margin="2,0,2,0"
                               Background="Transparent"
                               FontWeight="Normal"
                               Foreground="{DynamicResource {x:Static themes:ThemeResourceKeys.AppForegroundBrushKey}}"
                               Text="{Binding}" />
                </StackPanel>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="ContactTokenTemplate" DataType="paranoia:MailContactContext">
            <Grid MaxWidth="180"
                  RenderOptions.EdgeMode="Aliased"
                  SnapsToDevicePixels="True">
                <Rectangle HorizontalAlignment="Stretch"
                           VerticalAlignment="Stretch"
                           Fill="{DynamicResource {x:Static themes:ThemeResourceKeys.WindowBackgroundBrushKey}}" />
                <StackPanel Margin="0,0,3,0" Orientation="Horizontal">
                    <Border Height="16"
                            Margin="0,0,4,0"
                            BorderBrush="{Binding Security,
                                                  Converter={StaticResource SecurityToColorConverter}}"
                            BorderThickness="0,0,3,0">
                        <Image MinWidth="16"
                               VerticalAlignment="Stretch"
                               RenderOptions.BitmapScalingMode="Linear"
                               Source="{Binding Address,
                                                IsAsync=True,
                                                Converter={StaticResource GravatarImageConverter},
                                                ConverterParameter=32}"
                               Stretch="UniformToFill" />
                    </Border>
                    <TextBlock Margin="2,0,2,0"
                               Foreground="{DynamicResource {x:Static themes:ThemeResourceKeys.AppForegroundBrushKey}}"
                               Text="{Binding NameOrAddress}"
                               TextTrimming="CharacterEllipsis"
                               TextWrapping="NoWrap" />
                </StackPanel>
            </Grid>
        </DataTemplate>
    </Page.Resources>
    <Page.InputBindings>
        <KeyBinding Key="Enter"
                    Command="{Binding SendCommand}"
                    Modifiers="Control" />
    </Page.InputBindings>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Button Grid.Row="0"
                Grid.RowSpan="2"
                Grid.Column="0"
                Width="70"
                Margin="6"
                VerticalAlignment="Stretch"
                Command="{Binding SendCommand}"
                TabIndex="4">
            <Rectangle Width="18"
                       Height="18"
                       Fill="{DynamicResource {x:Static themes:ThemeResourceKeys.AppForegroundBrushKey}}">
                <Rectangle.OpacityMask>
                    <ImageBrush ImageSource="/Assets/message.png" />
                </Rectangle.OpacityMask>
            </Rectangle>
        </Button>
        <ComboBox x:Name="AccountComboBox"
                  Grid.Row="0"
                  Grid.RowSpan="2"
                  Grid.Column="1"
                  Width="220"
                  Margin="0,6,3,6"
                  HorizontalAlignment="Stretch"
                  VerticalAlignment="Stretch"
                  DataContextChanged="OnAccountComboboxDataContextChanged"
                  ItemsSource="{Binding Accounts}"
                  SelectedIndex="0"
                  SelectedItem="{Binding SelectedAccount}"
                  SelectionChanged="OnAccountSelectionChanged">
            <ComboBox.ItemTemplate>
                <DataTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Image Grid.Row="0"
                               Grid.Column="0"
                               Width="42"
                               Margin="0,0,4,0"
                               VerticalAlignment="Center"
                               RenderOptions.BitmapScalingMode="Fant"
                               Source="{Binding Address,
                                                ConverterParameter=48,
                                                Converter={StaticResource GravatarImageConverter}}" />
                        <StackPanel Grid.Column="1" VerticalAlignment="Center">
                            <TextBlock Margin="2,-2,0,0"
                                       FontSize="{DynamicResource {x:Static themes:ThemeResourceKeys.AppMediumLargeFontSizeKey}}"
                                       FontWeight="Thin"
                                       Foreground="{DynamicResource {x:Static themes:ThemeResourceKeys.AppForegroundBrushKey}}"
                                       RenderOptions.ClearTypeHint="Enabled"
                                       Text="{Binding Name,
                                                      ConverterParameter=...,
                                                      Converter={StaticResource NullOrEmptyFormatter}}"
                                       TextTrimming="CharacterEllipsis"
                                       TextWrapping="NoWrap" />
                            <TextBlock x:Name="AddressBlock"
                                       Margin="2,0,2,2"
                                       Foreground="{DynamicResource {x:Static themes:ThemeResourceKeys.AppSecondaryForegroundBrushKey}}"
                                       RenderOptions.ClearTypeHint="Enabled"
                                       Text="{Binding Address,
                                                      Converter={StaticResource NullOrEmptyFormatter}}"
                                       TextTrimming="CharacterEllipsis"
                                       TextWrapping="NoWrap" />
                        </StackPanel>
                    </Grid>
                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType=ComboBoxItem}, FallbackValue=False, TargetNullValue=False}" Value="True">
                            <Setter TargetName="AddressBlock" Property="Foreground" Value="{DynamicResource {x:Static themes:ThemeResourceKeys.AppForegroundBrushKey}}" />
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </ComboBox.ItemTemplate>
        </ComboBox>
        <controls:SuggestionBox x:Name="RecipientsBox"
                                    Grid.Row="0"
                                    Grid.Column="2"
                                    Height="24"
                                    Margin="3,6,3,3"
                                    ItemTemplate="{StaticResource ContactSuggestionTemplate}"
                                    ItemsSourceRequested="OnRecipientsBoxItemsSourceRequested"
                                    Padding="3"
                                    SelectedValuesChanged="OnRecipientsBoxSelectionChanged"
                                    StringTokenTemplate="{StaticResource StringTokenTemplate}"
                                    TabIndex="0"
                                    TokenTemplate="{StaticResource ContactTokenTemplate}"
                                    Watermark="{x:Static properties:Resources.To}">
            <controls:SuggestionBox.ItemContainerStyle>
                <Style BasedOn="{StaticResource {x:Type ListViewItem}}" TargetType="ListViewItem">
                    <!--  ReSharper disable once Xaml.BindingWithContextNotResolved  -->
                    <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                </Style>
            </controls:SuggestionBox.ItemContainerStyle>
        </controls:SuggestionBox>
        <Grid Grid.Row="0"
              Grid.RowSpan="2"
              Grid.Column="3"
              Margin="6">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Button Grid.Row="0"
                    Width="60"
                    Height="34"
                    Margin="0"
                    VerticalAlignment="Stretch"
                    BorderThickness="1,1,1,0"
                    Command="{Binding AddAttachmentCommand}">
                <Rectangle Width="18"
                           Height="18"
                           Fill="{DynamicResource {x:Static themes:ThemeResourceKeys.AppForegroundBrushKey}}">
                    <Rectangle.OpacityMask>
                        <ImageBrush ImageSource="/Assets/attachment.png" />
                    </Rectangle.OpacityMask>
                </Rectangle>
            </Button>
            <ToggleButton x:Name="CarbonCopyToggleButton"
                          Grid.Row="1"
                          Padding="0">
                <TextBlock Margin="0,1,0,0"
                           FontSize="{DynamicResource {x:Static themes:ThemeResourceKeys.AppSmallFontSizeKey}}"
                           Foreground="{DynamicResource {x:Static themes:ThemeResourceKeys.AppForegroundBrushKey}}"
                           Padding="0">
                    Cc / Bcc
                </TextBlock>
            </ToggleButton>
        </Grid>
        <controls:WatermarkTextBox x:Name="SubjectTextBox"
                                   Grid.Row="1"
                                   Grid.Column="2"
                                   Height="24"
                                   Margin="3,3,3,6"
                                   Padding="3"
                                   TabIndex="1"
                                   Text="{Binding Subject,
                                                  UpdateSourceTrigger=PropertyChanged,
                                                  Mode=TwoWay}"
                                   Watermark="{x:Static properties:Resources.Subject}" />
        <StackPanel x:Name="CarbonCopyGrid"
                    Grid.Row="2"
                    Grid.Column="0"
                    Grid.ColumnSpan="4"
                    Visibility="{Binding IsChecked,
                                         ElementName=CarbonCopyToggleButton,
                                         Converter={StaticResource BooleanToVisibilityConverter}}">
            <controls:SuggestionBox x:Name="CarbonCopyBox"
                                        Height="24"
                                        Margin="6,0,6,6"
                                        HorizontalAlignment="Stretch"
                                        ItemTemplate="{StaticResource ContactSuggestionTemplate}"
                                        ItemsSourceRequested="OnRecipientsBoxItemsSourceRequested"
                                        Padding="3"
                                        SelectedValuesChanged="OnRecipientsBoxSelectionChanged"
                                        StringTokenTemplate="{StaticResource StringTokenTemplate}"
                                        TokenTemplate="{StaticResource ContactTokenTemplate}"
                                        Visibility="{Binding IsChecked,
                                                             ElementName=CarbonCopyToggleButton,
                                                             Converter={StaticResource BooleanToVisibilityConverter}}"
                                        Watermark="{x:Static properties:Resources.CarbonCopies}">
                <controls:SuggestionBox.ItemContainerStyle>
                    <Style BasedOn="{StaticResource {x:Type ListViewItem}}" TargetType="ListViewItem">
                        <!--  ReSharper disable once Xaml.BindingWithContextNotResolved  -->
                        <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                    </Style>
                </controls:SuggestionBox.ItemContainerStyle>
            </controls:SuggestionBox>
            <controls:SuggestionBox x:Name="BlindCarbonCopyBox"
                                        Height="24"
                                        Margin="6,0,6,6"
                                        HorizontalAlignment="Stretch"
                                        ItemTemplate="{StaticResource ContactSuggestionTemplate}"
                                        ItemsSourceRequested="OnRecipientsBoxItemsSourceRequested"
                                        Padding="3"
                                        SelectedValuesChanged="OnRecipientsBoxSelectionChanged"
                                        StringTokenTemplate="{StaticResource StringTokenTemplate}"
                                        TokenTemplate="{StaticResource ContactTokenTemplate}"
                                        Visibility="{Binding IsChecked,
                                                             ElementName=CarbonCopyToggleButton,
                                                             Converter={StaticResource BooleanToVisibilityConverter}}"
                                        Watermark="{x:Static properties:Resources.BlindCarbonCopies}">
                <controls:SuggestionBox.ItemContainerStyle>
                    <Style BasedOn="{StaticResource {x:Type ListViewItem}}" TargetType="ListViewItem">
                        <!--  ReSharper disable once Xaml.BindingWithContextNotResolved  -->
                        <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                    </Style>
                </controls:SuggestionBox.ItemContainerStyle>
            </controls:SuggestionBox>
        </StackPanel>
        <ListView Grid.Row="2"
                  Grid.Column="0"
                  Grid.ColumnSpan="4"
                  Background="{DynamicResource {x:Static themes:ThemeResourceKeys.WindowSecondaryBackgroundBrushKey}}"
                  BorderThickness="0"
                  ItemTemplate="{StaticResource ThumbnailTemplate}"
                  ItemsSource="{Binding Attachments}"
                  ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                  ScrollViewer.VerticalScrollBarVisibility="Auto">
            <ListView.Style>
                <Style BasedOn="{StaticResource {x:Type ListView}}" TargetType="ListView">
                    <Style.Triggers>
                        <Trigger Property="HasItems" Value="False">
                            <Setter Property="Visibility" Value="Hidden" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </ListView.Style>
            <ListView.ItemsPanel>
                <ItemsPanelTemplate>
                    <WrapPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </ListView.ItemsPanel>
        </ListView>
        <Grid Grid.Row="3"
              Grid.Column="0"
              Grid.ColumnSpan="4">
            <ui:HtmlEditor x:Name="HtmlEditor"
                           AllowDrop="True"
                           Drop="OnHtmlSurfaceDrop"
                           Source="{Binding Source,
                                            Mode=TwoWay}"
                           TabIndex="3"
                           UseLayoutRounding="True"
                           d:IsHidden="True" />
        </Grid>
    </Grid>
</Page>