<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:themes="clr-namespace:Crystalbyte.Paranoia.Themes;assembly=Crystalbyte.Paranoia.Themes">

    <Style x:Key="MonoChromeIconRectangleStyle" TargetType="Rectangle">
        <Setter Property="Width" Value="15" />
        <Setter Property="Margin" Value="0,1,0,0" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="Height" Value="15" />
        <Setter Property="Fill" Value="{DynamicResource {x:Static themes:ThemeResourceKeys.AppForegroundBrushKey}}" />
    </Style>

    <ContextMenu x:Key="TextBoxContextMenu">
        <MenuItem Command="ApplicationCommands.Cut"
                  FontFamily="{DynamicResource {x:Static themes:ThemeResourceKeys.AppFontFamilyKey}}"
                  FontSize="{DynamicResource {x:Static themes:ThemeResourceKeys.AppMediumFontSizeKey}}">
            <MenuItem.Icon>
                <Rectangle Style="{StaticResource MonoChromeIconRectangleStyle}">
                    <Rectangle.OpacityMask>
                        <ImageBrush ImageSource="/Crystalbyte.Paranoia.Themes.Light;component/Assets/cut.png" />
                    </Rectangle.OpacityMask>
                </Rectangle>
            </MenuItem.Icon>
        </MenuItem>
        <MenuItem Command="ApplicationCommands.Copy"
                  FontFamily="{DynamicResource {x:Static themes:ThemeResourceKeys.AppFontFamilyKey}}"
                  FontSize="{DynamicResource {x:Static themes:ThemeResourceKeys.AppMediumFontSizeKey}}">
            <MenuItem.Icon>
                <Rectangle Style="{StaticResource MonoChromeIconRectangleStyle}">
                    <Rectangle.OpacityMask>
                        <ImageBrush ImageSource="/Crystalbyte.Paranoia.Themes.Light;component/Assets/copy.png" />
                    </Rectangle.OpacityMask>
                </Rectangle>
            </MenuItem.Icon>
        </MenuItem>
        <MenuItem Command="ApplicationCommands.Paste"
                  FontFamily="{DynamicResource {x:Static themes:ThemeResourceKeys.AppFontFamilyKey}}"
                  FontSize="{DynamicResource {x:Static themes:ThemeResourceKeys.AppMediumFontSizeKey}}" />
    </ContextMenu>

    <Style TargetType="TextBox">
        <Setter Property="SpellCheck.IsEnabled" Value="False" />
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="FontSize" Value="{DynamicResource {x:Static themes:ThemeResourceKeys.InputFontSizeKey}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:ThemeResourceKeys.TextBoxBorderBrushKey}}" />
        <Setter Property="Background" Value="{DynamicResource {x:Static themes:ThemeResourceKeys.TextBoxBackgroundBrushKey}}" />
        <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled" />
        <Setter Property="TextOptions.TextRenderingMode" Value="ClearType" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
        <Setter Property="FontFamily" Value="{DynamicResource {x:Static themes:ThemeResourceKeys.InputFontFamilyKey}}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static themes:ThemeResourceKeys.AppForegroundBrushKey}}" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="Margin" Value="3" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="ContextMenu" Value="{StaticResource TextBoxContextMenu}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost"
                                      Focusable="False"
                                      Foreground="{TemplateBinding Foreground}"
                                      HorizontalScrollBarVisibility="Hidden"
                                      VerticalScrollBarVisibility="Hidden" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource {x:Static themes:ThemeResourceKeys.AppAccentBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="ToolTip" Value="{Binding (Validation.Errors)[0].ErrorContent, RelativeSource={x:Static RelativeSource.Self}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="FlyoutTextBoxStyle"
           BasedOn="{StaticResource {x:Type TextBox}}"
           TargetType="TextBox">
        <Setter Property="Foreground" Value="{StaticResource FlyoutForegroundBrushKey}" />
        <Setter Property="Background" Value="{StaticResource FlyoutTextBoxBackgroundBrushKey}" />
        <Setter Property="BorderBrush" Value="{StaticResource FlyoutTextBoxBorderBrushKey}" />
    </Style>

</ResourceDictionary>