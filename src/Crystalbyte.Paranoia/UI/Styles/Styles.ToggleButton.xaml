<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:properties="clr-namespace:Crystalbyte.Paranoia.Properties"
                    xmlns:themes="clr-namespace:Crystalbyte.Paranoia.Themes;assembly=Crystalbyte.Paranoia.Themes">

    <Thickness x:Key="ButtonBorderThicknessKey">1</Thickness>

    <Style TargetType="ToggleButton">
        <Setter Property="Background"
                Value="{DynamicResource {x:Static themes:ThemeResourceKeys.ButtonBackgroundBrushKey}}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource {x:Static themes:ThemeResourceKeys.ButtonBorderBrushKey}}" />
        <Setter Property="BorderThickness" Value="{StaticResource ButtonBorderThicknessKey}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border x:Name="OuterBorder"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Rectangle x:Name="HoverArea"
                                       Fill="Transparent"
                                       Opacity=".2" />
                            <ContentPresenter x:Name="ContentPresenter"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Content="{TemplateBinding Content}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="ContentPresenter" Property="Opacity" Value=".2" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsPressed" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="HoverArea" Property="Fill"
                                    Value="{DynamicResource {x:Static themes:ThemeResourceKeys.AppAccentBrushKey}}" />
                            <Setter TargetName="OuterBorder" Property="BorderBrush"
                                    Value="{DynamicResource {x:Static themes:ThemeResourceKeys.AppAccentBrushKey}}" />
                        </MultiTrigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="HoverArea" Property="Fill"
                                    Value="{DynamicResource {x:Static themes:ThemeResourceKeys.AppAccentBrushKey}}" />
                            <Setter TargetName="HoverArea" Property="Opacity" Value=".4" />
                            <Setter TargetName="OuterBorder" Property="BorderBrush"
                                    Value="{DynamicResource {x:Static themes:ThemeResourceKeys.AppAccentBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="HoverArea" Property="Fill"
                                    Value="{DynamicResource {x:Static themes:ThemeResourceKeys.AppAccentBrushKey}}" />
                            <Setter TargetName="HoverArea" Property="Opacity" Value=".2" />
                            <Setter TargetName="OuterBorder" Property="BorderBrush"
                                    Value="{DynamicResource {x:Static themes:ThemeResourceKeys.AppAccentBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SortingToggleButtonStyle"
           BasedOn="{StaticResource {x:Type ToggleButton}}"
           TargetType="ToggleButton">
        <Setter Property="Foreground"
                Value="{DynamicResource {x:Static themes:ThemeResourceKeys.AppSecondaryForegroundBrushKey}}" />
        <Setter Property="FontSize" Value="{DynamicResource {x:Static themes:ThemeResourceKeys.AppMediumFontSizeKey}}" />
        <Setter Property="Content" Value="{x:Static properties:Resources.Descending}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Margin="3,0"
                                   VerticalAlignment="Center"
                                   FontSize="{TemplateBinding FontSize}"
                                   Foreground="{TemplateBinding Foreground}"
                                   Text="{TemplateBinding Content}" />
                        <Path x:Name="Arrow"
                              Margin="0,2,0,0"
                              VerticalAlignment="Center"
                              Data="M 0 0 L 8 0 L 4 6"
                              Fill="{TemplateBinding Foreground}"
                              RenderTransformOrigin=".5 .5" />
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Arrow" Property="RenderTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="180" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Content" Value="{x:Static properties:Resources.Ascending}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground"
                        Value="{DynamicResource {x:Static themes:ThemeResourceKeys.AppAccentBrushKey}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="EditorToggleButtonStyle"
           BasedOn="{StaticResource {x:Type ToggleButton}}"
           TargetType="ToggleButton">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Height" Value="26" />
        <Setter Property="Width" Value="26" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Margin" Value="0" />
    </Style>

</ResourceDictionary>