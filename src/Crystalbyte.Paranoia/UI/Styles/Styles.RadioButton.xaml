<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:themes="clr-namespace:Crystalbyte.Paranoia.Themes;assembly=Crystalbyte.Paranoia.Themes">

    <Thickness x:Key="RadioButtonMarginKey">3</Thickness>
    <Thickness x:Key="RadioButtonPaddingKey">3</Thickness>
    <Thickness x:Key="RadioButtonBorderThicknessKey">1</Thickness>

    <Style x:Key="OptionMarkFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="14,0,0,0"
                               SnapsToDevicePixels="true"
                               Stroke="{DynamicResource {x:Static themes:ThemeResourceKeys.AppAccentBrushKey}}"
                               StrokeDashArray="1 2"
                               StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type RadioButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}" />
        <Setter Property="Background" Value="{DynamicResource {x:Static themes:ThemeResourceKeys.RadioButtonBackgroundBrushKey}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:ThemeResourceKeys.RadioButtonBorderBrushKey}}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static themes:ThemeResourceKeys.AppForegroundBrushKey}}" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Margin" Value="{StaticResource RadioButtonMarginKey}" />
        <Setter Property="Padding" Value="{StaticResource RadioButtonPaddingKey}" />
        <Setter Property="BorderThickness" Value="{StaticResource RadioButtonBorderThicknessKey}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid x:Name="templateRoot"
                          Background="Transparent"
                          SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Border Width="12"
                                Height="12"
                                Margin="0,0,12,0"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="0"
                                Padding="1.4">
                            <Grid>
                                <Rectangle x:Name="HoverArea"
                                           Fill="Transparent"
                                           Opacity=".2"
                                           RenderOptions.EdgeMode="Aliased" />
                                <Rectangle HorizontalAlignment="Stretch"
                                           VerticalAlignment="Stretch"
                                           Fill="{DynamicResource {x:Static themes:ThemeResourceKeys.AppAccentBrushKey}}"
                                           RenderOptions.EdgeMode="Aliased"
                                           Visibility="{Binding IsChecked,
                                                                RelativeSource={RelativeSource TemplatedParent},
                                                                Converter={StaticResource BooleanToVisibilityConverter}}" />
                            </Grid>
                        </Border>
                        <ContentPresenter Grid.Column="1"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Focusable="False"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="HoverArea" Property="Opacity" Value=".5" />
                            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:ThemeResourceKeys.AppAccentBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="HoverArea" Property="Fill" Value="{DynamicResource {x:Static themes:ThemeResourceKeys.AppAccentBrushKey}}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:ThemeResourceKeys.AppAccentBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RadioButtonFavoriteStyle"
           BasedOn="{StaticResource {x:Type RadioButton}}"
           TargetType="RadioButton">
        <Setter Property="Height" Value="16" />
        <Setter Property="Width" Value="16" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static themes:ThemeResourceKeys.AppForegroundBrushKey}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Rectangle Fill="{TemplateBinding Foreground}">
                        <Rectangle.OpacityMask>
                            <ImageBrush ImageSource="/Assets/star.png" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static themes:ThemeResourceKeys.AppAccentBrushKey}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="RadioButtonAttachmentsStyle"
           BasedOn="{StaticResource {x:Type RadioButton}}"
           TargetType="RadioButton">
        <Setter Property="Height" Value="16" />
        <Setter Property="Width" Value="16" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static themes:ThemeResourceKeys.AppForegroundBrushKey}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Rectangle Fill="{TemplateBinding Foreground}">
                        <Rectangle.OpacityMask>
                            <ImageBrush ImageSource="/Assets/attachment.png" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static themes:ThemeResourceKeys.AppAccentBrushKey}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="RadioButtonTextStyle"
           BasedOn="{StaticResource {x:Type RadioButton}}"
           TargetType="RadioButton">
        <Setter Property="FontSize" Value="{DynamicResource {x:Static themes:ThemeResourceKeys.AppLargeFontSizeKey}}" />
        <Setter Property="FontWeight" Value="Thin" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <TextBlock FontSize="{TemplateBinding FontSize}"
                               FontWeight="{TemplateBinding FontWeight}"
                               Foreground="{TemplateBinding Foreground}"
                               Text="{TemplateBinding Content}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static themes:ThemeResourceKeys.AppAccentBrushKey}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>