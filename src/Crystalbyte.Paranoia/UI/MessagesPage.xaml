<Page x:Class="Crystalbyte.Paranoia.UI.MessagesPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:componentModel="clr-namespace:System.ComponentModel;assembly=WindowsBase"
      xmlns:controls="clr-namespace:Crystalbyte.Paranoia.UI;assembly=Crystalbyte.Paranoia.Controls"
      xmlns:converters="clr-namespace:Crystalbyte.Paranoia.UI.Converters"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:paranoia="clr-namespace:Crystalbyte.Paranoia"
      xmlns:properties="clr-namespace:Crystalbyte.Paranoia.Properties"
      xmlns:themes="clr-namespace:Crystalbyte.Paranoia.Themes;assembly=Crystalbyte.Paranoia.Themes"
      xmlns:ui="clr-namespace:Crystalbyte.Paranoia.UI"
      x:Name="Page"
      Title="Messages"
      Background="{DynamicResource {x:Static themes:ThemeResourceKeys.WindowBackgroundBrushKey}}"
      d:DataContext="{d:DesignInstance paranoia:AppContext}"
      d:DesignHeight="553.714"
      d:DesignWidth="1072.625"
      mc:Ignorable="d">
    <Page.InputBindings>
        <KeyBinding Key="N"
                    Command="ui:MessagingCommands.Compose"
                    Modifiers="Control" />
    </Page.InputBindings>
    <Page.Resources>
        <CollectionViewSource x:Key="MessagesSource" Source="{Binding Messages}">
            <CollectionViewSource.SortDescriptions>
                <componentModel:SortDescription Direction="Descending" PropertyName="EntryDate" />
            </CollectionViewSource.SortDescriptions>
        </CollectionViewSource>
    </Page.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="320"
                              MinWidth="150"
                              MaxWidth="500" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="400"
                              MinWidth="150"
                              MaxWidth="700" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid Grid.Column="0">
            <DockPanel LastChildFill="True">
                <Border Margin="2,0"
                        HorizontalAlignment="Stretch"
                        BorderBrush="{DynamicResource {x:Static themes:ThemeResourceKeys.SplitterForegroundBrushKey}}"
                        BorderThickness="0,0,0,1"
                        DockPanel.Dock="Top"
                        SnapsToDevicePixels="True"
                        UseLayoutRounding="True">
                    <Grid HorizontalAlignment="Left">
                        <controls:MetroButton Margin="12"
                                              Command="ui:MessagingCommands.Compose"
                                              Content="{x:Static properties:Resources.ComposeMessage}"
                                              ImageSource="/Assets/paper.png" />
                    </Grid>
                </Border>
                <DockPanel DockPanel.Dock="Top" LastChildFill="False">
                    <controls:MetroButton Margin="6"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Command="{Binding CreateAccountCommand}"
                                          DockPanel.Dock="Right"
                                          ImageSource="/Assets/add.png" />
                    <TextBlock Margin="12,0,0,0"
                               VerticalAlignment="Center"
                               DockPanel.Dock="Left"
                               FontSize="{DynamicResource {x:Static themes:ThemeResourceKeys.AppExtraLargeFontSizeKey}}"
                               Style="{DynamicResource TitleTextStyle}"><Run Text="{x:Static properties:Resources.AccountsTitle}" /><Run Text=" " /><Run Foreground="{DynamicResource {x:Static themes:ThemeResourceKeys.AppAccentBrushKey}}" Text="{Binding Accounts, Converter={StaticResource CollectionCounter}, FallbackValue=0, Mode=OneWay, StringFormat=\{0\}}" />
                    </TextBlock>
                </DockPanel>
                <TreeView x:Name="AccountsTreeView"
                          Margin="0"
                          HorizontalAlignment="Stretch"
                          VerticalAlignment="Stretch"
                          BorderThickness="0"
                          ItemsSource="{Binding Accounts}"
                          Padding="0"
                          ScrollViewer.CanContentScroll="False"
                          SelectedItemChanged="OnTreeViewSelectedItemChanged"
                          SnapsToDevicePixels="True"
                          VirtualizingPanel.IsVirtualizing="False"
                          VirtualizingPanel.ScrollUnit="Pixel">
                    <TreeView.InputBindings>
                        <KeyBinding Key="N"
                                    Command="ui:MailboxCommands.Create"
                                    CommandParameter="{Binding SelectedItem,
                                                               ElementName=AccountsTreeView}"
                                    Modifiers="Control" />
                        <KeyBinding Key="F5"
                                    Command="ui:MailboxCommands.Sync"
                                    CommandParameter="{Binding SelectedItem,
                                                               ElementName=AccountsTreeView}" />
                        <KeyBinding Key="Delete"
                                    Command="ui:MailboxCommands.Delete"
                                    CommandParameter="{Binding SelectedItem,
                                                               ElementName=AccountsTreeView}" />
                    </TreeView.InputBindings>
                    <TreeView.Resources>
                        <DataTemplate DataType="{x:Type paranoia:OutboxContext}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Image Width="16"
                                       Height="16"
                                       Margin="0,1,6,1"
                                       DockPanel.Dock="Left"
                                       SnapsToDevicePixels="True"
                                       Source="/Assets/folder.png" />
                                <TextBlock x:Name="NameText"
                                           Grid.Column="1"
                                           VerticalAlignment="Center"
                                           FontSize="{DynamicResource {x:Static themes:ThemeResourceKeys.AppMediumFontSizeKey}}"
                                           Foreground="{DynamicResource {x:Static themes:ThemeResourceKeys.AppForegroundBrushKey}}"
                                           Text="{x:Static properties:Resources.Outbox}" />
                                <Border Grid.Column="2"
                                        Margin="12,0"
                                        Visibility="{Binding SmtpRequestCount,
                                                             Converter={StaticResource QuantityToVisibilityConverter}}">
                                    <TextBlock x:Name="NotSeenCountText"
                                               VerticalAlignment="Center"
                                               FontSize="{DynamicResource {x:Static themes:ThemeResourceKeys.AppSmallFontSizeKey}}"
                                               FontWeight="Bold"
                                               Foreground="{DynamicResource {x:Static themes:ThemeResourceKeys.AppAccentBrushKey}}"
                                               Text="{Binding SmtpRequestCount}" />
                                </Border>
                            </Grid>
                            <DataTemplate.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsSelected}" Value="True" />
                                        <Condition Binding="{Binding IsKeyboardFocusWithin, RelativeSource={RelativeSource AncestorType=ListView}}" Value="True" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="NameText" Property="Foreground" Value="{DynamicResource {x:Static themes:ThemeResourceKeys.AppForegroundBrushKey}}" />
                                    <Setter TargetName="NotSeenCountText" Property="Foreground" Value="{DynamicResource {x:Static themes:ThemeResourceKeys.AppForegroundBrushKey}}" />
                                </MultiDataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                        <HierarchicalDataTemplate DataType="{x:Type paranoia:MailAccountContext}" ItemsSource="{Binding Children, Mode=OneWay}">
                            <Grid x:Name="LayoutRoot">
                                <Grid.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Command="{Binding ShowUnsubscribedMailboxesCommand}" Header="{x:Static properties:Resources.ShowUnsubscribedMailboxes}">
                                            <MenuItem.Icon>
                                                <Rectangle Style="{StaticResource MonoChromeIconRectangleStyle}">
                                                    <Rectangle.OpacityMask>
                                                        <ImageBrush ImageSource="/Assets/select.png" />
                                                    </Rectangle.OpacityMask>
                                                </Rectangle>
                                            </MenuItem.Icon>
                                        </MenuItem>
                                        <Separator />
                                        <MenuItem Command="{Binding DeleteAccountCommand}"
                                                  Header="{x:Static properties:Resources.Delete}"
                                                  InputGestureText="{x:Static properties:Resources.DeleteGesture}">
                                            <MenuItem.Icon>
                                                <Rectangle Fill="{DynamicResource {x:Static themes:ThemeResourceKeys.AppFailureBrushKey}}" Style="{StaticResource MonoChromeIconRectangleStyle}">
                                                    <Rectangle.OpacityMask>
                                                        <ImageBrush ImageSource="/Assets/delete.png" />
                                                    </Rectangle.OpacityMask>
                                                </Rectangle>
                                            </MenuItem.Icon>
                                        </MenuItem>
                                        <Separator />
                                        <MenuItem Command="{Binding ConfigAccountCommand}"
                                                  CommandParameter="{Binding}"
                                                  Header="{x:Static properties:Resources.Properties}">
                                            <MenuItem.Icon>
                                                <Rectangle Style="{StaticResource MonoChromeIconRectangleStyle}">
                                                    <Rectangle.OpacityMask>
                                                        <ImageBrush ImageSource="/Assets/edit.properties.png" />
                                                    </Rectangle.OpacityMask>
                                                </Rectangle>
                                            </MenuItem.Icon>
                                        </MenuItem>
                                    </ContextMenu>
                                </Grid.ContextMenu>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Image Grid.Row="0"
                                       Grid.Column="0"
                                       Width="36"
                                       Margin="0,2,6,2"
                                       VerticalAlignment="Center"
                                       RenderOptions.BitmapScalingMode="Fant"
                                       Source="{Binding Address,
                                                        ConverterParameter=48,
                                                        Converter={StaticResource GravatarImageConverter}}" />
                                <StackPanel Grid.Column="1"
                                            Margin="0,-2,0,0"
                                            VerticalAlignment="Center">
                                    <TextBlock x:Name="NameText"
                                               FontSize="{DynamicResource {x:Static themes:ThemeResourceKeys.AppMediumLargeFontSizeKey}}"
                                               Foreground="{DynamicResource {x:Static themes:ThemeResourceKeys.AppForegroundBrushKey}}"
                                               RenderOptions.ClearTypeHint="Enabled"
                                               Text="{Binding Name,
                                                              ConverterParameter=...,
                                                              Converter={StaticResource NullOrEmptyFormatter}}"
                                               TextTrimming="CharacterEllipsis"
                                               TextWrapping="NoWrap" />
                                    <TextBlock x:Name="AddressText"
                                               FontSize="{DynamicResource {x:Static themes:ThemeResourceKeys.AppMediumFontSizeKey}}"
                                               Foreground="{DynamicResource {x:Static themes:ThemeResourceKeys.AppSecondaryForegroundBrushKey}}"
                                               RenderOptions.ClearTypeHint="Enabled"
                                               Text="{Binding Address,
                                                              Converter={StaticResource NullOrEmptyFormatter}}"
                                               TextTrimming="CharacterEllipsis"
                                               TextWrapping="NoWrap" />
                                </StackPanel>
                            </Grid>
                            <HierarchicalDataTemplate.Triggers>
                                <DataTrigger Binding="{Binding IsManagingMailboxes}" Value="True">
                                    <Setter TargetName="LayoutRoot" Property="ContextMenu">
                                        <Setter.Value>
                                            <ContextMenu>
                                                <MenuItem Command="{Binding HideUnsubscribedMailboxesCommand}" Header="{x:Static properties:Resources.HideUnsubscribedMailboxes}">
                                                    <MenuItem.Icon>
                                                        <Rectangle Style="{StaticResource MonoChromeIconRectangleStyle}">
                                                            <Rectangle.OpacityMask>
                                                                <ImageBrush ImageSource="/Assets/ok.png" />
                                                            </Rectangle.OpacityMask>
                                                        </Rectangle>
                                                    </MenuItem.Icon>
                                                </MenuItem>
                                            </ContextMenu>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsSelected}" Value="True" />
                                        <Condition Binding="{Binding IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType=TreeView}}" Value="True" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="AddressText" Property="Foreground" Value="WhiteSmoke" />
                                    <Setter TargetName="NameText" Property="Foreground" Value="WhiteSmoke" />
                                </MultiDataTrigger>
                            </HierarchicalDataTemplate.Triggers>
                        </HierarchicalDataTemplate>
                        <HierarchicalDataTemplate DataType="{x:Type paranoia:MailboxContext}" ItemsSource="{Binding Children}">
                            <Grid>
                                <Grid.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Command="ui:MailboxCommands.Create"
                                                  CommandParameter="{Binding}"
                                                  Header="{x:Static properties:Resources.New}"
                                                  InputGestureText="{x:Static properties:Resources.NewMailboxGesture}">
                                            <MenuItem.Icon>
                                                <Rectangle Style="{StaticResource MonoChromeIconRectangleStyle}">
                                                    <Rectangle.OpacityMask>
                                                        <ImageBrush ImageSource="/Assets/add.png" />
                                                    </Rectangle.OpacityMask>
                                                </Rectangle>
                                            </MenuItem.Icon>
                                        </MenuItem>
                                        <Separator />
                                        <MenuItem Command="ui:MailboxCommands.Delete"
                                                  CommandParameter="{Binding}"
                                                  Header="{x:Static properties:Resources.Delete}"
                                                  InputGestureText="{x:Static properties:Resources.Delete}">
                                            <MenuItem.Icon>
                                                <Rectangle Fill="{DynamicResource {x:Static themes:ThemeResourceKeys.AppFailureBrushKey}}" Style="{StaticResource MonoChromeIconRectangleStyle}">
                                                    <Rectangle.OpacityMask>
                                                        <ImageBrush ImageSource="/Assets/delete.png" />
                                                    </Rectangle.OpacityMask>
                                                </Rectangle>
                                            </MenuItem.Icon>
                                        </MenuItem>
                                        <Separator />
                                        <MenuItem Command="ui:MailboxCommands.Sync"
                                                  CommandParameter="{Binding}"
                                                  Header="{x:Static properties:Resources.Sync}"
                                                  InputGestureText="{x:Static properties:Resources.RefreshGesture}">
                                            <MenuItem.Icon>
                                                <Rectangle Style="{StaticResource MonoChromeIconRectangleStyle}">
                                                    <Rectangle.OpacityMask>
                                                        <ImageBrush ImageSource="/Assets/refresh.png" />
                                                    </Rectangle.OpacityMask>
                                                </Rectangle>
                                            </MenuItem.Icon>
                                        </MenuItem>
                                    </ContextMenu>
                                </Grid.ContextMenu>
                                <Rectangle HorizontalAlignment="Stretch"
                                           VerticalAlignment="Stretch"
                                           Fill="Transparent" />
                                <DockPanel HorizontalAlignment="Stretch" LastChildFill="True">
                                    <Border DockPanel.Dock="Left" Visibility="{Binding IsEditing, Converter={StaticResource BooleanToVisibilityConverter}}">
                                        <CheckBox VerticalAlignment="Center"
                                                  IsChecked="{Binding IsSubscribed,
                                                                      Mode=TwoWay}"
                                                  Visibility="{Binding IsSelectable,
                                                                       Converter={StaticResource BooleanToVisibilityConverter}}" />
                                    </Border>
                                    <Image Width="16"
                                           Height="16"
                                           Margin="0,1,6,1"
                                           DockPanel.Dock="Left"
                                           SnapsToDevicePixels="True"
                                           Source="/Assets/folder.png">
                                        <Image.Opacity>
                                            <Binding Path="IsSubscribedAndSelectable">
                                                <Binding.Converter>
                                                    <converters:BooleanToOpacityConverter OpacityForFalse=".5" OpacityForTrue="1" />
                                                </Binding.Converter>
                                            </Binding>
                                        </Image.Opacity>
                                    </Image>
                                    <TextBlock x:Name="NameText"
                                               VerticalAlignment="Center"
                                               DockPanel.Dock="Left"
                                               FontSize="{DynamicResource {x:Static themes:ThemeResourceKeys.AppMediumFontSizeKey}}"
                                               Foreground="{DynamicResource {x:Static themes:ThemeResourceKeys.AppForegroundBrushKey}}"
                                               Text="{Binding LocalName}" />
                                    <Border Margin="12,0"
                                            DockPanel.Dock="Right"
                                            Visibility="{Binding NotSeenCount,
                                                                 Converter={StaticResource QuantityToVisibilityConverter}}">
                                        <TextBlock x:Name="NotSeenCountText"
                                                   VerticalAlignment="Center"
                                                   FontSize="{DynamicResource {x:Static themes:ThemeResourceKeys.AppSmallFontSizeKey}}"
                                                   FontWeight="Bold"
                                                   Foreground="{DynamicResource {x:Static themes:ThemeResourceKeys.AppAccentBrushKey}}"
                                                   Text="{Binding NotSeenCount}" />
                                    </Border>
                                    <controls:MetroProgressBar x:Name="EnvelopeProgressBar"
                                                               Height="2"
                                                               Margin="12,0"
                                                               HorizontalAlignment="Stretch"
                                                               VerticalAlignment="Center"
                                                               Background="Transparent"
                                                               Maximum="{Binding TotalEnvelopeCount}"
                                                               Minimum="0"
                                                               UseLayoutRounding="True"
                                                               Visibility="{Binding Value,
                                                                                    Converter={StaticResource QuantityToVisibilityConverter},
                                                                                    RelativeSource={RelativeSource Self}}"
                                                               Value="{Binding FetchedEnvelopeCount}" />
                                </DockPanel>
                            </Grid>
                            <HierarchicalDataTemplate.Triggers>
                                <DataTrigger Binding="{Binding IsSubscribedAndSelectable}" Value="False">
                                    <Setter TargetName="NameText" Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                </DataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsSelected}" Value="True" />
                                        <Condition Binding="{Binding IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType=TreeView}}" Value="False" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="NotSeenCountText" Property="Foreground" Value="{DynamicResource {x:Static themes:ThemeResourceKeys.AppAccentBrushKey}}" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsSelected}" Value="True" />
                                        <Condition Binding="{Binding IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType=TreeView}}" Value="True" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="NameText" Property="Foreground" Value="WhiteSmoke" />
                                    <Setter TargetName="EnvelopeProgressBar" Property="Foreground" Value="WhiteSmoke" />
                                    <Setter TargetName="NotSeenCountText" Property="Foreground" Value="WhiteSmoke" />
                                </MultiDataTrigger>
                            </HierarchicalDataTemplate.Triggers>
                        </HierarchicalDataTemplate>
                    </TreeView.Resources>
                    <TreeView.ItemContainerStyle>
                        <Style BasedOn="{StaticResource {x:Type TreeViewItem}}" TargetType="{x:Type TreeViewItem}">
                            <!--  ReSharper disable Xaml.BindingWithContextNotResolved  -->
                            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                            <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                            <Setter Property="Visibility" Value="{Binding IsListed, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}" />
                            <!--  ReSharper restore Xaml.BindingWithContextNotResolved  -->
                        </Style>
                    </TreeView.ItemContainerStyle>
                </TreeView>
            </DockPanel>
        </Grid>
        <GridSplitter Grid.Row="0"
                      Grid.Column="1"
                      Margin="0,2"
                      Background="Transparent" />
        <DockPanel Grid.Row="0"
                   Grid.Column="2"
                   Margin="0,3,0,0"
                   LastChildFill="True"
                   Visibility="{Binding IsOutboxSelected,
                                        Converter={StaticResource BooleanToVisibilityConverter},
                                        ConverterParameter=!}">
            <Grid DockPanel.Dock="Top">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <DockPanel LastChildFill="True">
                    <controls:MetroButton Margin="6"
                                          VerticalAlignment="Center"
                                          Command="ui:MailboxCommands.Sync"
                                          CommandParameter="{Binding SelectedMailbox}"
                                          DockPanel.Dock="Right"
                                          ImageSource="/Assets/refresh.png" />
                    <TextBlock Margin="12,0"
                               HorizontalAlignment="Left"
                               VerticalAlignment="Center"
                               FontSize="{DynamicResource {x:Static themes:ThemeResourceKeys.AppExtraLargeFontSizeKey}}"
                               Style="{DynamicResource TitleTextStyle}">
                        <Run Text="{x:Static properties:Resources.MessagesTitle}" /><Run Text=" " /><Run Foreground="{DynamicResource {x:Static themes:ThemeResourceKeys.AppAccentBrushKey}}" Text="{Binding Messages, Converter={StaticResource CollectionCounter}, Mode=OneWay, StringFormat=\{0\}}" />
                    </TextBlock>
                </DockPanel>

                <TextBox Grid.Row="1"
                         Margin="6"
                         Text="{Binding QueryString,
                                        Mode=TwoWay,
                                        UpdateSourceTrigger=PropertyChanged}" />
                <DockPanel Grid.Row="2"
                           Margin="12,0,12,0"
                           HorizontalAlignment="Stretch"
                           LastChildFill="False">
                    <RadioButton Margin="3,3,6,3"
                                 Content="{x:Static properties:Resources.All}"
                                 DockPanel.Dock="Left"
                                 GroupName="Filter"
                                 IsChecked="{Binding ShowAllMessages,
                                                     Mode=TwoWay}"
                                 Style="{DynamicResource RadioButtonTextStyle}" />
                    <RadioButton Margin="3"
                                 Content="{x:Static properties:Resources.Unseen}"
                                 DockPanel.Dock="Left"
                                 GroupName="Filter"
                                 Style="{DynamicResource RadioButtonTextStyle}" />
                    <StackPanel DockPanel.Dock="Right" Orientation="Horizontal">
                        <Button Click="OnSortPropertyButtonClicked"
                                Content="{Binding SortProperty,
                                                  ElementName=Page,
                                                  Converter={StaticResource SortPropertyFormatter}}"
                                ContextMenuService.IsEnabled="False"
                                Style="{DynamicResource SortingPropertyButtonStyle}">
                            <Button.ContextMenu>
                                <ContextMenu x:Name="SortPropertyMenu">
                                    <ContextMenu.ItemContainerStyle>
                                        <Style TargetType="MenuItem">
                                            <EventSetter Event="Click" Handler="OnSortPropertyMenuItemClicked" />
                                        </Style>
                                    </ContextMenu.ItemContainerStyle>
                                    <ContextMenu.ItemTemplate>
                                        <DataTemplate DataType="{x:Type paranoia:SortProperty}">
                                            <TextBlock Text="{Binding Converter={StaticResource SortPropertyFormatter}}" />
                                        </DataTemplate>
                                    </ContextMenu.ItemTemplate>
                                    <ContextMenu.ItemsSource>
                                        <x:Array Type="{x:Type paranoia:SortProperty}">
                                            <x:Static Member="paranoia:SortProperty.Date" />
                                            <x:Static Member="paranoia:SortProperty.Subject" />
                                            <x:Static Member="paranoia:SortProperty.Attachments" />
                                            <x:Static Member="paranoia:SortProperty.Size" />
                                        </x:Array>
                                    </ContextMenu.ItemsSource>
                                </ContextMenu>
                            </Button.ContextMenu>
                        </Button>
                        <Rectangle Width="1"
                                   Margin="4,10"
                                   VerticalAlignment="Stretch"
                                   Fill="{DynamicResource {x:Static themes:ThemeResourceKeys.SplitterForegroundBrushKey}}"
                                   RenderOptions.EdgeMode="Aliased"
                                   SnapsToDevicePixels="True"
                                   UseLayoutRounding="True" />
                        <ToggleButton VerticalAlignment="Center"
                                      IsChecked="{Binding IsSortAscending,
                                                          Mode=TwoWay}"
                                      Style="{DynamicResource SortingToggleButtonStyle}" />
                    </StackPanel>
                </DockPanel>
            </Grid>
            <Grid>
                <ListView x:Name="MessagesListView"
                          HorizontalContentAlignment="Stretch"
                          Panel.ZIndex="0"
                          Background="Transparent"
                          BorderThickness="0"
                          KeyboardNavigation.DirectionalNavigation="Contained"
                          KeyboardNavigation.TabNavigation="None"
                          MouseLeave="OnMouseLeaveMessagesListView"
                          MouseMove="OnMouseMoveMessagesListView"
                          Padding="0"
                          PreviewMouseLeftButtonDown="OnPreviewMouseLeftButtonDownMessagesListView"
                          SelectionChanged="OnMessageSelectionChanged"
                          TabIndex="4"
                          VirtualizingPanel.IsVirtualizing="True"
                          VirtualizingPanel.VirtualizationMode="Recycling">
                    <ListView.ItemsSource>
                        <Binding Source="{StaticResource MessagesSource}" />
                    </ListView.ItemsSource>
                    <ListView.InputBindings>
                        <KeyBinding Key="Enter"
                                    Command="ui:MessagingCommands.Inspect"
                                    CommandParameter="{Binding SelectedMessage}" />
                        <KeyBinding Key="R"
                                    Command="ui:MessagingCommands.Reply"
                                    Modifiers="Control" />
                        <KeyBinding Key="F"
                                    Command="ui:MessagingCommands.Forward"
                                    Modifiers="Control" />
                        <KeyBinding Key="Delete" Command="{Binding DeleteMessagesCommand}" />
                        <KeyBinding Key="D"
                                    Command="{Binding DeleteMessagesCommand}"
                                    Modifiers="Control" />
                    </ListView.InputBindings>
                    <ListView.ContextMenu>
                        <ContextMenu>
                            <MenuItem Command="ui:MessagingCommands.Reply"
                                      Header="{x:Static properties:Resources.Reply}"
                                      InputGestureText="{x:Static properties:Resources.ReplyGesture}">
                                <MenuItem.Icon>
                                    <Rectangle Style="{StaticResource MonoChromeIconRectangleStyle}">
                                        <Rectangle.OpacityMask>
                                            <ImageBrush ImageSource="/Assets/reply.png" />
                                        </Rectangle.OpacityMask>
                                    </Rectangle>
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Command="ui:MessagingCommands.Forward"
                                      Header="{x:Static properties:Resources.Forward}"
                                      InputGestureText="{x:Static properties:Resources.ForwardGesture}">
                                <MenuItem.Icon>
                                    <Rectangle Style="{StaticResource MonoChromeIconRectangleStyle}">
                                        <Rectangle.OpacityMask>
                                            <ImageBrush ImageSource="/Assets/forward.png" />
                                        </Rectangle.OpacityMask>
                                    </Rectangle>
                                </MenuItem.Icon>
                            </MenuItem>
                            <Separator />
                            <MenuItem Command="{Binding RestoreMessagesCommand}" InputGestureText="{x:Static properties:Resources.RestoreGesture}">
                                <MenuItem.Icon>
                                    <Image Height="16"
                                           Source="/Assets/message.restore.png"
                                           UseLayoutRounding="True" />
                                </MenuItem.Icon>
                                <MenuItem.Header>
                                    <TextBlock Text="{x:Static properties:Resources.Restore}" />
                                </MenuItem.Header>
                            </MenuItem>
                            <MenuItem Command="{Binding DeleteMessagesCommand}"
                                      Header="{x:Static properties:Resources.Delete}"
                                      InputGestureText="{x:Static properties:Resources.DeleteGesture}">
                                <MenuItem.Icon>
                                    <Rectangle Fill="{DynamicResource {x:Static themes:ThemeResourceKeys.AppFailureBrushKey}}" Style="{DynamicResource MonoChromeIconRectangleStyle}">
                                        <Rectangle.OpacityMask>
                                            <ImageBrush ImageSource="/Assets/delete.png" />
                                        </Rectangle.OpacityMask>
                                    </Rectangle>
                                </MenuItem.Icon>
                            </MenuItem>
                            <Separator />
                            <MenuItem Header="{x:Static properties:Resources.Flag}">
                                <MenuItem Command="{Binding MarkAsFlaggedCommand}" Header="{x:Static properties:Resources.MarkAsFlagged}">
                                    <MenuItem.Icon>
                                        <Rectangle Style="{DynamicResource MonoChromeIconRectangleStyle}">
                                            <Rectangle.OpacityMask>
                                                <ImageBrush ImageSource="/Assets/star.full.png" />
                                            </Rectangle.OpacityMask>
                                        </Rectangle>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Command="{Binding MarkAsNotFlaggedCommand}" Header="{x:Static properties:Resources.MarkAsNotFlagged}">
                                    <MenuItem.Icon>
                                        <Rectangle Style="{DynamicResource MonoChromeIconRectangleStyle}">
                                            <Rectangle.OpacityMask>
                                                <ImageBrush ImageSource="/Assets/star.png" />
                                            </Rectangle.OpacityMask>
                                        </Rectangle>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <Separator />
                                <MenuItem Command="{Binding MarkAsSeenCommand}" Header="{x:Static properties:Resources.MarkAsSeen}">
                                    <MenuItem.Icon>
                                        <Rectangle Style="{DynamicResource MonoChromeIconRectangleStyle}">
                                            <Rectangle.OpacityMask>
                                                <ImageBrush ImageSource="/Assets/seen.png" />
                                            </Rectangle.OpacityMask>
                                        </Rectangle>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Command="{Binding MarkAsNotSeenCommand}" Header="{x:Static properties:Resources.MarkAsNotSeen}">
                                    <MenuItem.Icon>
                                        <Rectangle Style="{DynamicResource MonoChromeIconRectangleStyle}">
                                            <Rectangle.OpacityMask>
                                                <ImageBrush ImageSource="/Assets/message.png" />
                                            </Rectangle.OpacityMask>
                                        </Rectangle>
                                    </MenuItem.Icon>
                                </MenuItem>
                            </MenuItem>
                        </ContextMenu>
                    </ListView.ContextMenu>
                    <ListView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel x:Name="Mvsp" />
                        </ItemsPanelTemplate>
                    </ListView.ItemsPanel>
                    <ListView.ItemContainerStyle>
                        <Style BasedOn="{StaticResource {x:Type ListViewItem}}" TargetType="{x:Type ListViewItem}">
                            <Setter Property="Background" Value="{DynamicResource {x:Static themes:ThemeResourceKeys.WindowBackgroundBrushKey}}" />
                            <Setter Property="Width" Value="{Binding ActualWidth, ElementName=Mvsp}" />
                            <Setter Property="Padding" Value="6,1" />
                            <EventSetter Event="MouseDoubleClick" Handler="OnMessageMouseDoubleClick" />
                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListView.ItemTemplate>
                        <DataTemplate DataType="paranoia:MailMessageContext">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="22" />
                                    <RowDefinition Height="20" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Rectangle Grid.Row="0"
                                           Grid.RowSpan="2"
                                           Grid.Column="0"
                                           Grid.ColumnSpan="3"
                                           Fill="Transparent" />
                                <Image Grid.Row="0"
                                       Grid.RowSpan="2"
                                       Grid.Column="0"
                                       Width="36"
                                       Height="36"
                                       Margin="6,0,12,0"
                                       VerticalAlignment="Center"
                                       Source="{Binding FromAddress,
                                                        ConverterParameter=48,
                                                        Converter={StaticResource GravatarImageConverter},
                                                        IsAsync=True}" />

                                <TextBlock x:Name="FromText"
                                           Grid.Row="0"
                                           Grid.Column="1"
                                           Margin="0,0,12,0"
                                           HorizontalAlignment="Left"
                                           VerticalAlignment="Center"
                                           FontSize="{DynamicResource {x:Static themes:ThemeResourceKeys.AppMediumLargeFontSizeKey}}"
                                           Foreground="{DynamicResource {x:Static themes:ThemeResourceKeys.AppForegroundBrushKey}}"
                                           Text="{Binding Converter={StaticResource MailContactFormatter}}"
                                           TextTrimming="CharacterEllipsis"
                                           TextWrapping="NoWrap" />

                                <StackPanel Grid.Row="0"
                                            Grid.Column="2"
                                            Margin="0,1,3,0"
                                            HorizontalAlignment="Right"
                                            VerticalAlignment="Center"
                                            Orientation="Horizontal" />
                                <TextBlock x:Name="SubjectText"
                                           Grid.Row="1"
                                           Grid.Column="1"
                                           Margin="0,0,6,0"
                                           VerticalAlignment="Center"
                                           FontSize="{DynamicResource {x:Static themes:ThemeResourceKeys.AppMediumFontSizeKey}}"
                                           Foreground="{DynamicResource {x:Static themes:ThemeResourceKeys.AppAccentBrushKey}}"
                                           RenderOptions.ClearTypeHint="Enabled"
                                           Text="{Binding Subject,
                                                          ConverterParameter=...,
                                                          Converter={StaticResource NullOrEmptyFormatter}}"
                                           TextTrimming="CharacterEllipsis"
                                           TextWrapping="NoWrap" />
                                <TextBlock x:Name="DateText"
                                           Grid.Row="1"
                                           Grid.Column="2"
                                           Margin="0,0,6,0"
                                           HorizontalAlignment="Right"
                                           VerticalAlignment="Center"
                                           FontSize="{DynamicResource {x:Static themes:ThemeResourceKeys.AppSmallFontSizeKey}}"
                                           Foreground="{DynamicResource {x:Static themes:ThemeResourceKeys.AppSecondaryForegroundBrushKey}}"
                                           Text="{Binding EntryDate,
                                                          Converter={StaticResource DateFormatter}}" />

                            </Grid>
                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding IsSeen}" Value="True">
                                    <Setter TargetName="SubjectText" Property="Foreground" Value="{DynamicResource {x:Static themes:ThemeResourceKeys.AppSecondaryForegroundBrushKey}}" />
                                </DataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsSelected}" Value="True" />
                                        <Condition Binding="{Binding IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType=ListView}}" Value="True" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="SubjectText" Property="Foreground" Value="WhiteSmoke" />
                                    <Setter TargetName="DateText" Property="Foreground" Value="WhiteSmoke" />
                                    <Setter TargetName="FromText" Property="Foreground" Value="WhiteSmoke" />
                                </MultiDataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
                <controls:ProgressRing Width="30"
                                       Height="30"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       Panel.ZIndex="1"
                                       DataContext="{Binding SelectedMailbox}"
                                       IsActive="{Binding IsLoadingMessages,
                                                          Mode=OneWay}"
                                       IsLarge="False" />
                <TextBlock Margin="12"
                           HorizontalAlignment="Left"
                           VerticalAlignment="Top"
                           FontSize="{DynamicResource {x:Static themes:ThemeResourceKeys.AppMediumLargeFontSizeKey}}"
                           FontWeight="Thin"
                           Foreground="{DynamicResource {x:Static themes:ThemeResourceKeys.AppSecondaryForegroundBrushKey}}"
                           Text="{x:Static properties:Resources.NoMessages}"
                           Visibility="{Binding MessageCount,
                                                ConverterParameter=!,
                                                Converter={StaticResource QuantityToVisibilityConverter}}" />
            </Grid>
        </DockPanel>
        <DockPanel Grid.Row="0"
                   Grid.Column="2"
                   Margin="0,3,0,0"
                   LastChildFill="True"
                   Visibility="{Binding IsOutboxSelected,
                                        Converter={StaticResource BooleanToVisibilityConverter}}">
            <Grid DockPanel.Dock="Top">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <DockPanel LastChildFill="True">
                    <StackPanel DockPanel.Dock="Right" Orientation="Horizontal">
                        <controls:MetroButton Margin="6"
                                              Command="{Binding SendMessagesCommand}"
                                              DataContext="{Binding SelectedOutbox}"
                                              ImageSource="/Assets/upload.png" />
                    </StackPanel>
                    <TextBlock Margin="12,0"
                               VerticalAlignment="Center"
                               DataContext="{Binding SelectedOutbox}"
                               FontSize="{DynamicResource {x:Static themes:ThemeResourceKeys.AppExtraLargeFontSizeKey}}"
                               Style="{DynamicResource TitleTextStyle}">
                        <Run Text="{x:Static properties:Resources.MessagesTitle}" /><Run Text=" " /><Run Foreground="{DynamicResource {x:Static themes:ThemeResourceKeys.AppAccentBrushKey}}" Text="{Binding SmtpRequests, Converter={StaticResource CollectionCounter}, Mode=OneWay, StringFormat=\{0\}}" />
                    </TextBlock>
                </DockPanel>
                <TextBox Grid.Row="1"
                         Margin="6"
                         Text="{Binding QueryString,
                                        Mode=TwoWay,
                                        UpdateSourceTrigger=PropertyChanged}" />
            </Grid>
            <Grid DataContext="{Binding SelectedOutbox}">
                <Grid.Resources>
                    <CollectionViewSource x:Key="SmtpRequestsSource" Source="{Binding SmtpRequests}">
                        <CollectionViewSource.SortDescriptions>
                            <componentModel:SortDescription Direction="Descending" PropertyName="CompositionDate" />
                        </CollectionViewSource.SortDescriptions>
                    </CollectionViewSource>
                </Grid.Resources>
                <ListView x:Name="SmtpRequestsListView"
                          HorizontalContentAlignment="Stretch"
                          Panel.ZIndex="0"
                          Background="Transparent"
                          BorderThickness="0"
                          KeyboardNavigation.DirectionalNavigation="Contained"
                          KeyboardNavigation.TabNavigation="None"
                          Padding="0"
                          SelectionChanged="OnSmtpRequestSelectionChanged"
                          TabIndex="4"
                          VirtualizingPanel.IsVirtualizing="True"
                          VirtualizingPanel.VirtualizationMode="Recycling">
                    <ListView.ItemsSource>
                        <Binding Source="{StaticResource SmtpRequestsSource}" />
                    </ListView.ItemsSource>
                    <ListView.ContextMenu>
                        <ContextMenu>
                            <MenuItem InputGestureText="Delete">
                                <MenuItem.Icon>
                                    <Image Height="16"
                                           Source="/Assets/delete.png"
                                           UseLayoutRounding="True" />
                                </MenuItem.Icon>
                                <MenuItem.Header>
                                    <TextBlock Text="{x:Static properties:Resources.Delete}" />
                                </MenuItem.Header>
                            </MenuItem>
                        </ContextMenu>
                    </ListView.ContextMenu>
                    <ListView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel x:Name="Ovsp" />
                        </ItemsPanelTemplate>
                    </ListView.ItemsPanel>
                    <ListView.ItemContainerStyle>
                        <Style BasedOn="{StaticResource {x:Type ListViewItem}}" TargetType="{x:Type ListViewItem}">
                            <!--  ReSharper disable once Xaml.BindingWithContextNotResolved  -->
                            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=OneWayToSource}" />
                            <Setter Property="Width" Value="{Binding ActualWidth, ElementName=Ovsp}" />
                            <Setter Property="Padding" Value="6,1,6,1" />
                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListView.ItemTemplate>
                        <DataTemplate DataType="paranoia:SmtpRequestContext">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="24" />
                                    <RowDefinition Height="22" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Rectangle Grid.Row="0"
                                           Grid.RowSpan="2"
                                           Grid.Column="0"
                                           Grid.ColumnSpan="3"
                                           Fill="Transparent" />
                                <Image Grid.Row="0"
                                       Grid.RowSpan="2"
                                       Grid.Column="0"
                                       Width="34"
                                       Height="34"
                                       Margin="6,0,12,0"
                                       VerticalAlignment="Center"
                                       Source="{Binding ToAddress,
                                                        ConverterParameter=48,
                                                        Converter={StaticResource GravatarImageConverter},
                                                        IsAsync=True}" />

                                <TextBlock x:Name="ToBlock"
                                           Grid.Row="0"
                                           Grid.Column="1"
                                           Margin="0,0,12,0"
                                           HorizontalAlignment="Left"
                                           VerticalAlignment="Center"
                                           FontSize="{DynamicResource {x:Static themes:ThemeResourceKeys.AppMediumLargeFontSizeKey}}"
                                           FontWeight="Thin"
                                           Text="{Binding ToNameOrAddress}"
                                           TextTrimming="CharacterEllipsis"
                                           TextWrapping="NoWrap" />
                                <TextBlock x:Name="SubjectText"
                                           Grid.Row="1"
                                           Grid.Column="1"
                                           Margin="0,0,6,0"
                                           VerticalAlignment="Center"
                                           Foreground="{DynamicResource {x:Static themes:ThemeResourceKeys.AppAccentBrushKey}}"
                                           Text="{Binding Subject,
                                                          ConverterParameter=...,
                                                          Converter={StaticResource NullOrEmptyFormatter}}"
                                           TextTrimming="CharacterEllipsis"
                                           TextWrapping="NoWrap" />
                            </Grid>
                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding IsSelected}" Value="True">
                                    <Setter TargetName="SubjectText" Property="Foreground" Value="{DynamicResource {x:Static themes:ThemeResourceKeys.AppForegroundBrushKey}}" />
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
                <controls:ProgressRing Width="30"
                                       Height="30"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       Panel.ZIndex="1"
                                       IsActive="{Binding IsLoadingRequests,
                                                          Mode=OneWay}"
                                       IsLarge="False" />
                <TextBlock Margin="12"
                           HorizontalAlignment="Left"
                           VerticalAlignment="Top"
                           FontSize="{DynamicResource {x:Static themes:ThemeResourceKeys.AppMediumLargeFontSizeKey}}"
                           FontWeight="Thin"
                           Foreground="{DynamicResource {x:Static themes:ThemeResourceKeys.AppSecondaryForegroundBrushKey}}"
                           Text="{x:Static properties:Resources.NothingToSend}"
                           Visibility="{Binding SmtpRequestCount,
                                                ConverterParameter=!,
                                                Converter={StaticResource QuantityToVisibilityConverter}}" />
            </Grid>
        </DockPanel>
        <GridSplitter Grid.Row="0"
                      Grid.Column="3"
                      Margin="0,2"
                      Background="Transparent" />
        <Grid Grid.Row="0" Grid.Column="4">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Border Grid.Row="0"
                    Padding="0,0,0,6"
                    Visibility="{Binding IsOutboxSelected,
                                         Converter={StaticResource BooleanToVisibilityConverter},
                                         ConverterParameter=!}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Row="0"
                               Grid.Column="0"
                               Grid.ColumnSpan="2"
                               Margin="6,6,6,3"
                               DataContext="{Binding SelectedMessage}"
                               FontSize="22"
                               Style="{DynamicResource TitleTextStyle}"
                               Text="{Binding Subject,
                                              Converter={StaticResource NullOrEmptyFormatter},
                                              Mode=OneWay}"
                               TextTrimming="CharacterEllipsis"
                               TextWrapping="NoWrap" />
                    <TextBlock Grid.Row="1"
                               Grid.Column="0"
                               Margin="6,0,6,0"
                               DataContext="{Binding SelectedMessage}"
                               FontSize="{DynamicResource {x:Static themes:ThemeResourceKeys.AppMediumLargeFontSizeKey}}"
                               FontWeight="Normal"
                               Style="{DynamicResource SubtitleTextStyle}"
                               Text="{Binding FromName}" />
                    <StackPanel Grid.Row="1"
                                Grid.RowSpan="2"
                                Grid.Column="1"
                                Margin="6"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Center"
                                Orientation="Horizontal"
                                Visibility="{Binding SelectedMessage,
                                                     Converter={StaticResource NullToVisibilityConverter}}">
                        <controls:MetroButton Margin="3,0"
                                              Command="ui:MessagingCommands.Reply"
                                              ImageSource="/Assets/reply.png"
                                              ToolTip="{x:Static properties:Resources.Reply}" />
                        <controls:MetroButton Margin="3,0"
                                              Command="ui:MessagingCommands.Forward"
                                              ImageSource="/Assets/forward.png"
                                              ToolTip="{x:Static properties:Resources.Forward}" />
                        <controls:MetroButton Margin="3,0"
                                              Command="{Binding DeleteMessagesCommand}"
                                              ImageBrush="{DynamicResource {x:Static themes:ThemeResourceKeys.AppFailureBrushKey}}"
                                              ImageSource="/Assets/delete.png"
                                              ToolTip="{x:Static properties:Resources.Delete}" />
                        <controls:MetroButton Margin="3,0"
                                              Command="ApplicationCommands.Print"
                                              ImageSource="/Assets/print.png"
                                              ToolTip="{x:Static properties:Resources.Print}" />
                    </StackPanel>
                    <TextBlock Grid.Row="2"
                               Grid.Column="0"
                               Margin="6,0"
                               DataContext="{Binding SelectedMessage}"
                               FontSize="{DynamicResource {x:Static themes:ThemeResourceKeys.AppSmallFontSizeKey}}"
                               FontWeight="Normal"
                               Foreground="{DynamicResource {x:Static themes:ThemeResourceKeys.AppSecondaryForegroundBrushKey}}"
                               Text="{Binding EntryDate}" />
                </Grid>
            </Border>
            <ListView Grid.Row="1"
                      Margin="0"
                      Background="{DynamicResource {x:Static themes:ThemeResourceKeys.WindowHeaderBackgroundBrushKey}}"
                      ItemTemplate="{StaticResource ThumbnailTemplate}"
                      ItemsSource="{Binding Attachments}"
                      ScrollViewer.CanContentScroll="False"
                      ScrollViewer.HorizontalScrollBarVisibility="Auto"
                      ScrollViewer.VerticalScrollBarVisibility="Disabled">
                <ListView.Style>
                    <Style BasedOn="{StaticResource {x:Type ListView}}" TargetType="{x:Type ListView}">
                        <EventSetter Event="MouseDoubleClick" Handler="OnAttachmentMouseDoubleClicked" />
                        <Style.Triggers>
                            <Trigger Property="HasItems" Value="False">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ListView.Style>
                <ListView.ItemContainerStyle>
                    <Style BasedOn="{StaticResource {x:Type ListViewItem}}" TargetType="{x:Type ListViewItem}">
                        <Setter Property="UseLayoutRounding" Value="True" />
                        <Setter Property="Padding" Value="1" />
                    </Style>
                </ListView.ItemContainerStyle>
                <ListView.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal" />
                    </ItemsPanelTemplate>
                </ListView.ItemsPanel>
            </ListView>
            <ui:BlockNoticeControl Grid.Row="2" DataContext="{Binding SelectedMessage}" />
            <Border Grid.Row="3" Visibility="{Binding IsMessageOrSmtpRequestSelected, Converter={StaticResource BooleanToVisibilityConverter}}">
                <Grid>
                    <Grid DataContext="{Binding SelectedMessage}" Visibility="{Binding IsNotLoading, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <controls:HtmlViewer x:Name="MessageViewer"
                                             Background="{DynamicResource {x:Static themes:ThemeResourceKeys.WindowBackgroundBrushKey}}"
                                             BorderThickness="0"
                                             DataContext="{Binding DataContext,
                                                                   RelativeSource={RelativeSource FindAncestor,
                                                                                                  AncestorType=Page}}"
                                             SnapsToDevicePixels="True"
                                             Source="{Binding Source,
                                                              Mode=OneWay}"
                                             WebSession="{Binding Source={StaticResource InspectionWebSessionProvider}}"
                                             Zoom="{Binding Zoom,
                                                            Mode=TwoWay}"
                                             d:IsHidden="True" />
                    </Grid>
                    <Grid DataContext="{Binding SelectedMessage}" Visibility="{Binding IsLoading, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}">
                        <TextBlock Margin="24,12"
                                   HorizontalAlignment="Left"
                                   VerticalAlignment="Bottom">
                            <Run FontSize="48"
                                 FontWeight="Thin"
                                 Foreground="{DynamicResource {x:Static themes:ThemeResourceKeys.AppAccentBrushKey}}"
                                 Text="{Binding ProgressChanged}" /><Run Text=" " /><Run FontSize="{DynamicResource {x:Static themes:ThemeResourceKeys.AppMediumFontSizeKey}}"
                                 FontWeight="Thin"
                                 Text="%" />
                        </TextBlock>
                    </Grid>
                </Grid>
            </Border>
        </Grid>
    </Grid>
</Page>
