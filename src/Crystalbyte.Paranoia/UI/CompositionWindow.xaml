<controls:MetroWindow x:Class="Crystalbyte.Paranoia.UI.CompositionWindow"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:controls="clr-namespace:Crystalbyte.Paranoia.UI;assembly=Crystalbyte.Paranoia.Controls"
                      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                      xmlns:paranoia="clr-namespace:Crystalbyte.Paranoia"
                      xmlns:properties="clr-namespace:Crystalbyte.Paranoia.Properties"
                      xmlns:system="clr-namespace:System;assembly=mscorlib"
                      xmlns:themes="clr-namespace:Crystalbyte.Paranoia.Themes;assembly=Crystalbyte.Paranoia.Themes"
                      xmlns:ui="clr-namespace:Crystalbyte.Paranoia.UI"
                      x:Name="Window"
                      Title="{Binding Title,
                                      Mode=OneWay}"
                      AccentBrush="{DynamicResource {x:Static themes:ThemeResourceKeys.AppAccentBrushKey}}"
                      Background="{DynamicResource {x:Static themes:ThemeResourceKeys.WindowBackgroundBrushKey}}"
                      BorderThickness="0"
                      KeyboardNavigation.ControlTabNavigation="Contained"
                      KeyboardNavigation.DirectionalNavigation="None"
                      UseLayoutRounding="True"
                      WindowStartupLocation="CenterOwner"
                      d:DataContext="{d:DesignInstance paranoia:MailCompositionContext}"
                      mc:Ignorable="d">
    <controls:MetroWindow.CommandBindings>
        <CommandBinding Command="ui:EditingCommands.InsertLink" Executed="OnLink" />
        <CommandBinding Command="ui:EditingCommands.InsertAttachment" Executed="OnAttachment" />
        <CommandBinding Command="ui:FlyoutCommands.Cancel" Executed="OnCancel" />
        <CommandBinding Command="ui:WindowCommands.Maximize" Executed="OnMaximize" />
        <CommandBinding Command="ui:WindowCommands.Minimize" Executed="OnMinimize" />
        <CommandBinding Command="ui:WindowCommands.RestoreDown" Executed="OnRestoreDown" />
        <CommandBinding Command="ui:CompositionCommands.SendToOutbox" Executed="OnSendToOutbox" />
        <CommandBinding Command="ui:CompositionCommands.SaveAsDraft" Executed="OnSaveAsDraft" />
        <CommandBinding Command="ui:WindowCommands.RestoreDown" Executed="OnRestoreDown" />
        <CommandBinding Command="ApplicationCommands.Close" Executed="OnClose" />
        <CommandBinding Command="ApplicationCommands.Help" Executed="OnHelp" />
    </controls:MetroWindow.CommandBindings>
    <Window.Resources>
        <DataTemplate x:Key="LargeWatermarkTemplate">
            <TextBlock Margin="3,0,0,0"
                       VerticalAlignment="Center"
                       Background="Transparent"
                       Focusable="False"
                       FontSize="{DynamicResource {x:Static themes:ThemeResourceKeys.AppMediumLargeFontSizeKey}}"
                       FontStyle="Italic"
                       Foreground="{x:Static SystemColors.GrayTextBrush}"
                       IsHitTestVisible="False"
                       Text="{Binding}" />
        </DataTemplate>
        <DataTemplate x:Key="ContactSuggestionTemplate" DataType="paranoia:MailContactContext">
            <Grid Margin="0,3">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="3" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <StackPanel Grid.Column="1" Orientation="Horizontal">
                    <TextBlock Margin="0,0,8,0"
                               VerticalAlignment="Center"
                               FontSize="{DynamicResource {x:Static themes:ThemeResourceKeys.AppMediumLargeFontSizeKey}}"
                               Foreground="{DynamicResource {x:Static themes:ThemeResourceKeys.AppForegroundBrushKey}}"
                               Text="{Binding Name}" />
                    <TextBlock x:Name="AddressBlock"
                               VerticalAlignment="Center"
                               FontSize="{DynamicResource {x:Static themes:ThemeResourceKeys.AppMediumFontSizeKey}}"
                               Foreground="{DynamicResource {x:Static themes:ThemeResourceKeys.AppSecondaryForegroundBrushKey}}"
                               Text="{Binding Address,
                                              StringFormat=({0})}" />
                </StackPanel>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="StringTokenTemplate" DataType="system:String">
            <StackPanel Margin="0,0,2,0"
                        Orientation="Horizontal"
                        Cursor="Arrow"
                        SnapsToDevicePixels="True">
                <TextBlock x:Name="AddressBlock"
                           Grid.Column="1"
                           TextDecorations="Underline"
                           MaxWidth="140"
                           Margin="3,0"
                           TextTrimming="CharacterEllipsis"
                           TextWrapping="NoWrap"
                           VerticalAlignment="Center"
                           FontSize="{DynamicResource {x:Static themes:ThemeResourceKeys.AppMediumFontSizeKey}}"
                           Foreground="{DynamicResource {x:Static themes:ThemeResourceKeys.AppForegroundBrushKey}}"
                           Text="{Binding}" />
            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="ContactTokenTemplate" DataType="paranoia:MailContactContext">
            <StackPanel Margin="0,0,2,0"
                        Orientation="Horizontal"
                        Cursor="Arrow"
                        SnapsToDevicePixels="True">
                <TextBlock MaxWidth="140"
                           Margin="3,0"
                           TextDecorations="Underline"
                           VerticalAlignment="Center"
                           FontSize="{DynamicResource {x:Static themes:ThemeResourceKeys.AppMediumLargeFontSizeKey}}"
                           Foreground="{DynamicResource {x:Static themes:ThemeResourceKeys.AppForegroundBrushKey}}"
                           Text="{Binding NameOrAddress}"
                           TextTrimming="CharacterEllipsis"
                           TextWrapping="NoWrap" />
            </StackPanel>
        </DataTemplate>
    </Window.Resources>
    <Window.InputBindings>
        <KeyBinding Key="Enter"
                    Command="ui:CompositionCommands.SendToOutbox"
                    Modifiers="Control" />
        <KeyBinding Key="Escape" Command="ui:FlyoutCommands.Cancel" />
        <KeyBinding Key="M"
                    Command="ui:EditingCommands.InsertAttachment"
                    Modifiers="Control" />
    </Window.InputBindings>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="32" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Rectangle Grid.Row="0"
                   HorizontalAlignment="Stretch"
                   VerticalAlignment="Stretch"
                   Fill="{DynamicResource {x:Static themes:ThemeResourceKeys.AppAccentBrushKey}}" />
        <Border Grid.Row="0">
            <StackPanel HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        Orientation="Horizontal">
                <Image Width="20"
                       Margin="10,0"
                       DockPanel.Dock="Left"
                       RenderOptions.BitmapScalingMode="HighQuality"
                       Source="/Assets/logo.window.png" />
                <TextBlock x:Name="TitleBlock"
                           Margin="0"
                           VerticalAlignment="Center"
                           FontSize="{DynamicResource {x:Static themes:ThemeResourceKeys.AppMediumLargeFontSizeKey}}"
                           WindowChrome.IsHitTestVisibleInChrome="False"
                           d:DataContext="{d:DesignInstance paranoia:MailCompositionContext}">
                    <Run Foreground="{DynamicResource {x:Static themes:ThemeResourceKeys.WindowHeaderForegroundBrushKey}}" Text="{Binding Subject, Delay=250, Converter={StaticResource NullOrEmptyFormatter}, ConverterParameter=...}" />
                    <Run Foreground="{DynamicResource {x:Static themes:ThemeResourceKeys.WindowHeaderSecondaryForegroundBrushKey}}" Text=" - " />
                    <Run Foreground="{DynamicResource {x:Static themes:ThemeResourceKeys.WindowHeaderSecondaryForegroundBrushKey}}" Text="{x:Static properties:Resources.ApplicationLongName}" />
                </TextBlock>
            </StackPanel>
        </Border>
        <Grid Grid.Row="0"
              HorizontalAlignment="Right"
              VerticalAlignment="Top"
              Panel.ZIndex="100000">
            <Grid.ColumnDefinitions>
                <!--  help button  -->
                <ColumnDefinition Width="Auto" />
                <!--  minimize button  -->
                <ColumnDefinition Width="Auto" />
                <!--  restore down button  -->
                <ColumnDefinition Width="Auto" />
                <!--  maximize down button  -->
                <ColumnDefinition Width="Auto" />
                <!--  close button  -->
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Button Grid.Column="0" Style="{StaticResource HelpButtonStyle}" />
            <Button Grid.Column="1" Style="{StaticResource MinimizeButtonStyle}" />
            <Button Grid.Column="2"
                    Style="{StaticResource MaximizeButtonStyle}"
                    Visibility="{Binding IsNormalized,
                                         Converter={StaticResource BooleanToVisibilityConverter},
                                         RelativeSource={RelativeSource FindAncestor,
                                                                        AncestorType=ui:CompositionWindow}}" />
            <Button Grid.Column="3"
                    Style="{StaticResource RestoreDownButtonStyle}"
                    Visibility="{Binding IsMaximized,
                                         Converter={StaticResource BooleanToVisibilityConverter},
                                         RelativeSource={RelativeSource FindAncestor,
                                                                        AncestorType=ui:CompositionWindow}}" />
            <Button Grid.Column="4"
                    Click="OnCloseButtonClick"
                    Style="{StaticResource CloseButtonStyle}" />
        </Grid>
        <Grid x:Name="ModalOverlay"
              Grid.Row="0"
              Grid.RowSpan="2"
              KeyboardNavigation.DirectionalNavigation="Contained"
              KeyboardNavigation.TabNavigation="Contained"
              Visibility="Collapsed"
              ZIndex="100000">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Rectangle Grid.Row="0"
                       Fill="{StaticResource FlyoutOverlayBrushKey}"
                       Opacity="{StaticResource FlyoutOverlayOpacityKey}"
                       RenderOptions.EdgeMode="Aliased" />

            <Border Grid.Row="1"
                    Background="{StaticResource FlyoutBackgroundBrushKey}"
                    Padding="0,24,0,24">
                <Grid Width="600" HorizontalAlignment="Center">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <TextBlock Margin="0,0,0,24"
                               VerticalAlignment="Center"
                               DataContext="{Binding Content,
                                                     ElementName=PopupFrame}"
                               Padding="0,0,0,2"
                               Style="{DynamicResource TitleTextStyle}"
                               Text="{Binding Title}"
                               d:DataContext="{d:DesignInstance Page}" />
                    <Frame x:Name="PopupFrame"
                           Grid.Row="1"
                           MinHeight="200"
                           NavigationUIVisibility="Hidden" />
                </Grid>

            </Border>
            <Rectangle Grid.Row="2"
                       Fill="{StaticResource FlyoutOverlayBrushKey}"
                       Opacity="{StaticResource FlyoutOverlayOpacityKey}"
                       RenderOptions.EdgeMode="Aliased" />
        </Grid>
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Button x:Name="SendButton"
                    Grid.Row="0"
                    Grid.Column="0"
                    Width="40"
                    Margin="4,4,0,4"
                    VerticalAlignment="Stretch"
                    Command="ui:CompositionCommands.SendToOutbox"
                    IsEnabled="False"
                    IsTabStop="False">
                <Rectangle Width="16"
                           Height="16"
                           Fill="{DynamicResource {x:Static themes:ThemeResourceKeys.AppForegroundBrushKey}}">
                    <Rectangle.OpacityMask>
                        <ImageBrush ImageSource="/Assets/send.png" />
                    </Rectangle.OpacityMask>
                </Rectangle>
            </Button>
            <ComboBox x:Name="AccountComboBox"
                      Grid.Row="0"
                      Grid.Column="1"
                      Width="160"
                      Height="{Binding ActualHeight,
                                       ElementName=RecipientsBox}"
                      Margin="4,0,0,0"
                      HorizontalAlignment="Stretch"
                      VerticalAlignment="Stretch"
                      DataContextChanged="OnAccountComboboxDataContextChanged"
                      IsTabStop="False"
                      ItemsSource="{Binding Accounts}"
                      SelectedIndex="0"
                      SelectedItem="{Binding SelectedAccount}"
                      SelectionChanged="OnAccountSelectionChanged">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <Grid d:DataContext="{d:DesignInstance paranoia:MailAccountContext}">
                            <TextBlock x:Name="AddressBlock"
                                       Margin="3"
                                       HorizontalAlignment="Left"
                                       VerticalAlignment="Center"
                                       FontSize="{DynamicResource {x:Static themes:ThemeResourceKeys.AppMediumFontSizeKey}}"
                                       Foreground="{DynamicResource {x:Static themes:ThemeResourceKeys.AppForegroundBrushKey}}"
                                       RenderOptions.ClearTypeHint="Enabled"
                                       Text="{Binding Name,
                                                      Converter={StaticResource NullOrEmptyFormatter}}"
                                       TextTrimming="CharacterEllipsis"
                                       TextWrapping="NoWrap" />
                        </Grid>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
            <controls:SuggestionBox x:Name="RecipientsBox"
                                    Grid.Row="0"
                                    Grid.Column="2"
                                    Margin="4,4,0,4"
                                    VerticalAlignment="Center"
                                    AcceptsReturn="False"
                                    AcceptsTab="False"
                                    FontSize="{DynamicResource {x:Static themes:ThemeResourceKeys.AppMediumLargeFontSizeKey}}"
                                    ItemTemplate="{StaticResource ContactSuggestionTemplate}"
                                    ItemsSourceRequested="OnItemsSourceRequested"
                                    SelectedValuesChanged="OnRecipientBoxSelectedValuesChanged"
                                    StringTokenTemplate="{StaticResource StringTokenTemplate}"
                                    TokenTemplate="{StaticResource ContactTokenTemplate}"
                                    Watermark="{x:Static properties:Resources.To}"
                                    WatermarkTemplate="{StaticResource LargeWatermarkTemplate}">
                <controls:SuggestionBox.ItemContainerStyle>
                    <Style BasedOn="{StaticResource {x:Type ListViewItem}}" TargetType="ListViewItem">
                        <!--  ReSharper disable once Xaml.BindingWithContextNotResolved  -->
                        <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                    </Style>
                </controls:SuggestionBox.ItemContainerStyle>
            </controls:SuggestionBox>
            <Grid Grid.Row="0"
                  Grid.Column="3"
                  Margin="4">
                <ToggleButton x:Name="CarbonCopyToggleButton"
                              IsTabStop="False"
                              Padding="0">
                    <TextBlock FontSize="{DynamicResource {x:Static themes:ThemeResourceKeys.AppSmallFontSizeKey}}"
                               Foreground="{DynamicResource {x:Static themes:ThemeResourceKeys.AppForegroundBrushKey}}"
                               Padding="6,0">
                        Cc
                    </TextBlock>
                </ToggleButton>
            </Grid>
            <StackPanel x:Name="CarbonCopyGrid"
                        Grid.Row="1"
                        Grid.Column="0"
                        Grid.ColumnSpan="4"
                        Visibility="{Binding IsChecked,
                                             ElementName=CarbonCopyToggleButton,
                                             Converter={StaticResource BooleanToVisibilityConverter}}">
                <controls:SuggestionBox x:Name="CarbonCopyBox"
                                        Margin="4,0"
                                        HorizontalAlignment="Stretch"
                                        AcceptsReturn="False"
                                        AcceptsTab="False"
                                        ItemTemplate="{StaticResource ContactSuggestionTemplate}"
                                        ItemsSourceRequested="OnItemsSourceRequested"
                                        SelectedValuesChanged="OnCarbonCopyBoxSelectedValuesChanged"
                                        StringTokenTemplate="{StaticResource StringTokenTemplate}"
                                        TokenTemplate="{StaticResource ContactTokenTemplate}"
                                        Visibility="{Binding IsChecked,
                                                             ElementName=CarbonCopyToggleButton,
                                                             Converter={StaticResource BooleanToVisibilityConverter}}"
                                        Watermark="{x:Static properties:Resources.CarbonCopies}"
                                        WatermarkTemplate="{StaticResource LargeWatermarkTemplate}">
                    <controls:SuggestionBox.ItemContainerStyle>
                        <Style BasedOn="{StaticResource {x:Type ListViewItem}}" TargetType="ListViewItem">
                            <!--  ReSharper disable once Xaml.BindingWithContextNotResolved  -->
                            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                        </Style>
                    </controls:SuggestionBox.ItemContainerStyle>
                </controls:SuggestionBox>
                <controls:SuggestionBox x:Name="BlindCarbonCopyBox"
                                        Margin="4"
                                        HorizontalAlignment="Stretch"
                                        AcceptsReturn="False"
                                        AcceptsTab="False"
                                        ItemTemplate="{StaticResource ContactSuggestionTemplate}"
                                        ItemsSourceRequested="OnItemsSourceRequested"
                                        SelectedValuesChanged="OnBlindCarbonCopyBoxSelectedValuesChanged"
                                        StringTokenTemplate="{StaticResource StringTokenTemplate}"
                                        TokenTemplate="{StaticResource ContactTokenTemplate}"
                                        Visibility="{Binding IsChecked,
                                                             ElementName=CarbonCopyToggleButton,
                                                             Converter={StaticResource BooleanToVisibilityConverter}}"
                                        Watermark="{x:Static properties:Resources.BlindCarbonCopies}"
                                        WatermarkTemplate="{StaticResource LargeWatermarkTemplate}">
                    <controls:SuggestionBox.ItemContainerStyle>
                        <Style BasedOn="{StaticResource {x:Type ListViewItem}}" TargetType="ListViewItem">
                            <!--  ReSharper disable once Xaml.BindingWithContextNotResolved  -->
                            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                        </Style>
                    </controls:SuggestionBox.ItemContainerStyle>
                </controls:SuggestionBox>
            </StackPanel>
            <ListView Grid.Row="2"
                      Grid.Column="0"
                      Grid.ColumnSpan="4"
                      Background="{DynamicResource {x:Static themes:ThemeResourceKeys.AttachmentListBackgroundBrushKey}}"
                      IsTabStop="False"
                      ItemTemplate="{StaticResource FileThumbnailTemplate}"
                      ItemsSource="{Binding Attachments}"
                      ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                      ScrollViewer.VerticalScrollBarVisibility="Auto"
                      UseLayoutRounding="True">
                <ListView.CommandBindings>
                    <CommandBinding Command="Delete" Executed="OnAttachmentsDelete" />
                </ListView.CommandBindings>
                <ListView.InputBindings>
                    <KeyBinding Key="Delete" Command="Delete" />
                </ListView.InputBindings>
                <ListView.Style>
                    <Style BasedOn="{StaticResource {x:Type ListView}}" TargetType="ListView">
                        <Style.Triggers>
                            <Trigger Property="HasItems" Value="False">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ListView.Style>
                <ListView.ItemContainerStyle>
                    <Style BasedOn="{StaticResource {x:Type ListViewItem}}" TargetType="ListViewItem">
                        <EventSetter Event="MouseDoubleClick" Handler="OnAttachmentMouseDoubleClick" />
                        <Setter Property="BorderBrush" Value="Transparent" />
                        <Setter Property="Background" Value="{DynamicResource {x:Static themes:ThemeResourceKeys.CompositionEditorBackgroundBrushKey}}" />
                    </Style>
                </ListView.ItemContainerStyle>
                <ListView.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel Orientation="Horizontal" />
                    </ItemsPanelTemplate>
                </ListView.ItemsPanel>
            </ListView>
            <controls:WatermarkTextBox Grid.Row="3"
                                       Grid.Column="0"
                                       Grid.ColumnSpan="4"
                                       AcceptsReturn="False"
                                       AcceptsTab="False"
                                       BorderThickness="0,1,0,1"
                                       FontSize="{DynamicResource {x:Static themes:ThemeResourceKeys.AppMediumLargeFontSizeKey}}"
                                       Padding="5"
                                       Text="{Binding Subject,
                                                      UpdateSourceTrigger=PropertyChanged,
                                                      Mode=TwoWay}"
                                       TextChanged="OnSubjectTextChanged"
                                       Watermark="{x:Static properties:Resources.Subject}"
                                       WatermarkTemplate="{StaticResource LargeWatermarkTemplate}" />
            <Grid Grid.Row="4"
                  Grid.Column="0"
                  Grid.ColumnSpan="4">
                <ui:HtmlEditor x:Name="HtmlEditor"
                               AllowDrop="True"
                               Drop="OnHtmlSurfaceDrop"
                               UseLayoutRounding="True" />
            </Grid>
        </Grid>
    </Grid>
</controls:MetroWindow>