<controls:MetroWindow x:Class="Crystalbyte.Paranoia.UI.MainWindow"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:controls="clr-namespace:Crystalbyte.Paranoia.UI;assembly=Crystalbyte.Paranoia.Controls"
                      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                      xmlns:paranoia="clr-namespace:Crystalbyte.Paranoia"
                      xmlns:properties="clr-namespace:Crystalbyte.Paranoia.Properties"
                      xmlns:themes="clr-namespace:Crystalbyte.Paranoia.Themes;assembly=Crystalbyte.Paranoia.Themes"
                      xmlns:ui="clr-namespace:Crystalbyte.Paranoia.UI"
                      x:Name="Window"
                      Title="{x:Static properties:Resources.ApplicationLongName}"
                      Icon="/Assets/logo.ico"
                      Width="1280"
                      Height="768"
                      AccentBrush="{DynamicResource {x:Static themes:ThemeResourceKeys.AppAccentBrushKey}}"
                      Background="{DynamicResource {x:Static themes:ThemeResourceKeys.WindowBackgroundBrushKey}}"
                      BorderThickness="1"
                      KeyboardNavigation.TabNavigation="Local"
                      UseLayoutRounding="True"
                      WindowStartupLocation="CenterScreen"
                      d:DataContext="{d:DesignInstance paranoia:AppContext}"
                      mc:Ignorable="d">
    <controls:MetroWindow.Resources>
        <!--  ReSharper disable once Xaml.RedundantResource  -->
        <Storyboard x:Key="FlyoutSlideInStoryboard">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="FlyoutOverlay"
                                           Storyboard.TargetProperty="(UIElement.Opacity)"
                                           Timeline.DesiredFrameRate="24">
                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <QuadraticEase EasingMode="EaseOut" />
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Flyout"
                                           Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)"
                                           Timeline.DesiredFrameRate="24">
                <EasingDoubleKeyFrame KeyTime="0" Value="100" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <QuinticEase EasingMode="EaseOut" />
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Button"
                                           Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)"
                                           Timeline.DesiredFrameRate="24">
                <EasingDoubleKeyFrame KeyTime="0" Value="40" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <QuinticEase EasingMode="EaseOut" />
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="TextBlock"
                                           Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)"
                                           Timeline.DesiredFrameRate="24">
                <EasingDoubleKeyFrame KeyTime="0" Value="80" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <QuinticEase EasingMode="EaseOut" />
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <!--  ReSharper disable once Xaml.RedundantResource  -->
        <Storyboard x:Key="FlyoutSlideOutStoryboard">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="FlyoutOverlay"
                                           Storyboard.TargetProperty="(UIElement.Opacity)"
                                           Timeline.DesiredFrameRate="24">
                <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <QuadraticEase EasingMode="EaseOut" />
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Flyout"
                                           Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)"
                                           Timeline.DesiredFrameRate="24">
                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="100">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <QuinticEase EasingMode="EaseOut" />
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Button"
                                           Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)"
                                           Timeline.DesiredFrameRate="24">
                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="40">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <QuinticEase EasingMode="EaseOut" />
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="TextBlock"
                                           Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)"
                                           Timeline.DesiredFrameRate="24">
                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="80">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <QuinticEase EasingMode="EaseOut" />
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Style x:Key="AppMenuButtonStyle" TargetType="Button">
            <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="Border"
                                Padding="6"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                Background="Transparent"
                                IsHitTestVisible="True">
                            <Image Height="20" Width="20" HorizontalAlignment="Center" VerticalAlignment="Center" Source="{Binding Icon, RelativeSource={RelativeSource AncestorType=Window}}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static themes:ThemeResourceKeys.WindowHeaderMouseOverBackgroundBrushKey}}" />
                                <Setter TargetName="Border" Property="TextOptions.TextRenderingMode" Value="Grayscale" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </controls:MetroWindow.Resources>
    <controls:MetroWindow.CommandBindings>
        <CommandBinding Command="{x:Static ui:MessageCommands.Compose}" Executed="OnCompose" />
        <CommandBinding Command="{x:Static ui:AppCommands.ResetZoom}" Executed="OnResetZoom" />
    </controls:MetroWindow.CommandBindings>
    <controls:MetroWindow.InputBindings>
        <KeyBinding Key="Print" Command="ApplicationCommands.Print" />
        <KeyBinding Key="Escape" Command="{x:Static ui:FlyoutCommands.Cancel}" />
        <KeyBinding Key="F12" Command="{x:Static ui:AppCommands.Settings}" />
    </controls:MetroWindow.InputBindings>
    <Grid x:Name="LayoutRoot">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="40" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid Grid.Row="0"
              Grid.RowSpan="2"
              Grid.Column="0"
              Grid.ColumnSpan="2"
              HorizontalAlignment="Right"
              VerticalAlignment="Top"
              Panel.ZIndex="100000">
            <Grid.ColumnDefinitions>
                <!--  settings button  -->
                <ColumnDefinition Width="Auto" />
                <!--  help button  -->
                <ColumnDefinition Width="Auto" />
                <!--  minimize button  -->
                <ColumnDefinition Width="Auto" />
                <!--  restore down button  -->
                <ColumnDefinition Width="Auto" />
                <!--  maximize down button  -->
                <ColumnDefinition Width="Auto" />
                <!--  close button  -->
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Button Grid.Column="1" Style="{DynamicResource HelpButtonStyle}" />
            <Button Grid.Column="2" Style="{DynamicResource MinimizeButtonStyle}" />
            <Button Grid.Column="3"
                    Style="{DynamicResource MaximizeButtonStyle}"
                    Visibility="{Binding IsNormalized,
                                         Converter={StaticResource BooleanToVisibilityConverter},
                                         RelativeSource={RelativeSource FindAncestor,
                                                                        AncestorType=ui:MainWindow}}" />
            <Button Grid.Column="4"
                    Style="{DynamicResource RestoreDownButtonStyle}"
                    Visibility="{Binding IsMaximized,
                                         Converter={StaticResource BooleanToVisibilityConverter},
                                         RelativeSource={RelativeSource FindAncestor,
                                                                        AncestorType=ui:MainWindow}}" />
            <Button Grid.Column="5" Style="{DynamicResource CloseButtonStyle}" />
        </Grid>
        <Grid x:Name="FlyoutOverlay"
              Grid.Row="0"
              Grid.RowSpan="3"
              Grid.Column="0"
              Grid.ColumnSpan="2"
              Panel.ZIndex="1000"
              RenderTransformOrigin="0.5,0.5"
              Visibility="Collapsed">
            <Grid.RenderTransform>
                <TransformGroup>
                    <ScaleTransform />
                    <SkewTransform />
                    <RotateTransform />
                    <TranslateTransform />
                </TransformGroup>
            </Grid.RenderTransform>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="200" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid Grid.ColumnSpan="2"
                  Background="{StaticResource FlyoutOverlayBrushKey}"
                  Opacity="{StaticResource FlyoutOverlayOpacityKey}" />
            <Border x:Name="Flyout"
                    Grid.Column="1"
                    Background="{StaticResource FlyoutBackgroundBrushKey}"
                    Padding="24">
                <Border.Resources>
                    <ResourceDictionary>
                        <ResourceDictionary.MergedDictionaries>
                            <ResourceDictionary Source="/UI/Flyout.Resources.xaml" />
                        </ResourceDictionary.MergedDictionaries>
                    </ResourceDictionary>
                </Border.Resources>
                <Border.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform />
                        <SkewTransform />
                        <RotateTransform />
                        <TranslateTransform />
                    </TransformGroup>
                </Border.RenderTransform>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <StackPanel x:Name="StackPanel"
                                Grid.Row="0"
                                Margin="0,0,0,18"
                                Orientation="Horizontal">
                        <controls:MetroButton x:Name="Button"
                                              Margin="0,0,12,0"
                                              Command="{x:Static ui:FlyoutCommands.Back}"
                                              Focusable="False"
                                              ImageSource="/Assets/back.png">
                            <Button.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform />
                                    <SkewTransform />
                                    <RotateTransform />
                                    <TranslateTransform />
                                </TransformGroup>
                            </Button.RenderTransform>
                        </controls:MetroButton>
                        <TextBlock x:Name="TextBlock"
                                   Margin="0"
                                   VerticalAlignment="Center"
                                   DataContext="{Binding Content,
                                                         ElementName=FlyoutFrame}"
                                   Foreground="{StaticResource FlyoutForegroundBrushKey}"
                                   Padding="0,0,0,2"
                                   Style="{DynamicResource TitleTextStyle}"
                                   Text="{Binding Title}"
                                   d:DataContext="{d:DesignInstance Page}">
                            <TextBlock.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform />
                                    <SkewTransform />
                                    <RotateTransform />
                                    <TranslateTransform />
                                </TransformGroup>
                            </TextBlock.RenderTransform>
                        </TextBlock>
                    </StackPanel>
                    <Frame x:Name="FlyoutFrame"
                           Grid.Row="1"
                           HorizontalAlignment="Stretch"
                           VerticalAlignment="Stretch"
                           KeyboardNavigation.TabNavigation="Contained"
                           Navigated="OnFlyoutFrameNavigated"
                           Navigating="OnFlyoutFrameNavigating"
                           NavigationUIVisibility="Hidden"
                           RenderTransformOrigin="0.5,0.5">
                        <Frame.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform />
                                <SkewTransform />
                                <RotateTransform />
                                <TranslateTransform />
                            </TransformGroup>
                        </Frame.RenderTransform>
                    </Frame>
                </Grid>
            </Border>
        </Grid>
        <Grid x:Name="ModalOverlay"
              Grid.Row="0"
              d:Hidden="True"
              Grid.RowSpan="3"
              Grid.Column="0"
              Grid.ColumnSpan="2"
              Visibility="{Binding IsPopupVisible,
                                   Converter={StaticResource BooleanToVisibilityConverter}}"
              ZIndex="100000">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Rectangle Grid.Row="0"
                       Fill="{StaticResource FlyoutOverlayBrushKey}"
                       Opacity="{StaticResource FlyoutOverlayOpacityKey}"
                       RenderOptions.EdgeMode="Aliased" />

            <Border Grid.Row="1"
                    Background="{StaticResource FlyoutBackgroundBrushKey}"
                    Padding="0,24,0,24">
                <Grid Width="600" HorizontalAlignment="Center">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <TextBlock Margin="0,0,0,24"
                               VerticalAlignment="Center"
                               DataContext="{Binding Content,
                                                     ElementName=PopupFrame}"
                               Foreground="{StaticResource FlyoutForegroundBrushKey}"
                               Padding="0,0,0,2"
                               Style="{DynamicResource TitleTextStyle}"
                               Text="{Binding Title}"
                               d:DataContext="{d:DesignInstance Page}" />
                    <Frame x:Name="PopupFrame"
                           Grid.Row="1"
                           MinHeight="200"
                           Navigated="OnPopupFrameNavigated"
                           NavigationUIVisibility="Hidden" />
                </Grid>
            </Border>
            <Rectangle Grid.Row="2"
                       Fill="{StaticResource FlyoutOverlayBrushKey}"
                       Opacity="{StaticResource FlyoutOverlayOpacityKey}"
                       RenderOptions.EdgeMode="Aliased" />
        </Grid>
        <Rectangle Grid.Row="0"
                   Grid.Column="0"
                   Grid.ColumnSpan="2"
                       Fill="{DynamicResource {x:Static themes:ThemeResourceKeys.WindowTitleBackgroundBrushKey}}"
                       
                       RenderOptions.EdgeMode="Aliased" />
        <Button Grid.Row="0"
                Grid.Column="0"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                Panel.ZIndex="100001"
                Command="{x:Static ui:AppCommands.Settings}"
                Style="{StaticResource AppMenuButtonStyle}" />
        <TextBlock Margin="6,0"
                   Grid.Row="0"
                Grid.Column="1"
                                           VerticalAlignment="Center"
                   HorizontalAlignment="Left"
                                           FontSize="{DynamicResource {x:Static themes:ThemeResourceKeys.AppMediumFontSizeKey}}"
                                           Foreground="{DynamicResource {x:Static themes:ThemeResourceKeys.WindowHeaderForegroundBrushKey}}"
                                           Text="{Binding Title, RelativeSource={RelativeSource AncestorType=Window}}" />
        <ListView x:Name="NavigationMenu"
                  Grid.Row="1"
                  Grid.Column="0"
                  Margin="0"
                  HorizontalAlignment="Stretch"
                  VerticalAlignment="Stretch"
                  Background="Red"
                  BorderThickness="0"
                  ItemsSource="{Binding Views}"
                  KeyboardNavigation.ControlTabNavigation="None"
                  KeyboardNavigation.DirectionalNavigation="Contained"
                  Padding="0"
                  SelectionChanged="OnMainMenuSelectionChanged">
            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <!--  ReSharper disable once Xaml.BindingWithContextNotResolved  -->
                    <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                    <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled" />
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="Margin" Value="0" />
                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:ThemeResourceKeys.NavigationOptionBorderBrushKey}}" />
                    <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
                    <Setter Property="HorizontalContentAlignment" Value="Center" />
                    <Setter Property="VerticalContentAlignment" Value="Center" />
                    <Setter Property="SnapsToDevicePixels" Value="True" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListViewItem">
                                <Border x:Name="Border"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="0">
                                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListView.ItemContainerStyle>
            <ListView.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Vertical" />
                </ItemsPanelTemplate>
            </ListView.ItemsPanel>
            <ListView.ItemTemplate>
                <DataTemplate DataType="paranoia:View">
                    <Border d:DataContext="{d:DesignInstance paranoia:View}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                        <Rectangle Width="26" Height="26" Fill="{DynamicResource {x:Static themes:ThemeResourceKeys.AppForegroundBrushKey}}">
                            <Rectangle.OpacityMask>
                                <ImageBrush ImageSource="{Binding IconUri, Mode=OneWay}" />
                            </Rectangle.OpacityMask>
                        </Rectangle>
                    </Border>
                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsSelected}" Value="True">
                            <!--<Setter TargetName="Text" Property="Foreground" Value="{DynamicResource {x:Static themes:ThemeResourceKeys.AppAccentBrushKey}}" />-->
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType=ListViewItem}}" Value="True" />
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=ListViewItem}}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <!--<Setter TargetName="Text" Property="Foreground" Value="{DynamicResource {x:Static themes:ThemeResourceKeys.AppForegroundBrushKey}}" />-->
                        </MultiDataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>
        <Frame x:Name="MainFrame"
               Focusable="False"
               Grid.Row="1"
               Grid.Column="1"
               Grid.ColumnSpan="1"
               NavigationUIVisibility="Hidden"
               RenderTransformOrigin="0.5,0.5"
               Source="/UI/MailPage.xaml" />
        <StatusBar Grid.Row="2"
                   Grid.Column="0"
                   Grid.ColumnSpan="2"
                   Height="24"
                   HorizontalAlignment="Stretch"
                   BorderThickness="0"
                   BorderBrush="{DynamicResource {x:Static themes:ThemeResourceKeys.SplitterForegroundBrushKey}}"
                   Background="{DynamicResource {x:Static themes:ThemeResourceKeys.StatusBarBackgroundBrushKey}}">
            <StatusBar.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid />
                </ItemsPanelTemplate>
            </StatusBar.ItemsPanel>
            <StackPanel HorizontalAlignment="Right" Margin="0,0,36,0" Orientation="Horizontal">
                <Slider Width="100" IsEnabled="{Binding IsMessageSelected}" SmallChange="0.1" LargeChange="0.5" Minimum="-0.5" Maximum="2.0" Value="{Binding ZoomLevel, Mode=TwoWay}"></Slider>
                <Button IsEnabled="{Binding IsMessageSelected}" Command="{x:Static ui:AppCommands.ResetZoom}" MinWidth="40" Margin="12" VerticalAlignment="Stretch" BorderThickness="0" Background="Transparent">
                    <TextBlock Text="{Binding ZoomLevel, Mode=OneWay, Converter={StaticResource ZoomLevelFormatter}}" />
                </Button>
            </StackPanel>
        </StatusBar>
    </Grid>
</controls:MetroWindow>