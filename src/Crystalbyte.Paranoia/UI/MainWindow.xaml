<controls:MetroWindow x:Class="Crystalbyte.Paranoia.UI.MainWindow"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:controls="clr-namespace:Crystalbyte.Paranoia.UI;assembly=Crystalbyte.Paranoia.Controls"
                      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                      xmlns:paranoia="clr-namespace:Crystalbyte.Paranoia"
                      xmlns:themes="clr-namespace:Crystalbyte.Paranoia.Themes;assembly=Crystalbyte.Paranoia.Themes"
                      xmlns:ui="clr-namespace:Crystalbyte.Paranoia.UI"
                      x:Name="Window"
                      Title="Paranoia"
                      Width="1280"
                      Height="768"
                      BorderThickness="0"
                      KeyboardNavigation.TabNavigation="Local"
                      UseLayoutRounding="True"
                      WindowStartupLocation="CenterScreen"
                      d:DataContext="{d:DesignInstance paranoia:AppContext}"
                      mc:Ignorable="d">
    <controls:MetroWindow.Resources>
        <!--  ReSharper disable once Xaml.RedundantResource  -->
        <Storyboard x:Key="FlyoutSlideInStoryboard">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Overlay" Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <QuadraticEase EasingMode="EaseOut" />
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Flyout" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                <EasingDoubleKeyFrame KeyTime="0" Value="100" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <QuinticEase EasingMode="EaseOut" />
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Button" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                <EasingDoubleKeyFrame KeyTime="0" Value="40" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <QuinticEase EasingMode="EaseOut" />
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="TextBlock" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                <EasingDoubleKeyFrame KeyTime="0" Value="80" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <QuinticEase EasingMode="EaseOut" />
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="StatusBar" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="24">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <QuadraticEase EasingMode="EaseOut" />
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="StatusBar" Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0" />
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <!--  ReSharper disable once Xaml.RedundantResource  -->
        <Storyboard x:Key="FlyoutSlideOutStoryboard">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Overlay" Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <QuadraticEase EasingMode="EaseOut" />
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Flyout" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="100">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <QuinticEase EasingMode="EaseOut" />
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Button" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="40">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <QuinticEase EasingMode="EaseOut" />
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="TextBlock" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="80">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <QuinticEase EasingMode="EaseOut" />
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="StatusBar" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                <EasingDoubleKeyFrame KeyTime="0" Value="24" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <QuadraticEase EasingMode="EaseOut" />
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="StatusBar" Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1" />
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <!--  ReSharper disable once Xaml.RedundantResource  -->
        <Storyboard x:Key="MainFrameSlideOutStoryboard">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MainFrame" Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0" />
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MainFrame" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-30" />
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <!--  ReSharper disable once Xaml.RedundantResource  -->
        <Storyboard x:Key="MainFrameSlideInStoryboard">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MainFrame" Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1" />
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MainFrame" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                <EasingDoubleKeyFrame KeyTime="0" Value="30" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0" />
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
    </controls:MetroWindow.Resources>
    <controls:MetroWindow.InputBindings>
        <KeyBinding Key="N"
                    Command="ui:MessageCommands.Compose"
                    Modifiers="Control" />
        <KeyBinding Key="Print" Command="ApplicationCommands.Print" />
        <KeyBinding Key="Escape" Command="ui:WindowCommands.Back" />
    </controls:MetroWindow.InputBindings>
    <Grid x:Name="LayoutRoot">
        <Grid.RowDefinitions>
            <RowDefinition Height="36" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <DockPanel Grid.Row="0"
                   Grid.Column="0"
                   HorizontalAlignment="Stretch"
                   VerticalAlignment="Stretch"
                   Panel.ZIndex="1000"
                   LastChildFill="False"
                   d:IsLocked="True">
            <Image Width="20"
                   Margin="10,0"
                   DockPanel.Dock="Left"
                   RenderOptions.BitmapScalingMode="HighQuality"
                   Source="/Assets/logo.window.png" />
            <TextBlock Margin="0,-1,0,0"
                       VerticalAlignment="Center"
                       Style="{StaticResource TitleTextStyle}"
                       Text="{Binding Title,
                                      RelativeSource={RelativeSource FindAncestor,
                                                                     AncestorType=ui:MainWindow}}" />
            <Grid Width="160" DockPanel.Dock="Left">
                <!--  Quick access bar  -->
            </Grid>
            <Border DockPanel.Dock="Left">
                <ListView Background="Transparent"
                          BorderThickness="0"
                          ItemsSource="{Binding NavigationOptions}"
                          SelectionChanged="OnMainMenuSelectionChanged">
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <!--  ReSharper disable once Xaml.BindingWithContextNotResolved  -->
                            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                            <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
                            <Setter Property="SnapsToDevicePixels" Value="true" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ListViewItem">
                                        <Border>
                                            <ContentPresenter HorizontalAlignment="Stretch"
                                                              VerticalAlignment="Stretch"
                                                              Content="{TemplateBinding Content}"
                                                              ContentTemplate="{TemplateBinding ContentTemplate}" />
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Horizontal" />
                        </ItemsPanelTemplate>
                    </ListView.ItemsPanel>
                    <ListView.ItemTemplate>
                        <DataTemplate DataType="paranoia:NavigationContext">
                            <TextBlock x:Name="TitleBlock"
                                       Margin="6,-4,6,0"
                                       VerticalAlignment="Center"
                                       FontSize="{DynamicResource {x:Static themes:ThemeResourceKeys.NormalTextLargeFontSizeKey}}"
                                       FontWeight="Thin"
                                       Text="{Binding Title}" />
                            <DataTemplate.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsSelected}" Value="False" />
                                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType=ListViewItem}}" Value="True" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="TitleBlock" Property="Foreground" Value="{DynamicResource {x:Static themes:ThemeResourceKeys.NormalTextSecondaryForegroundBrushKey}}" />
                                </MultiDataTrigger>
                                <DataTrigger Binding="{Binding IsSelected}" Value="True">
                                    <Setter TargetName="TitleBlock" Property="Foreground" Value="{DynamicResource {x:Static themes:ThemeResourceKeys.AppAccentBrushKey}}" />
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </Border>
        </DockPanel>
        <Grid Grid.Row="0"
              HorizontalAlignment="Right"
              VerticalAlignment="Top"
              Panel.ZIndex="100000">
            <Grid.ColumnDefinitions>
                <!--  help button  -->
                <ColumnDefinition Width="Auto" />
                <!--  minimize button  -->
                <ColumnDefinition Width="Auto" />
                <!--  restore down button  -->
                <ColumnDefinition Width="Auto" />
                <!--  maximize down button  -->
                <ColumnDefinition Width="Auto" />
                <!--  close button  -->
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Button Grid.Column="0" Style="{DynamicResource HelpButtonStyle}" />
            <Button Grid.Column="1" Style="{DynamicResource MinimizeButtonStyle}" />
            <Button Grid.Column="2"
                    Style="{DynamicResource MaximizeButtonStyle}"
                    Visibility="{Binding IsNormalized,
                                         Converter={StaticResource BooleanToVisibilityConverter},
                                         RelativeSource={RelativeSource FindAncestor,
                                                                        AncestorType=ui:MainWindow}}" />
            <Button Grid.Column="3"
                    Style="{DynamicResource RestoreDownButtonStyle}"
                    Visibility="{Binding IsMaximized,
                                         Converter={StaticResource BooleanToVisibilityConverter},
                                         RelativeSource={RelativeSource FindAncestor,
                                                                        AncestorType=ui:MainWindow}}" />
            <Button Grid.Column="4" Style="{DynamicResource CloseButtonStyle}" />
        </Grid>

        <Grid x:Name="Overlay"
              Grid.Row="0"
              Grid.RowSpan="3"
              Panel.ZIndex="1000"
              RenderTransformOrigin="0.5,0.5"
              Visibility="Collapsed">
            <Grid.RenderTransform>
                <TransformGroup>
                    <ScaleTransform />
                    <SkewTransform />
                    <RotateTransform />
                    <TranslateTransform />
                </TransformGroup>
            </Grid.RenderTransform>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="200" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid Grid.ColumnSpan="2"
                  Background="{DynamicResource {x:Static themes:ThemeResourceKeys.ControlOverlayBrushKey}}"
                  Opacity="{DynamicResource {x:Static themes:ThemeResourceKeys.ControlOverlayOpacityKey}}">
                <Grid.Effect>
                    <BlurEffect />
                </Grid.Effect>
            </Grid>
            <Border x:Name="Flyout"
                    Grid.Column="1"
                    Background="{DynamicResource {x:Static themes:ThemeResourceKeys.FlyoutBackgroundBrushKey}}"
                    Padding="24">
                <Border.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform />
                        <SkewTransform />
                        <RotateTransform />
                        <TranslateTransform />
                    </TransformGroup>
                </Border.RenderTransform>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <StackPanel x:Name="StackPanel"
                                Grid.Row="0"
                                Margin="0,0,0,18"
                                Orientation="Horizontal">
                        <controls:MetroButton x:Name="Button"
                                              Margin="0,0,12,0"
                                              Command="ui:NavigationCommands.Back"
                                              Focusable="False"
                                              RenderTransformOrigin="0.5,0.5">
                            <Button.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform />
                                    <SkewTransform />
                                    <RotateTransform />
                                    <TranslateTransform />
                                </TransformGroup>
                            </Button.RenderTransform>
                            <Image Width="18"
                                   HorizontalAlignment="Center"
                                   Source="/Assets/back.png" />
                        </controls:MetroButton>
                        <TextBlock x:Name="TextBlock"
                                   Margin="0"
                                   VerticalAlignment="Center"
                                   DataContext="{Binding Content,
                                                         ElementName=FlyOutFrame}"
                                   Padding="0,0,0,2"
                                   RenderTransformOrigin="0.5,0.5"
                                   Style="{StaticResource TitleTextStyle}"
                                   Text="{Binding Title}"
                                   d:DataContext="{d:DesignInstance Page}">
                            <TextBlock.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform />
                                    <SkewTransform />
                                    <RotateTransform />
                                    <TranslateTransform />
                                </TransformGroup>
                            </TextBlock.RenderTransform>
                        </TextBlock>
                    </StackPanel>
                    <Frame x:Name="FlyOutFrame"
                           Grid.Row="1"
                           HorizontalAlignment="Stretch"
                           VerticalAlignment="Stretch"
                           KeyboardNavigation.TabNavigation="Cycle"
                           Navigated="OnFlyOutFrameNavigated"
                           NavigationUIVisibility="Hidden"
                           RenderTransformOrigin="0.5,0.5">
                        <Frame.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform />
                                <SkewTransform />
                                <RotateTransform />
                                <TranslateTransform />
                            </TransformGroup>
                        </Frame.RenderTransform>
                    </Frame>
                </Grid>
            </Border>
        </Grid>
        <Grid Grid.Row="0"
              Grid.RowSpan="3"
              Visibility="{Binding IsPopupVisible,
                                   Converter={StaticResource BooleanToVisibilityConverter}}"
              ZIndex="100000">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Rectangle Grid.Row="0"
                       Fill="{DynamicResource {x:Static themes:ThemeResourceKeys.ControlOverlayBrushKey}}"
                       Opacity="{DynamicResource {x:Static themes:ThemeResourceKeys.ControlOverlayOpacityKey}}"
                       RenderOptions.EdgeMode="Aliased">
                <Rectangle.Effect>
                    <BlurEffect />
                </Rectangle.Effect>
            </Rectangle>
            <Border Grid.Row="1"
                    Background="{DynamicResource {x:Static themes:ThemeResourceKeys.FlyoutBackgroundBrushKey}}"
                    Padding="0,24,0,24">
                <Grid Width="600" HorizontalAlignment="Center">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <TextBlock Margin="0,0,0,24"
                               VerticalAlignment="Center"
                               DataContext="{Binding Content,
                                                     ElementName=PopupFrame}"
                               Padding="0,0,0,2"
                               Style="{StaticResource TitleTextStyle}"
                               Text="{Binding Title}"
                               d:DataContext="{d:DesignInstance Page}" />
                    <Frame x:Name="PopupFrame"
                           Grid.Row="1"
                           MinHeight="200"
                           Navigated="OnPopupFrameNavigated"
                           NavigationUIVisibility="Hidden" />
                </Grid>

            </Border>
            <Rectangle Grid.Row="2"
                       Fill="{DynamicResource {x:Static themes:ThemeResourceKeys.ControlOverlayBrushKey}}"
                       Opacity="{DynamicResource {x:Static themes:ThemeResourceKeys.ControlOverlayOpacityKey}}"
                       RenderOptions.EdgeMode="Aliased">
                <Rectangle.Effect>
                    <BlurEffect />
                </Rectangle.Effect>
            </Rectangle>
        </Grid>
        <Border Grid.Row="1"
                BorderBrush="{DynamicResource {x:Static themes:ThemeResourceKeys.AppAccentBrushKey}}"
                BorderThickness="0,1,0,0">
            <Frame x:Name="MainFrame"
                   NavigationUIVisibility="Hidden"
                   RenderTransformOrigin="0.5,0.5"
                   Source="/UI/MessagesPage.xaml">
                <Frame.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform />
                        <SkewTransform />
                        <RotateTransform />
                        <TranslateTransform />
                    </TransformGroup>
                </Frame.RenderTransform>
            </Frame>
        </Border>
        <StatusBar x:Name="StatusBar"
                   Grid.Row="2"
                   Height="24"
                   RenderTransformOrigin="0.5,0.5">
            <StatusBar.RenderTransform>
                <TransformGroup>
                    <ScaleTransform />
                    <SkewTransform />
                    <RotateTransform />
                    <TranslateTransform />
                </TransformGroup>
            </StatusBar.RenderTransform>
            <StatusBar.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="24" />
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </StatusBar.ItemsPanel>
            <StatusBarItem Grid.Column="0">
                <TextBlock FontSize="{DynamicResource {x:Static themes:ThemeResourceKeys.NormalTextSmallFontSizeKey}}" Text="{Binding StatusText, Mode=OneWay}" />
            </StatusBarItem>
            <StatusBarItem Grid.Column="2">
                <Slider Width="150"
                        VerticalAlignment="Stretch"
                        IsEnabled="{Binding IsMessageSelected}"
                        IsTabStop="False"
                        LargeChange="25.0"
                        Maximum="400.0"
                        Minimum="1.0"
                        SmallChange="5.0"
                        TickPlacement="None"
                        Value="{Binding Zoom,
                                        Mode=TwoWay}" />
            </StatusBarItem>
            <StatusBarItem Grid.Column="3" Padding="0">
                <Button Width="50"
                        Command="{Binding ResetZoomCommand}"
                        Content="{Binding Zoom,
                                          Mode=OneWay,
                                          Converter={StaticResource PercentageFormatter}}"
                        IsEnabled="{Binding IsMessageSelected}"
                        IsTabStop="False"
                        Style="{DynamicResource StatusBarButtonStyle}" />
            </StatusBarItem>
        </StatusBar>
    </Grid>
</controls:MetroWindow>