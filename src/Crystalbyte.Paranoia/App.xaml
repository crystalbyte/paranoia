<Application x:Class="Crystalbyte.Paranoia.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:awe="http://schemas.awesomium.com/winfx"
             xmlns:converters="clr-namespace:Crystalbyte.Paranoia.UI.Converters"
             xmlns:core="clr-namespace:Awesomium.Core;assembly=Awesomium.Core"
             xmlns:paranoia="clr-namespace:Crystalbyte.Paranoia"
             xmlns:properties="clr-namespace:Crystalbyte.Paranoia.Properties"
             xmlns:themes="clr-namespace:Crystalbyte.Paranoia.Themes;assembly=Crystalbyte.Paranoia.Themes"
             xmlns:ui="clr-namespace:Crystalbyte.Paranoia.UI"
             ShutdownMode="OnMainWindowClose"
             StartupUri="UI/MainWindow.xaml">
    <!--  Default styles: http://msdn.microsoft.com/en-us/library/aa970773.aspx  -->
    <Application.Resources>
        <ResourceDictionary>
            <converters:SecurityToColorConverter x:Key="SecurityToColorConverter" />
            <converters:GravatarImageConverter x:Key="GravatarImageConverter" />
            <converters:MailboxLocalizer x:Key="MailboxLocalizer" />
            <converters:NullOrEmptyFormatter x:Key="NullOrEmptyFormatter" />
            <converters:MailContactFormatter x:Key="MailContactFormatter" />
            <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
            <converters:CollectionCounter x:Key="CollectionCounter" />
            <converters:DateFormatter x:Key="DateFormatter" />
            <converters:NullToVisibilityConverter x:Key="NullToVisibilityConverter" />
            <converters:QuantityToVisibilityConverter x:Key="QuantityToVisibilityConverter" />
            <converters:PercentageFormatter x:Key="PercentageFormatter" />
            <converters:SecurityProtocolFormatter x:Key="SecurityProtocolFormatter" />
            <converters:BooleanToVisibilityMultiConverter x:Key="BooleanToVisibilityMultiConverter" />
            <converters:IconFinder x:Key="IconFinder" />

            <awe:WebSessionProvider x:Key="CompositionWebSessionProvider">
                <awe:WebSessionProvider.DataSources>
                    <paranoia:ParanoiaDataSourceProvider x:Key="paranoia" />
                </awe:WebSessionProvider.DataSources>
                <core:WebPreferences CustomCSS="{x:Static paranoia:App.CompositionCss}"
                                     DefaultEncoding="utf-8"
                                     EnableGPUAcceleration="True"
                                     Javascript="True"
                                     SmoothScrolling="True" />
            </awe:WebSessionProvider>

            <awe:WebSessionProvider x:Key="InspectionWebSessionProvider">
                <awe:WebSessionProvider.DataSources>
                    <paranoia:ParanoiaDataSourceProvider x:Key="paranoia" />
                </awe:WebSessionProvider.DataSources>
                <core:WebPreferences CustomCSS="{x:Static paranoia:App.InspectionCss}"
                                     DefaultEncoding="utf-8"
                                     EnableGPUAcceleration="True"
                                     SmoothScrolling="True" />
            </awe:WebSessionProvider>

            <DataTemplate x:Key="ThumbnailTemplate" DataType="paranoia:AttachmentContext">
                <Border Padding="0,3">
                    <Grid Width="120" Height="80">
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Image Grid.Row="0"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               RenderOptions.BitmapScalingMode="HighQuality"
                               Source="{Binding FullName,
                                                ConverterParameter=24,
                                                Converter={StaticResource IconFinder},
                                                IsAsync=True}"
                               Stretch="None"
                               Visibility="{Binding IsImage,
                                                    Converter={StaticResource BooleanToVisibilityConverter},
                                                    ConverterParameter=!}" />
                        <Image Grid.Row="0"
                               HorizontalAlignment="Stretch"
                               VerticalAlignment="Stretch"
                               RenderOptions.BitmapScalingMode="HighQuality"
                               Source="{Binding Bytes,
                                                IsAsync=True}"
                               Stretch="Uniform"
                               Visibility="{Binding IsImage,
                                                    Converter={StaticResource BooleanToVisibilityConverter}}" />
                        <TextBlock Grid.Row="1"
                                   Margin="6,0"
                                   Background="Transparent"
                                   FontSize="{DynamicResource Metro.SmallFontSize}"
                                   Text="{Binding Name}"
                                   TextAlignment="Center"
                                   TextTrimming="CharacterEllipsis"
                                   TextWrapping="NoWrap"
                                   ToolTip="{Binding FullName}" />
                    </Grid>
                </Border>
            </DataTemplate>

            <Style x:Key="TitleTextStyle" TargetType="TextBlock">
                <Setter Property="FontSize" Value="{DynamicResource {x:Static themes:ThemeResourceKeys.TitleFontSizeKey}}" />
                <Setter Property="FontWeight" Value="{DynamicResource {x:Static themes:ThemeResourceKeys.TitleFontWeightKey}}" />
                <Setter Property="FontFamily" Value="{DynamicResource {x:Static themes:ThemeResourceKeys.TitleFontFamilyKey}}" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static themes:ThemeResourceKeys.NormalTextForegroundBrushKey}}" />
            </Style>

            <Style x:Key="SubtitleTextStyle" TargetType="TextBlock">
                <Setter Property="FontSize" Value="{DynamicResource {x:Static themes:ThemeResourceKeys.SubtitleFontSizeKey}}" />
                <Setter Property="FontWeight" Value="{DynamicResource {x:Static themes:ThemeResourceKeys.SubtitleFontWeightKey}}" />
                <Setter Property="FontFamily" Value="{DynamicResource {x:Static themes:ThemeResourceKeys.SubtitleFontFamilyKey}}" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static themes:ThemeResourceKeys.NormalTextSecondaryForegroundBrushKey}}" />
            </Style>

            <Style x:Key="NormalTextStyle" TargetType="TextBlock">
                <Setter Property="FontSize" Value="{DynamicResource {x:Static themes:ThemeResourceKeys.NormalTextMediumFontSizeKey}}" />
                <Setter Property="FontWeight" Value="{DynamicResource {x:Static themes:ThemeResourceKeys.NormalTextFontWeightKey}}" />
                <Setter Property="FontFamily" Value="{DynamicResource {x:Static themes:ThemeResourceKeys.NormalTextFontFamilyKey}}" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static themes:ThemeResourceKeys.NormalTextForegroundBrushKey}}" />
            </Style>

            <Style x:Key="NavigationTextStyle" TargetType="TextBlock">
                <Setter Property="FontSize" Value="{DynamicResource {x:Static themes:ThemeResourceKeys.NormalTextMediumFontSizeKey}}" />
                <Setter Property="FontWeight" Value="{DynamicResource {x:Static themes:ThemeResourceKeys.NormalTextFontWeightKey}}" />
                <Setter Property="FontFamily" Value="{DynamicResource {x:Static themes:ThemeResourceKeys.NormalTextFontFamilyKey}}" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static themes:ThemeResourceKeys.NormalTextForegroundBrushKey}}" />
            </Style>

            <Style x:Key="WindowButtonStyle"
                   BasedOn="{StaticResource {x:Type Button}}"
                   TargetType="Button">
                <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="VerticalAlignment" Value="Top" />
                <Setter Property="Width" Value="32" />
                <Setter Property="Height" Value="24" />
            </Style>

            <Style x:Key="MinimizeButtonStyle"
                   BasedOn="{StaticResource WindowButtonStyle}"
                   TargetType="Button">
                <Setter Property="Command" Value="ui:WindowCommands.Minimize" />
                <Setter Property="ToolTip" Value="{x:Static properties:Resources.Minimize}" />
                <Setter Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <Image Width="10"
                                   Height="10"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   Source="/Assets/minimize.png"
                                   Stretch="Uniform" />
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="MaximizeButtonStyle"
                   BasedOn="{StaticResource WindowButtonStyle}"
                   TargetType="Button">
                <Setter Property="Command" Value="{x:Static ui:WindowCommands.Maximize}" />
                <Setter Property="ToolTip" Value="{x:Static properties:Resources.Maximize}" />
                <Setter Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <Image Width="10"
                                   Height="10"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   Source="/Assets/maximize.png"
                                   Stretch="Uniform" />
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="RestoreDownButtonStyle"
                   BasedOn="{StaticResource WindowButtonStyle}"
                   TargetType="Button">
                <Setter Property="Command" Value="{x:Static ui:WindowCommands.RestoreDown}" />
                <Setter Property="ToolTip" Value="{x:Static properties:Resources.RestoreDown}" />
                <Setter Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <Image Width="10"
                                   Height="10"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   Source="/Assets/restore.png"
                                   Stretch="Uniform" />
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="CloseButtonStyle"
                   BasedOn="{StaticResource WindowButtonStyle}"
                   TargetType="Button">
                <Setter Property="Command" Value="{x:Static ApplicationCommands.Close}" />
                <Setter Property="ToolTip" Value="{x:Static properties:Resources.Close}" />
                <Setter Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <Image Width="10"
                                   Height="10"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   Source="/Assets/close.png"
                                   Stretch="Uniform" />
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="HelpButtonStyle"
                   BasedOn="{StaticResource WindowButtonStyle}"
                   TargetType="Button">
                <Setter Property="Command" Value="{x:Static ApplicationCommands.Help}" />
                <Setter Property="ToolTip" Value="{x:Static properties:Resources.Help}" />
                <Setter Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <Image Height="10"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   Source="/Assets/help.png"
                                   Stretch="Uniform" />
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="StatusBarButtonStyle"
                   BasedOn="{StaticResource {x:Type Button}}"
                   TargetType="Button">
                <Setter Property="VerticalAlignment" Value="Stretch" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="FontSize" Value="{DynamicResource {x:Static themes:ThemeResourceKeys.StatusBarFontSizeKey}}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ButtonBase">
                            <Border Margin="{TemplateBinding Margin}"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Padding="{TemplateBinding Padding}">
                                <TextBlock HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                           VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                           FontSize="{TemplateBinding FontSize}"
                                           Foreground="{TemplateBinding Foreground}"
                                           Text="{TemplateBinding Content}" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static themes:ThemeResourceKeys.ButtonForegroundBrushKey}}" />
                    </Trigger>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsPressed" Value="True" />
                            <Condition Property="IsMouseOver" Value="True" />
                        </MultiTrigger.Conditions>
                        <Setter Property="Background" Value="#66000000" />
                    </MultiTrigger>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsMouseOver" Value="True" />
                            <Condition Property="IsPressed" Value="False" />
                        </MultiTrigger.Conditions>
                        <Setter Property="Background" Value="#33000000" />
                    </MultiTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="LabelTextStyle"
                   BasedOn="{StaticResource {x:Type TextBlock}}"
                   TargetType="TextBlock">
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="HorizontalAlignment" Value="Left" />
                <Setter Property="Margin" Value="18,3,12,3" />
            </Style>

            <Style x:Key="ReadOnlyTextBoxStyle"
                   BasedOn="{StaticResource {x:Type TextBox}}"
                   TargetType="TextBox">
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="HorizontalAlignment" Value="Left" />
                <Setter Property="IsEnabled" Value="False" />
            </Style>

        </ResourceDictionary>
    </Application.Resources>
</Application>
