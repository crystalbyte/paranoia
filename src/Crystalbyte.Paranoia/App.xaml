<Application x:Class="Crystalbyte.Paranoia.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:converters="clr-namespace:Crystalbyte.Paranoia.Converters"
             xmlns:input="System.Windows.Input"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <SolidColorBrush x:Key="WindowBackgroundBrush" Color="#1E1E1E" />
        <SolidColorBrush x:Key="AppControlBrush" Color="#2D2D30" />
        <SolidColorBrush x:Key="LightTextBrush" Color="WhiteSmoke" />
        <SolidColorBrush x:Key="DarkTextBrush" Color="#2D2D30" />
        <SolidColorBrush x:Key="AppMenuButtonMouseOverBrush" Color="#3E3E40" />
        <Color x:Key="AppAccentColor"
               A="255"
               B="204"
               G="122"
               R="0" />
        <SolidColorBrush x:Key="AppAccentBrush" Color="{StaticResource AppAccentColor}" />
        <Style x:Key="NormalTextStyle" TargetType="TextBlock">
            <Setter Property="Foreground" Value="{StaticResource LightTextBrush}" />
        </Style>
        <Style x:Key="AppButtonStyle" TargetType="ButtonBase">
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsPressed" Value="True" />
                        <Condition Property="IsMouseOver" Value="True" />
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" Value="{StaticResource AppAccentBrush}" />
                </MultiTrigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsMouseOver" Value="True" />
                        <Condition Property="IsPressed" Value="False" />
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" Value="{StaticResource AppMenuButtonMouseOverBrush}" />
                </MultiTrigger>
            </Style.Triggers>
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="Foreground" Value="{StaticResource LightTextBrush}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Margin="{TemplateBinding Margin}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="AppMenuButtonStyle"
               BasedOn="{StaticResource AppButtonStyle}"
               TargetType="Button">
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsPressed" Value="True" />
                        <Condition Property="IsMouseOver" Value="True" />
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" Value="{StaticResource AppAccentBrush}" />
                </MultiTrigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsMouseOver" Value="True" />
                        <Condition Property="IsPressed" Value="False" />
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" Value="{StaticResource AppMenuButtonMouseOverBrush}" />
                </MultiTrigger>
            </Style.Triggers>
            <Setter Property="Width" Value="36" />
            <Setter Property="Height" Value="36" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="BorderBrush" Value="White" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <Ellipse Width="36"
                                     Height="36"
                                     HorizontalAlignment="Center"
                                     VerticalAlignment="Center"
                                     Fill="{TemplateBinding Background}"
                                     Stroke="{TemplateBinding BorderBrush}"
                                     StrokeThickness="{TemplateBinding BorderThickness}" />
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ComposeMessageButtonStyle"
               BasedOn="{StaticResource AppMenuButtonStyle}"
               TargetType="Button">
            <Setter Property="Content">
                <Setter.Value>
                    <Image Source="/Assets/send.message.png" />
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="SyncButtonStyle"
               BasedOn="{StaticResource AppMenuButtonStyle}"
               TargetType="Button">
            <Setter Property="Content">
                <Setter.Value>
                    <Image Source="/Assets/refresh.png" />
                </Setter.Value>
            </Setter>
        </Style>
    </Application.Resources>
</Application>
