<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:properties="clr-namespace:Crystalbyte.Paranoia.Properties"
                    xmlns:ui="clr-namespace:Crystalbyte.Paranoia.UI">

    <Style TargetType="ButtonBase">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="{DynamicResource Metro.ControlBorderBrush}" />
        <Setter Property="Background" Value="{DynamicResource Metro.ControlBackgroundBrush}" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Foreground" Value="{DynamicResource Metro.NormalTextBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ButtonBase">
                    <Border Margin="{TemplateBinding Margin}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource Metro.DisabledBrush}" />
                <Setter Property="BorderBrush" Value="{DynamicResource Metro.DisabledBrush}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsPressed" Value="True" />
                    <Condition Property="IsMouseOver" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource Metro.AccentBrush}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="IsPressed" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource Metro.HoverBrush}" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style BasedOn="{StaticResource {x:Type ButtonBase}}" TargetType="Button">
        <Setter Property="Padding" Value="6,4,6,4" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{DynamicResource Metro.NormalTextBrush}" />
    </Style>

    <Style x:Key="Metro.MenuButtonStyle"
           BasedOn="{StaticResource {x:Type ButtonBase}}"
           TargetType="ButtonBase">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="Width" Value="32" />
        <Setter Property="Height" Value="32" />
    </Style>

    <Style x:Key="Metro.CommandButtonStyle"
           BasedOn="{StaticResource {x:Type ButtonBase}}"
           TargetType="ButtonBase">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Width" Value="32" />
        <Setter Property="Height" Value="24" />
    </Style>

    <Style x:Key="Metro.StatusBarButtonStyle"
           BasedOn="{StaticResource {x:Type ButtonBase}}"
           TargetType="ButtonBase">
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="Background" Value="Transparent" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource Metro.NormalTextBrush}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsPressed" Value="True" />
                    <Condition Property="IsMouseOver" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="#66000000" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="IsPressed" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="#33000000" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="Metro.MinimizeButtonStyle"
           BasedOn="{StaticResource Metro.CommandButtonStyle}"
           TargetType="ButtonBase">
        <Setter Property="Command" Value="{x:Static ui:WindowCommands.Minimize}" />
        <Setter Property="ToolTip" Value="{x:Static properties:Resources.MinimizeCommandTooltip}" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image Width="10"
                           Height="10"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           Source="/Assets/minimize.png" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Metro.MaximizeButtonStyle"
           BasedOn="{StaticResource Metro.CommandButtonStyle}"
           TargetType="ButtonBase">
        <Setter Property="Command" Value="{x:Static ui:WindowCommands.Maximize}" />
        <Setter Property="ToolTip" Value="{x:Static properties:Resources.MaximizeCommandTooltip}" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image Width="10"
                           Height="10"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           Source="/Assets/maximize.png"
                           Stretch="Uniform" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Metro.RestoreDownButtonStyle"
           BasedOn="{StaticResource Metro.CommandButtonStyle}"
           TargetType="ButtonBase">
        <Setter Property="Command" Value="{x:Static ui:WindowCommands.RestoreDown}" />
        <Setter Property="ToolTip" Value="{x:Static properties:Resources.RestoreDownCommandTooltip}" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image Width="10"
                           Height="10"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           Source="/Assets/restore.png"
                           Stretch="Uniform" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Metro.CloseButtonStyle"
           BasedOn="{StaticResource Metro.CommandButtonStyle}"
           TargetType="ButtonBase">
        <Setter Property="Command" Value="{x:Static ApplicationCommands.Close}" />
        <Setter Property="ToolTip" Value="{x:Static properties:Resources.CloseCommandTooltip}" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image Width="10"
                           Height="10"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           Source="/Assets/close.png"
                           Stretch="Uniform" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Metro.HelpButtonStyle"
           BasedOn="{StaticResource Metro.CommandButtonStyle}"
           TargetType="ButtonBase">
        <Setter Property="Command" Value="{x:Static ApplicationCommands.Help}" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image Height="10"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           Source="/Assets/help.png"
                           Stretch="Uniform" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Metro.ListViewButtonStyle"
           BasedOn="{StaticResource {x:Type ButtonBase}}"
           TargetType="ButtonBase">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Margin" Value="0,0,0,0" />
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="Padding" Value="8,1,8,1" />
    </Style>
</ResourceDictionary>