<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:properties="clr-namespace:Crystalbyte.Paranoia.Properties"
                    xmlns:themes="clr-namespace:Crystalbyte.Paranoia.Themes;assembly=Crystalbyte.Paranoia.Themes"
                    xmlns:ui="clr-namespace:Crystalbyte.Paranoia.UI">

    <Style x:Key="TitleTextStyle"
           BasedOn="{StaticResource {x:Type TextBlock}}"
           TargetType="TextBlock">
        <Setter Property="FontSize" Value="{DynamicResource {x:Static themes:ThemeResourceKeys.TitleFontSizeKey}}" />
        <Setter Property="FontWeight" Value="{DynamicResource {x:Static themes:ThemeResourceKeys.TitleFontWeightKey}}" />
        <Setter Property="FontFamily" Value="{DynamicResource {x:Static themes:ThemeResourceKeys.TitleFontFamilyKey}}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static themes:ThemeResourceKeys.NormalTextForegroundBrushKey}}" />
    </Style>

    <Style x:Key="SubtitleTextStyle"
           BasedOn="{StaticResource {x:Type TextBlock}}"
           TargetType="TextBlock">
        <Setter Property="FontSize" Value="{DynamicResource {x:Static themes:ThemeResourceKeys.SubtitleFontSizeKey}}" />
        <Setter Property="FontWeight" Value="{DynamicResource {x:Static themes:ThemeResourceKeys.SubtitleFontWeightKey}}" />
        <Setter Property="FontFamily" Value="{DynamicResource {x:Static themes:ThemeResourceKeys.SubtitleFontFamilyKey}}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static themes:ThemeResourceKeys.NormalTextSecondaryForegroundBrushKey}}" />
    </Style>

    <Style x:Key="NormalTextStyle"
           BasedOn="{StaticResource {x:Type TextBlock}}"
           TargetType="TextBlock">
        <Setter Property="FontSize" Value="{DynamicResource {x:Static themes:ThemeResourceKeys.NormalTextMediumFontSizeKey}}" />
        <Setter Property="FontWeight" Value="{DynamicResource {x:Static themes:ThemeResourceKeys.NormalTextFontWeightKey}}" />
        <Setter Property="FontFamily" Value="{DynamicResource {x:Static themes:ThemeResourceKeys.NormalTextFontFamilyKey}}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static themes:ThemeResourceKeys.NormalTextForegroundBrushKey}}" />
    </Style>

    <Style x:Key="NavigationTextStyle"
           BasedOn="{StaticResource {x:Type TextBlock}}"
           TargetType="TextBlock">
        <Setter Property="FontSize" Value="{DynamicResource {x:Static themes:ThemeResourceKeys.NormalTextMediumFontSizeKey}}" />
        <Setter Property="FontWeight" Value="{DynamicResource {x:Static themes:ThemeResourceKeys.NormalTextFontWeightKey}}" />
        <Setter Property="FontFamily" Value="{DynamicResource {x:Static themes:ThemeResourceKeys.NormalTextFontFamilyKey}}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static themes:ThemeResourceKeys.NormalTextInverseForegroundBrushKey}}" />
    </Style>

    <Style x:Key="LabelTextStyle"
           BasedOn="{StaticResource {x:Type TextBlock}}"
           TargetType="TextBlock">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Margin" Value="18,3,12,3" />
    </Style>

    <Style x:Key="WindowButtonStyle"
           BasedOn="{StaticResource {x:Type Button}}"
           TargetType="Button">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Width" Value="32" />
        <Setter Property="Height" Value="24" />
    </Style>

    <Style x:Key="MinimizeButtonStyle"
           BasedOn="{StaticResource WindowButtonStyle}"
           TargetType="Button">
        <Setter Property="Command" Value="ui:WindowCommands.Minimize" />
        <Setter Property="ToolTip" Value="{x:Static properties:Resources.Minimize}" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image Width="10"
                           Height="10"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           Source="/Assets/minimize.png"
                           Stretch="Uniform" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MaximizeButtonStyle"
           BasedOn="{StaticResource WindowButtonStyle}"
           TargetType="Button">
        <Setter Property="Command" Value="{x:Static ui:WindowCommands.Maximize}" />
        <Setter Property="ToolTip" Value="{x:Static properties:Resources.Maximize}" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image Width="10"
                           Height="10"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           Source="/Assets/maximize.png"
                           Stretch="Uniform" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RestoreDownButtonStyle"
           BasedOn="{StaticResource WindowButtonStyle}"
           TargetType="Button">
        <Setter Property="Command" Value="{x:Static ui:WindowCommands.RestoreDown}" />
        <Setter Property="ToolTip" Value="{x:Static properties:Resources.RestoreDown}" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image Width="10"
                           Height="10"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           Source="/Assets/restore.png"
                           Stretch="Uniform" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CloseButtonStyle"
           BasedOn="{StaticResource WindowButtonStyle}"
           TargetType="Button">
        <Setter Property="Command" Value="{x:Static ApplicationCommands.Close}" />
        <Setter Property="ToolTip" Value="{x:Static properties:Resources.Close}" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image Width="10"
                           Height="10"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           Source="/Assets/close.png"
                           Stretch="Uniform" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="HelpButtonStyle"
           BasedOn="{StaticResource WindowButtonStyle}"
           TargetType="Button">
        <Setter Property="Command" Value="{x:Static ApplicationCommands.Help}" />
        <Setter Property="ToolTip" Value="{x:Static properties:Resources.Help}" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image Height="10"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           Source="/Assets/help.png"
                           Stretch="Uniform" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="StatusBarButtonStyle"
           BasedOn="{StaticResource {x:Type Button}}"
           TargetType="Button">
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="FontSize" Value="{DynamicResource {x:Static themes:ThemeResourceKeys.StatusBarFontSizeKey}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ButtonBase">
                    <Border Margin="{TemplateBinding Margin}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}">
                        <TextBlock HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                   FontSize="{TemplateBinding FontSize}"
                                   Foreground="{TemplateBinding Foreground}"
                                   Text="{TemplateBinding Content}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static themes:ThemeResourceKeys.ButtonForegroundBrushKey}}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsPressed" Value="True" />
                    <Condition Property="IsMouseOver" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="#66000000" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="IsPressed" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="#33000000" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ReadOnlyTextBoxStyle"
           BasedOn="{StaticResource {x:Type TextBox}}"
           TargetType="TextBox">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="IsEnabled" Value="False" />
    </Style>

    <Style x:Key="SortingToggleButtonStyle"
           BasedOn="{StaticResource {x:Type ToggleButton}}"
           TargetType="ToggleButton">
        <Setter Property="FontSize" Value="{DynamicResource {x:Static themes:ThemeResourceKeys.NormalTextMediumFontSizeKey}}" />
        <Setter Property="Content" Value="{x:Static properties:Resources.Descending}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static themes:ThemeResourceKeys.NormalTextForegroundBrushKey}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Margin="3,0"
                                   VerticalAlignment="Center"
                                   FontSize="{TemplateBinding FontSize}"
                                   Foreground="{TemplateBinding Foreground}"
                                   Text="{TemplateBinding Content}" />
                        <Path x:Name="Arrow"
                              Margin="0,1,0,0"
                              VerticalAlignment="Center"
                              Data="M 0 0 L 8 0 L 4 6"
                              Fill="{TemplateBinding Foreground}"
                              RenderTransformOrigin=".5 .5" />
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Arrow" Property="RenderTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="180" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Content" Value="{x:Static properties:Resources.Ascending}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static themes:ThemeResourceKeys.AppAccentBrushKey}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TextRadioButtonStyle"
           BasedOn="{StaticResource {x:Type RadioButton}}"
           TargetType="RadioButton">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static themes:ThemeResourceKeys.NormalTextForegroundBrushKey}}" />
        <Setter Property="FontSize" Value="{DynamicResource {x:Static themes:ThemeResourceKeys.NormalTextLargeFontSizeKey}}" />
        <Setter Property="FontWeight" Value="Thin" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <TextBlock FontSize="{TemplateBinding FontSize}"
                               FontWeight="{TemplateBinding FontWeight}"
                               Foreground="{TemplateBinding Foreground}"
                               Text="{TemplateBinding Content}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static themes:ThemeResourceKeys.AppAccentBrushKey}}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="IsChecked" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static themes:ThemeResourceKeys.NormalTextSecondaryForegroundBrushKey}}" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>