<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccountTestFailureMessage" xml:space="preserve">
    <value>Errors occurred during the configuration, you can correct any mistakes and try again.</value>
  </data>
  <data name="AccountTestSuccessMessage" xml:space="preserve">
    <value>Configuration finished successfully.</value>
  </data>
  <data name="AddContactCommandTooltip" xml:space="preserve">
    <value>add contact</value>
  </data>
  <data name="AddContactEmailDescription" xml:space="preserve">
    <value>The invitation will be sent to the following e-mail address.</value>
  </data>
  <data name="AddContactSubTitle" xml:space="preserve">
    <value>In order to communicate securely with another person an invitation must be sent and accepted.
Once your contact approves, messages can be securely exchanged.</value>
  </data>
  <data name="AddContactTitle" xml:space="preserve">
    <value>Invitation</value>
  </data>
  <data name="AddressWatermark" xml:space="preserve">
    <value>your e-mail address</value>
    <comment>IdentityScreen -&gt; TextBlock -&gt; EmailAddressTextBlock</comment>
  </data>
  <data name="AuthenticationFailedMessage" xml:space="preserve">
    <value>Auhentication failed.</value>
  </data>
  <data name="AutoConfigFailedText" xml:space="preserve">
    <value>Automatic configuration lookup failed, you need to manually provide the information below.</value>
  </data>
  <data name="AutoConfigSucceededText" xml:space="preserve">
    <value>Automatic configuration lookup succeeded.</value>
  </data>
  <data name="BackButtonText" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="CancelButtonText" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="ComplexityInsufficientErrorText" xml:space="preserve">
    <value>The password must have at least 4 characters and must </value>
  </data>
  <data name="ComposeMessageCommandToolTip" xml:space="preserve">
    <value>compose message</value>
  </data>
  <data name="ConfirmEncryptionPasswordWatermark" xml:space="preserve">
    <value>encryption password confirmation</value>
  </data>
  <data name="ContactAddressWatermark" xml:space="preserve">
    <value>your contacts e-mail address</value>
  </data>
  <data name="ContactColumnHeaderText" xml:space="preserve">
    <value>Contacts</value>
  </data>
  <data name="ContinueButtonText" xml:space="preserve">
    <value>Continue</value>
  </data>
  <data name="CreateIdentitySubTitle" xml:space="preserve">
    <value>In order to get you started we need a couple of information from you.</value>
    <comment>IdentityScreen -&gt;Run</comment>
  </data>
  <data name="CreateIdentityTitle" xml:space="preserve">
    <value>Identity</value>
    <comment>IdentityScreen -&gt;Run</comment>
  </data>
  <data name="DeleteContactCommandToolTip" xml:space="preserve">
    <value>delete contact</value>
  </data>
  <data name="EmailAddressDescription" xml:space="preserve">
    <value>Please enter the e-mail address associated with your e-mail account.</value>
  </data>
  <data name="EncryptionPasswordWatermark" xml:space="preserve">
    <value>encryption password</value>
  </data>
  <data name="FinishButtonText" xml:space="preserve">
    <value>Finish</value>
  </data>
  <data name="GravatarHyperlinkPrefix" xml:space="preserve">
    <value>Create a</value>
  </data>
  <data name="GravatarPromoText" xml:space="preserve">
    <value>No avatar yet?</value>
  </data>
  <data name="IdentityAddressDescription" xml:space="preserve">
    <value>Please enter the IMAP server password associated with your e-mail address, your password will obviously not be shared with anyone.</value>
  </data>
  <data name="IdentityPrivateDescription" xml:space="preserve">
    <value>To protect your sensitive data an encryption password must be chosen, do not share it with anyone.</value>
  </data>
  <data name="IdentityPublicDescription" xml:space="preserve">
    <value>Please enter your name and your e-mail address. These properties are public and will be visible to the people you communicate with.</value>
  </data>
  <data name="ImapHostWatermark" xml:space="preserve">
    <value>incoming host address (e.g. imap.gmail.com)</value>
  </data>
  <data name="ImapPortWatermark" xml:space="preserve">
    <value>port (e.g. 993) ...</value>
  </data>
  <data name="ImapSectionHeaderText" xml:space="preserve">
    <value>Please enter or correct  the incoming server properties (IMAP).</value>
  </data>
  <data name="ImapSecurityWatermark" xml:space="preserve">
    <value>security</value>
  </data>
  <data name="ImapTestFailureMessage" xml:space="preserve">
    <value>Failed to connect to incoming server ...</value>
  </data>
  <data name="ImapTestMessage" xml:space="preserve">
    <value>Attempting to connect to server ...</value>
  </data>
  <data name="ImapTestSuccessMessage" xml:space="preserve">
    <value>Connection to server successfully established.</value>
  </data>
  <data name="ImapUsernameWatermark" xml:space="preserve">
    <value>incoming server username</value>
  </data>
  <data name="InvalidEmailFormatErrorText" xml:space="preserve">
    <value>The value entered is not a valid email address.</value>
    <comment>IdentityScreenContext -&gt; EmailAddress</comment>
  </data>
  <data name="InvitationSubjectTemplate" xml:space="preserve">
    <value>{0} invites you to the Paranoia project.</value>
  </data>
  <data name="InviteButtonText" xml:space="preserve">
    <value>Send</value>
  </data>
  <data name="MailPasswordWatermark" xml:space="preserve">
    <value>e-mail server password</value>
  </data>
  <data name="MaxStringLength64ErrorText" xml:space="preserve">
    <value>The text must not exceed 64 characters.</value>
    <comment>IdentityScreenContext -&gt; Name</comment>
  </data>
  <data name="MessagesColumnHeaderText" xml:space="preserve">
    <value>Messages</value>
  </data>
  <data name="NameRequiredErrorText" xml:space="preserve">
    <value>The name field must not be empty.</value>
    <comment>IdentityScreenContext -&gt; Name</comment>
  </data>
  <data name="NameWatermark" xml:space="preserve">
    <value>your name</value>
    <comment>IdentityScreen -&gt; TextBlock -&gt; NameTextBlock</comment>
  </data>
  <data name="NetworkTestFailureMessage" xml:space="preserve">
    <value>Network not available.</value>
  </data>
  <data name="NetworkTestMessage" xml:space="preserve">
    <value>Checking network availability ...</value>
  </data>
  <data name="NetworkTestSuccessMessage" xml:space="preserve">
    <value>Network available.</value>
  </data>
  <data name="NullOrEmptyErrorText" xml:space="preserve">
    <value>This field must not be empty.</value>
    <comment>IdentityScreenContext -&gt; EmailAddress</comment>
  </data>
  <data name="PasswordComplexityInsufficientErrorText" xml:space="preserve">
    <value>The password must contain a number and a special character, in addition the length must not be shorter than 4.</value>
  </data>
  <data name="PasswordDescription" xml:space="preserve">
    <value>Please enter the password associated with your e-mail account.</value>
  </data>
  <data name="PasswordNotMatchingErrorText" xml:space="preserve">
    <value>The passwords do not match.</value>
  </data>
  <data name="PasswordRequiredErrorText" xml:space="preserve">
    <value>The password must not be empty.</value>
  </data>
  <data name="ResolvingConfigText" xml:space="preserve">
    <value>Resolving server configuration ...</value>
  </data>
  <data name="ServerSettingsDescription" xml:space="preserve">
    <value>In order to send and receive e-mails an incoming and outgoing server must be specified.</value>
  </data>
  <data name="ServerSettingsTestDescription" xml:space="preserve">
    <value>Please wait while the configuration is being validated.</value>
  </data>
  <data name="ServerSettingsTestTitle" xml:space="preserve">
    <value>Validation</value>
  </data>
  <data name="ServerSettingsTitle" xml:space="preserve">
    <value>Settings </value>
  </data>
  <data name="SmtpHostWatermark" xml:space="preserve">
    <value>outgoing host address (e.g. smtp.gmail.com)</value>
  </data>
  <data name="SmtpPasswordWatermark" xml:space="preserve">
    <value>outgoing server password</value>
  </data>
  <data name="SmtpSectionHeaderText" xml:space="preserve">
    <value>Please enter or correct the outgoing server properties (SMTP).</value>
  </data>
  <data name="SmtpSecurityWatermark" xml:space="preserve">
    <value>security</value>
  </data>
  <data name="SmtpTestFailureMessage" xml:space="preserve">
    <value>Failed to send message using the outgoing server properties ...</value>
  </data>
  <data name="SmtpTestMessage" xml:space="preserve">
    <value>Attempting to send test message ...</value>
  </data>
  <data name="SmtpTestMessageSubject" xml:space="preserve">
    <value>Test message</value>
  </data>
  <data name="SmtpTestSuccessMessage" xml:space="preserve">
    <value>Message successfully sent.</value>
  </data>
  <data name="SmtpUsernameWatermark" xml:space="preserve">
    <value>outgoing server username</value>
  </data>
  <data name="SubjectRequiredErrorText" xml:space="preserve">
    <value>The subject field must not be empty.</value>
  </data>
  <data name="SubjectStringLengthErrorText" xml:space="preserve">
    <value>The subject must not exceed 256 characters.</value>
  </data>
  <data name="TestFailedMessage" xml:space="preserve">
    <value>Some settings seem to be incorrect, you can navigate back to correct any invalid entries or continue despite the errors.</value>
  </data>
  <data name="TestSucceededMessage" xml:space="preserve">
    <value>All server settings seem to be correct.</value>
  </data>
</root>