<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:Crystalbyte.Paranoia.Themes.Converters"
                    xmlns:themes="clr-namespace:Crystalbyte.Paranoia.Themes;assembly=Crystalbyte.Paranoia.Themes">

    <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

    <SolidColorBrush x:Key="CheckBoxBorderBrushKey" Color="{x:Static SystemColors.ControlDarkColor}" />
    <SolidColorBrush x:Key="CheckBoxBackgroundBrushKey" Color="#333" />
    <Thickness x:Key="CheckBoxPaddingKey">3</Thickness>
    <Thickness x:Key="CheckBoxBorderThicknessKey">1</Thickness>
    <Thickness x:Key="CheckBoxMarginKey">0,3</Thickness>

    <Style TargetType="CheckBox">
        <Setter Property="Background" Value="{DynamicResource CheckBoxBackgroundBrushKey}" />
        <Setter Property="BorderBrush" Value="{DynamicResource CheckBoxBorderBrushKey}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static themes:ThemeResourceKeys.TextForegroundBrushKey}}" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Margin" Value="{DynamicResource CheckBoxMarginKey}" />
        <Setter Property="BorderThickness" Value="{DynamicResource CheckBoxBorderThicknessKey}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid Background="Transparent" SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Border x:Name="CheckBoxBorder"
                                Width="12"
                                Height="12"
                                Margin="0,0,12,0"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="0"
                                Padding="1.4">
                            <Grid>
                                <Rectangle HorizontalAlignment="Stretch"
                                           VerticalAlignment="Stretch"
                                           Fill="Transparent"
                                           RenderOptions.EdgeMode="Aliased" />
                                <Rectangle x:Name="optionMark"
                                           HorizontalAlignment="Stretch"
                                           VerticalAlignment="Stretch"
                                           Fill="{DynamicResource Metro.App.AccentBrush}"
                                           RenderOptions.EdgeMode="Aliased"
                                           Visibility="{Binding IsChecked,
                                                                RelativeSource={RelativeSource TemplatedParent},
                                                                Converter={StaticResource BooleanToVisibilityConverter}}" />
                            </Grid>
                        </Border>
                        <ContentPresenter x:Name="ContentPresenter"
                                          Grid.Column="1"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Focusable="False"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="CheckBoxBorder" Property="BorderBrush" Value="{DynamicResource {x:Static themes:ThemeResourceKeys.AppAccentBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="CheckBoxBorder" Property="Background" Value="{DynamicResource {x:Static themes:ThemeResourceKeys.CheckBoxMouseOverBackgroundBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="CheckBoxBorder" Property="BorderBrush" Value="{DynamicResource {x:Static themes:ThemeResourceKeys.ControlDisabledBorderBrushKey}}" />
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static themes:ThemeResourceKeys.ControlDisabledForegroundBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>