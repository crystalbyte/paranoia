<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:themes="clr-namespace:Crystalbyte.Paranoia.Themes;assembly=Crystalbyte.Paranoia.Themes"
                    xmlns:ui="clr-namespace:Crystalbyte.Paranoia.UI;assembly=Crystalbyte.Paranoia.Controls">

    <SolidColorBrush x:Key="TextBoxBorderBrushKey" Color="#555556" />
    <SolidColorBrush x:Key="TextBoxBackgroundBrushKey" Color="#2F2F30" />

    <Style x:Key="MonoChromeIconRectangleStyle" TargetType="Rectangle">
        <Setter Property="Width" Value="16" />
        <Setter Property="Margin" Value="0,1,0,0" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="Height" Value="16" />
        <Setter Property="Fill" Value="{DynamicResource {x:Static themes:ThemeResourceKeys.AppForegroundBrushKey}}" />
    </Style>

    <ContextMenu x:Key="TextBoxContextMenu">
        <MenuItem Command="ApplicationCommands.Cut"
                  FontFamily="{DynamicResource {x:Static themes:ThemeResourceKeys.AppFontFamilyKey}}"
                  FontSize="{DynamicResource {x:Static themes:ThemeResourceKeys.AppMediumFontSizeKey}}">
            <MenuItem.Icon>
                <Rectangle Style="{StaticResource MonoChromeIconRectangleStyle}">
                    <Rectangle.OpacityMask>
                        <ImageBrush ImageSource="/Crystalbyte.Paranoia.Themes.Dark;component/Assets/cut.png" />
                    </Rectangle.OpacityMask>
                </Rectangle>
            </MenuItem.Icon>
        </MenuItem>
        <MenuItem Command="ApplicationCommands.Copy"
                  FontFamily="{DynamicResource {x:Static themes:ThemeResourceKeys.AppFontFamilyKey}}"
                  FontSize="{DynamicResource {x:Static themes:ThemeResourceKeys.AppMediumFontSizeKey}}">
            <MenuItem.Icon>
                <Rectangle Style="{StaticResource MonoChromeIconRectangleStyle}">
                    <Rectangle.OpacityMask>
                        <ImageBrush ImageSource="/Crystalbyte.Paranoia.Themes.Dark;component/Assets/copy.png" />
                    </Rectangle.OpacityMask>
                </Rectangle>
            </MenuItem.Icon>
        </MenuItem>
        <MenuItem Command="ApplicationCommands.Paste"
                  FontFamily="{DynamicResource {x:Static themes:ThemeResourceKeys.AppFontFamilyKey}}"
                  FontSize="{DynamicResource {x:Static themes:ThemeResourceKeys.AppMediumFontSizeKey}}" />
    </ContextMenu>

    <Style TargetType="ui:SuggestiveTextBox">
        <Setter Property="SpellCheck.IsEnabled" Value="False" />
        <Setter Property="FontSize" Value="{DynamicResource {x:Static themes:ThemeResourceKeys.AppMediumFontSizeKey}}" />
        <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderBrushKey}" />
        <Setter Property="Background" Value="{StaticResource TextBoxBackgroundBrushKey}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled" />
        <Setter Property="TextOptions.TextRenderingMode" Value="ClearType" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
        <Setter Property="FontFamily" Value="{DynamicResource {x:Static themes:ThemeResourceKeys.InputFontFamilyKey}}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static themes:ThemeResourceKeys.AppForegroundBrushKey}}" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="Margin" Value="3" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="ContextMenu" Value="{StaticResource TextBoxContextMenu}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ui:SuggestiveTextBox">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                        <Grid>
                            <ScrollViewer x:Name="PART_ContentHost"
                                          Focusable="False"
                                          HorizontalScrollBarVisibility="Hidden"
                                          VerticalScrollBarVisibility="Hidden" />
                            <ContentPresenter x:Name="WatermarkHost"
                                              Margin="3,0"
                                              HorizontalAlignment="Left"
                                              VerticalAlignment="Center"
                                              Content="{TemplateBinding Watermark}"
                                              ContentTemplate="{TemplateBinding WatermarkTemplate}"
                                              IsHitTestVisible="False"
                                              Visibility="Collapsed" />
                            <Popup x:Name="PART_Popup"
                                   MaxHeight="300"
                                   HorizontalOffset="-1"
                                   IsOpen="False"
                                   Placement="Bottom"
                                   PlacementTarget="{Binding ElementName=PART_ContentHost}"
                                   StaysOpen="False"
                                   UseLayoutRounding="True"
                                   VerticalOffset="5">
                                <ListView x:Name="PART_ItemsHost"
                                          MinWidth="300"
                                          MinHeight="150"
                                          Margin="1"
                                          Background="{DynamicResource {x:Static themes:ThemeResourceKeys.WindowBackgroundBrushKey}}"
                                          BorderThickness="0"
                                          Focusable="False"
                                          ItemContainerStyle="{TemplateBinding ItemContainerStyle}"
                                          ItemTemplate="{TemplateBinding ItemTemplate}"
                                          ItemsPanel="{TemplateBinding ItemsPanel}"
                                          ItemsSource="{TemplateBinding ItemsSource}"
                                          KeyboardNavigation.DirectionalNavigation="Contained" />
                            </Popup>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused" Value="False" />
                                <Condition Property="IsWatermarkVisible" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="WatermarkHost" Property="Visibility" Value="Visible" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="BorderBrush" Value="{x:Static SystemColors.InactiveBorderBrush}" />
                            <Setter Property="Foreground" Value="{x:Static SystemColors.GrayTextBrush}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:ThemeResourceKeys.AppAccentBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>