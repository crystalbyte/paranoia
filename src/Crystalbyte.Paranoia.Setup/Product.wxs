<?xml version="1.0" encoding="UTF-8"?>
<Wix xmlns="http://schemas.microsoft.com/wix/2006/wi" xmlns:util="http://schemas.microsoft.com/wix/UtilExtension">
  <?include Product.wxi?>
  <Product Id="*" Name="$(var.ProductTitle)"
           Language="1033" Version="$(var.ProductVersion)"
           Manufacturer="$(var.Manufacturer)" UpgradeCode="$(var.UpgradeCode)">
    <Package InstallerVersion="200" Compressed="yes" InstallScope="perMachine" InstallPrivileges="elevated" />

    <MajorUpgrade DowngradeErrorMessage="A newer version of [ProductName] is already installed." />
    <MediaTemplate EmbedCab="yes" />

    <Icon Id="InstallerLogo" SourceFile="logo.ico"/>
    <Property Id="ARPPRODUCTICON" Value="InstallerLogo" />

    <Property Id="WIXUI_INSTALLDIR" Value="APPLICATIONFOLDER" />
    <UIRef Id="WixUI_InstallDir" />

    <!-- RemoveFolderEx requires that we "remember" the path for uninstall.
         Read the path value and set the APPLICATIONFOLDER_PROPERTY property with the value. -->
    <Property Id="APPLICATIONFOLDER_PROPERTY" Secure="yes">
      <RegistrySearch Key="$(var.HklmInstallPathRegKey)" Root="HKLM" Type="raw" Id="APPLICATIONFOLDER_REGSEARCH" Name="Path" />
    </Property>

    <Feature Id="ProductFeature" Title="$(var.ProductTitle)" Level="1">
      <ComponentGroupRef Id="PrimaryOutputComponent" />
      <ComponentRef Id="ProgramRegistrationComponent"/>
      <ComponentRef Id="ComServerRegistrationComponent"/>
      <ComponentRef Id="CleanupComponent" />
    </Feature>

    <DirectoryRef Id="APPLICATIONFOLDER">
      <!-- Setting up file clean up on uninstall. -->
      <Component Id="CleanupComponent" Guid="A1B39562-A269-452B-96F5-B1D25AB65CC6" Win64="no">
        <!-- Save the installation path to the registry. -->
        <RegistryValue Root="HKLM" Key="$(var.HklmInstallPathRegKey)" Name="Path" Type="string" Value="[APPLICATIONFOLDER]" KeyPath="yes" />

        <!-- Remove the installation key on uninstall. -->
        <RemoveRegistryKey Action="removeOnUninstall" Root="HKLM" Key="$(var.HklmCompanyRegKey)" />

        <!-- Delete the application folder on uninstall. -->
        <util:RemoveFolderEx On="uninstall" Property="APPLICATIONFOLDER_PROPERTY" />
      </Component>

      <Component Id="ProgramRegistrationComponent" Guid="47F3FB9E-CBB6-4999-BB06-BC616B73CEDB" Win64="no">
        <!-- MSDN Guidelines for File Associations and Default Programs
             http://msdn.microsoft.com/en-us/library/windows/desktop/ee872123(v=vs.85).aspx -->

        <!-- Register the application with the version independent program id "Crystalbyte.Paranoia". -->
        <RegistryValue Root="HKCR" Key="$(var.VerIndAppProgId)" Type="string" Value="$(var.ProductTitle)" KeyPath="yes" />
        <RegistryValue Root="HKCR" Key="$(var.VerIndAppProgId)\CLSID" Type="string" Value="$(var.AppClassId)" />
        <RegistryValue Root="HKCR" Key="$(var.VerIndAppProgId)\CurVer" Type="string" Value="$(var.AppProgId)" />
        <RemoveRegistryKey Action="removeOnUninstall" Root="HKCR" Key="$(var.VerIndAppProgId)" />

        <!-- Register the application with the versioned program id "Crystalbyte.Paranoia.1". -->
        <RegistryValue Root="HKCR" Key="$(var.AppProgId)" Type="string" Value="$(var.ProductTitle)" KeyPath="yes" />
        <RegistryValue Root="HKCR" Key="$(var.AppProgId)\CLSID" Type="string" Value="$(var.AppClassId)" />
        <RemoveRegistryKey Action="removeOnUninstall" Root="HKCR" Key="$(var.AppProgId)" />

        <RegistryValue Root="HKCR" Key="$(var.AppProgId)\CLSID\{$(var.AppClassId)}" Type="string" Value="$(var.ProductTitle)" KeyPath="yes" />
        <!-- here i stopped -->
        <RegistryValue Root="HKCR" Key="$(var.AppProgId)\FriendlyTypeName" Type="string" Value="[APPLICATIONFOLDER]$(var.Crystalbyte.Paranoia.TargetFileName),-$(var.AppNameResourceId)" />
        <RegistryValue Root="HKCR" Key="$(var.AppProgId)\DefaultIcon" Type="string" Value="$(var.Crystalbyte.Paranoia.TargetName)" />
        <RegistryValue Root="HKCR" Key="$(var.AppProgId)\shell\open\command" Type="string" Value='"[APPLICATIONFOLDER]$(var.Crystalbyte.Paranoia.TargetFileName)" "%1"' />
        <RemoveRegistryKey Action="removeOnUninstall" Root="HKCR" Key="$(var.VersionedProgId)" />

        <!-- Register the ".eml" file type. The key itself must not be removed on uninstall since other programs may continue using it. 
             TODO: Ideally we need to save the old value for the key and restore it upon removal. -->
        <RegistryValue Root="HKCR" Key=".$(var.EmlExtension)" Type="string" Value="$(var.VersionedProgId)" />
        <RegistryValue Root="HKCR" Key=".$(var.EmlExtension)" Name="PerceivedType" Type="string" Value="Document" />
        <RegistryValue Root="HKCR" Key=".$(var.EmlExtension)" Name="Content Type" Type="string" Value="message/rfc822" />

        <!-- TODO: Call SHChangeNotify to notify the shell to register the new file type using a custom action.-->
      </Component>

      <Component Id="ComServerRegistrationComponent">
        <!-- MSDN Register COM Application object.
             http://msdn.microsoft.com/en-us/library/windows/desktop/ee872123(v=vs.85).aspx -->

        <RegistryValue Root="HKCR" Key="$(var.ApplicationProgId)" Type="string" Value="$(var.ApplicationProgId)" KeyPath="yes" />
        <RegistryValue Root="HKCR" Key="$(var.ApplicationProgId)\CLSID" Type="string" Value="$(var.ApplicationClassId)" />
        <RegistryValue Root="HKCR" Key="$(var.ApplicationProgId)\{$(var.ApplicationClassId)}" Type="string" Value="$(var.ApplicationProgId)" />
        <RegistryValue Root="HKCR" Key="$(var.ApplicationProgId)\{$(var.ApplicationClassId)}\Implemented Categories\{62C8FE65-4EBB-45e7-B440-6E39B2CDBF29}" Type="string" Value="" />
        <RegistryValue Root="HKCR" Key="$(var.ApplicationProgId)\{$(var.ApplicationClassId)}\LocalServer32" Type="string" Value="@[APPLICATIONFOLDER]$(var.Crystalbyte.Paranoia.TargetFileName)" />
        <RegistryValue Root="HKCR" Key="$(var.ApplicationProgId)\{$(var.ApplicationClassId)}\ProgId" Type="string" Value="$(var.ApplicationProgId)" />
        <RemoveRegistryKey Action="removeOnUninstall" Root="HKCR" Key="$(var.ApplicationProgId)" />
      </Component>
    </DirectoryRef>
  </Product>

  <Fragment>
    <Directory Id="TARGETDIR" Name="SourceDir">
      <Directory Id="ProgramFilesFolder">
        <Directory Id="APPLICATIONFOLDER" Name="$(var.ProductName)" />
      </Directory>
    </Directory>
  </Fragment>

</Wix>